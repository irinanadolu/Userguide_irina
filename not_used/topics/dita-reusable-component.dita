<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="dita-reusable-component">
  <title><?oxy_comment_start author="steven_higgs" timestamp="20150804T125714+0300" comment="This was converted into a topic that introduces this concept and this task oriented content was merged into &quot;eppo-creating-reusable-content.dita&quot; and therefore is no longer needed."?>Working
    with Reusable Components<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Content Reuse<indexterm>reusable components</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>When you need to reuse a part of a DITA topic in different places (in the same topic or
      in different topics) it is recommended to create a separate component and insert only a
      reference to the new component in all places. Below are the steps for extracting a reusable
      component, inserting a reference to the component and quickly editing the content inside the
      component.</context>
    <steps>
      <step>
        <cmd>Select with the mouse the content that you want to reuse in the DITA file opened in
            <uicontrol>Author</uicontrol> mode.</cmd>
      </step>
      <step>
        <cmd>Start the action <uicontrol>Create Reusable Component</uicontrol> that is available on
          the DITA menu, the Author framework actions toolbar and the contextual menu of the Author
          editor.</cmd>
      </step>
      <step>
        <cmd>In the combo box <uicontrol>Reuse Content</uicontrol> select the DITA element with the
          content that you want to extract in a separate component. The combo box contains the
          current DITA element where the cursor is located (for example, a <codeph>p</codeph>
          element, <codeph>step</codeph>, <codeph>taskbody</codeph>, <codeph>conbody</codeph>, etc.)
          and also all the ancestor elements of the current element.</cmd>
      </step>
      <step>
        <cmd>In the <uicontrol>Description</uicontrol> area enter a textual description for quick
          identification by other users of the component.</cmd>
      </step>
      <step>
        <cmd>If you want to replace the extracted content with a reference to the new component you
          should leave the <uicontrol>Replace selection with content reference</uicontrol> option
          enabled.</cmd>
      </step>
      <step>
        <cmd>Press the <uicontrol>Save</uicontrol> button, which will open a file system dialog box
          where you have to select the folder and enter the name of the file that will store the
          reusable component.</cmd>
      </step>
      <step>
        <cmd>Press the <uicontrol>Save</uicontrol> button in the file system dialog box to save the
          reusable component in a file. If the checkbox was selected in the <uicontrol>Create
            Reusable Component</uicontrol> dialog box, the <codeph>conref</codeph> attribute will be
          added to the element that was extracted as a separate component. In
            <uicontrol>Author</uicontrol> mode the content that is referenced by the
            <codeph>conref</codeph> attribute is displayed with gray background and is read-only
          because it is stored in other file.</cmd>
      </step>
      <step>
        <cmd>Optionally, to insert a reference to the same component in other location just place
          the cursor at the insert location and run the action <uicontrol>Insert Reusable
            Component</uicontrol> that is available on the DITA menu, the Author framework actions
          toolbar and the contextual menu of the Author editor. In the file system dialog box, Just
          select the file that stores the component and press the <uicontrol>OK</uicontrol> button.
          The action will add a <codeph>conref</codeph> attribute to the DITA element at the insert
          location. The referenced content will be displayed in <uicontrol>Author</uicontrol> mode
          with gray background to indicate that it is not editable.</cmd>
      </step>
      <step>
        <cmd>Optionally, to edit the content inside the component just click the <uicontrol><image
              href="../img/editContent.png" id="image_p2t_wwm_wr"/>Edit Content</uicontrol> icon at
          the start of the gray background area which will open the component in a separate
          editor.</cmd>
      </step>
    </steps>
  </taskbody>
</task>