<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="oxy-editor-properties">
  <?oxy_comment_start author="steven_higgs" timestamp="20151210T150331+0200" comment="Moved to not_used folder. No longer needed."?>
  <title>oxy_editor() Custom Form Control Properties<?oxy_comment_end?></title>
  <!--RESOURCE-ONLY TOPIC-->
  <shortdesc>The <codeph>oxy_editor</codeph> function allows you to edit attributes or simple
    element values in the <uicontrol>Author</uicontrol> mode, using standard built-in form controls
    (such as combo boxes, text fields, pop-ups, URL choosers, etc.) or to implement your own custom
    form controls and renderers.</shortdesc>
  <body>
    <codeblock outputclass="language-css">myElement {
    content: oxy_editor(
        type, [<i>my form control</i>],
        edit, "@my_attr"
    )
}</codeblock>
    <p>The <codeph>oxy_editor</codeph> custom form control supports the following properties:</p>
    <p>
      <ul>
        <li><ph conkeyref="reusables-author-mode-customization/actionContext-property"/></li>
        <li conkeyref="reusables-author-mode-customization/actionID-property"/>
        <li><ph conkeyref="reusables-author-mode-customization/action-property"/><p>
            <codeblock outputclass="language-css">oxy_action(
          name, 'Insert Section', 
          description, 'Insert an element after the current one', 
          icon, url('insert.png'), 
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
          arg-fragment, '&lt;element&gt;${caret}&lt;/element&gt;',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)</codeblock>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/action-list-property"/><p>
            <codeblock outputclass="language-css">oxy_action_list(
          oxy_action(
                name, 'Insert', 
                description, 'Insert an element after the current one', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '&lt;element&gt;&lt;/element&gt;',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
          ),
          oxy_action(
                name, 'Delete', 
                description, 'Deletes the current element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation' 
          )
      )</codeblock>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/actionDisplayStyle-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/background-color-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/color-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/columns-property"/></li>
        <li>
          <p conkeyref="reusables-author-mode-customization/contentType_property"/>
        </li>
        <li>
          <p conkeyref="reusables-author-mode-customization/edit_property"/>
        </li>
        <li><ph conkeyref="reusables-author-mode-customization/editorSort"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/enable-read-only-context-property"/>
          If this property is missing or set to <codeph>false</codeph>, the <xref
            href="../topics/button-editor.dita#button-editor">button form controls</xref> or <xref
            href="button-group-editor.dita#button-group-editor">groups of buttons form
            controls</xref> are disabled. </li>
        <li><ph conkeyref="reusables-author-mode-customization/fontInherit-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/href-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/id-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/indentOnTab_property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/labels-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/rendererSeparator-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/rendererSort"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/resultSeparator-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/property-rows"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/selectionMode-property"/></li>
        <li>
          <p conkeyref="reusables-author-mode-customization/show_icon"/>
        </li>
        <li>
          <p conkeyref="reusables-author-mode-customization/show_text"/>
        </li>
        <li>
          <p conkeyref="reusables-author-mode-customization/text-align"/>
        </li>
        <li><ph conkeyref="reusables-author-mode-customization/text-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/tooltips-property"/> The property
          will be ignored if the number of tooltips and the number of values do not match.</li>
        <li><ph conkeyref="reusables-author-mode-customization/tooltip-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/transparent-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/type-property"/><p>
            <ul id="ul_lsc_vpl_rq">
              <li><codeph>oxy_textfield</codeph> - A text field form control, with optional content
                completion capabilities, is used to present and edit a single line of text.</li>
              <li><codeph>oxy_combobox</codeph> - A combo-box is used that can be a drop-down menu
                or a combination of a drop-down menu and a single-line text field.</li>
              <li><codeph>oxy_checkbox</codeph> - Single or multiple check boxes are used to present
                and select a value.</li>
              <li><codeph>oxy_popup</codeph> - A pop-up menu, allowing single or multiple
                selections, is used to provide quick access to various actions.</li>
              <li><codeph>oxy_button</codeph> - A button is used that invokes a specific author
                action.</li>
              <li><codeph>oxy_buttonGroup</codeph> - A group of buttons that invoke specific author
                actions.</li>
              <li><codeph>oxy_textArea</codeph> - A text box is used to present and edit multiple
                lines of text.</li>
              <li><codeph>oxy_urlChooser</codeph> - A dialog box with a browse button is used to
                select a location of local or remote resources.</li>
              <li><codeph>oxy_datePicker</codeph> - A form control with a calendar browser button is
                used to select a date in a specified format.</li>
              <li><codeph>oxy_htmlContent</codeph>- A form control box is used that is capable of
                rendering HTML content.</li>
            </ul>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/uncheckedValues-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/values-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/visible-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/width-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/hover-property-li"
          /><codeblock outputclass="language-css">p:before {
  content: oxy_button(hoverPseudoclassName, 'showBorder')
}
p:showBorder {
  border: 1px solid red;
}</codeblock></li>
      </ul>
    </p>
  </body>
  <related-links>
    <link href="implementing-custom-form-controls.dita#implementing-custom-form-controls"/>
  </related-links>
</topic>
