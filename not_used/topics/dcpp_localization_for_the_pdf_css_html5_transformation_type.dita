<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dcpp_localization_for_the_pdf_css_html5_transformation_type">
  <title><?oxy_comment_start author="Steven" timestamp="20190215T141014+0200" comment="Merged into &quot;dcpp_localization&quot;."?>Localization
    for the PDF - Based on HTML5 and CSS Transformation Type<?oxy_comment_end?></title>
  <body>
    <p>This section applies to the <uicontrol>DITA Map PDF - based on HTML5 &amp; CSS </uicontrol>
      transformation type. </p>
    <p>In this type of transformation, the intermediary merged DITA map is transformed to HTML5
      using the DITA-OT built-in support, so the customization of the internationalization (the
      labels for chapters, parts, figures, tables, notes, etc.) can be achieved by following the
      DITA-OT recommendations: <xref keyref="dot-addgeneratedtext" format="html" scope="external"
      />.</p>
    <p>It is recommended that you do this customization on a DITA-OT distribution deployed outside
      of the <b>Oxygen</b> installation. Otherwise, you will lose the customization when upgrading
        <b>Oxygen</b>. You can <xref href="https://www.oxygenxml.com/contact.html" format="html"
        scope="external">contact the <i>Oxygen support team</i></xref> to ask for the <b>Oxygen
        Publishing Engine</b> package.</p>
    <note type="tip">You can also use the internationalization technique described in the <xref
        href="dcpp_localization_for_the_pdf_css_transformation_type.dita"/> section, but you will
      first need to hide the structure generated by the XSL HTML5 transformation (for example, the
        <xmlelement>caption</xmlelement> elements for tables and <xmlelement>span</xmlelement>
      elements for notes), then replace the labels with your own, defined in the CSS.<p>For example,
        to change the label and numbering for
        tables:<codeblock outputclass="language-css">.table--title-label{
  display:none;
}

*[class ~= "topic/table"] > caption:before{
  content: "Table " counter(tablecount) ". ";
}</codeblock></p><p>In
        a similar way, you can alter the labels for
        notes:<codeblock outputclass="language-css">*[class ~= "topic/note"] > span.note__title {
  display:none;
}

*[class ~= "topic/note"]:before {
  content:" Note: ";
}
*[class ~= "topic/note"][type="caution"]:before {
  content: "Caution: ";
}
*[class ~= "topic/note"][type="important"]:before {
  content: "Important: ";
}
...</codeblock></p><p>To
        identify the selectors for the elements that you need to hide, see <xref
          href="dcpp_debugging_the_css.dita"/>.</p></note>
  </body>
</topic>
