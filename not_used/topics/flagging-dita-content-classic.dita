<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="flagging-dita-content-classic">
  <title><?oxy_comment_start author="Steven" timestamp="20200202T172541-0500" comment="Not applicable for DocBook."?>How
    to Flag DITA Content in WebHelp Output<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
          >WebHelp Classic<indexterm>Flag DITA content</indexterm></indexterm>
        <indexterm product="webhelp">Flag DITA content</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Flagging content in WebHelp output involves defining a set of images that will be used for
      marking content across your information set.</p>
    <p>To flag DITA content, you need to create a filter file that defines properties that will be
      applied on elements to be flagged. Generally, flagging is supported for <xref
        keyref="glossentry_block-element"><term>block elements</term></xref> (such as paragraphs),
      but not for phrase-level elements within a paragraph. This ensures that the images that will
      flag the content are easily scanned by the reader, instead of being buried in the text.</p>
    <section id="using_oxygen_xml_editorauthor">
      <title>Using Oxygen XML Editor/Author</title>
      <p>To flag content in the DITA Map to WebHelp output using a transformation scenario from
        within <b>Oxygen XML Editor/Author</b>, follow this procedure:<ol>
          <li>Create a DITA filter file (DITAVAL) and add it in a directory of your choice (for
            example, named <filepath>myFile.ditaval</filepath>.</li>
          <li>Define the property for the elements you want to be flagged. For example, if you want
            to flag any element that has the <xmlatt>audience</xmlatt> attribute set to
              <codeph>programmer</codeph>, the content of the DITAVAL file should look like
              this:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?> 
&lt;val>
  &lt;prop att="audience" val="programmer" action="flag"
 img="D:\resource\delta.gif" alt="sample alt text"/>
&lt;/val></codeblock><note>For
              an element to be flagged, at least one attribute-value pair needs to have a property
              declared in the DITAVAL file.</note></li>
          <li>Edit a <uicontrol>DITA Map to WebHelp</uicontrol> transformation scenario.</li>
          <li>Specify the DITAVAL file in the <uicontrol>Filters</uicontrol> tab (with the
              <uicontrol>Use DITAVAL File</uicontrol> option).</li>
          <li>Run the transformation scenario.</li>
        </ol></p>
    </section>
    <section id="using_a_script_outside_of_oxygen_xml_editorauthor">
      <title>Using a Script Outside of Oxygen XML Editor/Author</title>
      <note conkeyref="reusables-transforming-documents/note-command-line"
        product="author developer editor authorEclipse developerEclipse editorEclipse"/>
      <p>To flag content in the DITA Map to WebHelp output using a script outside of <b>Oxygen XML
          Editor/Author</b>, follow this procedure:<ol>
          <li>Create a DITA filter file (DITAVAL) and add it in a directory of your choice (for
            example, named <filepath>myFile.ditaval</filepath>.</li>
          <li>Define the property for the elements you want to be flagged. For example, if you want
            to flag any element that has the <xmlatt>audience</xmlatt> attribute set to
              <codeph>programmer</codeph>, the content of the DITAVAL file should look like
              this:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?> 
&lt;val>
  &lt;prop att="audience" val="programmer" action="flag"
 img="D:\resource\delta.gif" alt="sample alt text"/>
&lt;/val></codeblock><note>For
              an element to be flagged, at least one attribute-value pair needs to have a property
              declared in the DITAVAL file.</note></li>
          <li>Use the <codeph>args.filter</codeph> parameter in your transformation script and set
            its value to the path of the DITAVAL file you created.</li>
          <li>Execute the transformation script.</li>
        </ol></p>
      <p>For example:<ul>
          <li>
            <p><b>Windows:</b></p>
            <p><codeph>dita.bat -i c:\mySampleMap.ditamap -f webhelp
                -Dargs.filter=c:\myFile.ditaval</codeph></p>
          </li>
          <li>
            <p><b>Mac OS X/ Linux:</b></p>
            <p><codeph>dita -i /mySampleMap.ditamap -f webhelp
                -Dargs.filter=/myFile.ditaval</codeph></p>
          </li>
        </ul></p>
    </section>
  </body>
</topic>
