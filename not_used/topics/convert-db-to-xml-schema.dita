<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="convert-db-to-xml-schema">
  <title><?oxy_comment_start author="steven_higgs" timestamp="20160219T162455+0200" comment="Converted to topic. This task moved to not_used folder."?>Convert
    Database Structure to XML Schema<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Tools Menu <indexterm>Convert DB Structure to XML Schema</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p><ph keyref="product"/> includes a tool that allows you to create an XML Schema from the
        structure of a database. To convert a database structure to an XML Schema, use the following
        procedure:</p>
    </context>
    <steps>
      <step>
        <cmd>Select the <uicontrol>Convert DB Structure to XML Schema</uicontrol> action from the
            <uicontrol>Tools</uicontrol> menu.</cmd>
        <stepresult>The <uicontrol>Convert DB Structure to XML Schema</uicontrol> dialog box is
          opened and your current database connections are displayed in the
            <uicontrol>Connections</uicontrol> section.</stepresult>
      </step>
      <step>
        <cmd>If the database source is not listed, click the <uicontrol>Configure Database
            Sources</uicontrol> button to open the <xref
            href="../topics/preferences-data-sources.dita#preferences-data-sources"><uicontrol>Data
              Sources</uicontrol> preferences page</xref> where you can configure data sources and
          connections.</cmd>
      </step>
      <step>
        <cmd>In the <uicontrol>Format for generated schema</uicontrol> section, select one of the
          following formats:</cmd>
        <choices id="choices_avt_c1m_hs">
          <choice><uicontrol>Flat schema</uicontrol> - A flat structure that resembles a tree-like
            view of the database without references to elements.</choice>
          <choice><uicontrol>Hierarchical schema</uicontrol> - Display the table dependencies
            visually, in a type of tree view where dependent tables are shown as indented child
            elements in the content model. Select this option if you want to configure the database
            columns of the tables to be converted.</choice>
        </choices>
      </step>
      <step>
        <cmd>Click <uicontrol>Connect</uicontrol></cmd>
        <stepresult>The database structure is listed in the <uicontrol>Select database
            tables</uicontrol> section according to the format you chose.</stepresult>
      </step>
      <step>
        <cmd>Select the database tables that you want to be included in the XML Schema.</cmd>
      </step>
      <step>
        <cmd>If you selected <uicontrol>Hierarchical schema</uicontrol> for the format, you can
          configure the database columns.</cmd>
        <substeps id="substeps_qvd_kfr_hs">
          <substep>
            <cmd>Select the database column you want to configure.</cmd>
          </substep>
          <substep>
            <cmd>In the <uicontrol>Criterion</uicontrol> section you can choose to convert the
              selected database column as an <uicontrol>Element</uicontrol>,
                <uicontrol>Attribute</uicontrol>, or to be <uicontrol>Skipped</uicontrol> in the
              resulting XML Schema.</cmd>
          </substep>
          <substep>
            <cmd>You can also change the name of the selected database column by changing it in the
                <uicontrol>Name</uicontrol> text field.</cmd>
          </substep>
        </substeps>
      </step>
      <step>
        <cmd>Click <uicontrol>Generate XML Schema</uicontrol>.</cmd>
        <stepresult>The database structure is converted to an XML Schema and it is opened for
          viewing and editing.</stepresult>
      </step>
    </steps>
  </taskbody>
</task>
