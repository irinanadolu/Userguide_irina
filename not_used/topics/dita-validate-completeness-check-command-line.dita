<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="dita-validate-completeness-check-command-line">
  <title><?oxy_comment_start author="steven_higgs" timestamp="20190808T144856+0300" comment="Moved to the not_used folder because we don&apos;t want to make this option public since it now requires a scripting license."?>DITA
    Map Validation and Completeness Check from the Command-Line Interface<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Maps<indexterm>Validate and Check for Completeness<indexterm>Run
                from Command-Line</indexterm></indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>You can execute a <xref keyref="dita_validate-and-check-for-completeness"><uicontrol>Validate
          and Check for Completeness</uicontrol> operation</xref> with a script ran from the
      command-line interface.</p>
    <p>
      <note conkeyref="reusables-user-guide/scripting-note"/>
    </p>
    <p conkeyref="reusables-user-guide/scripting-p"/>
    <p>You can execute a <xref keyref="dita_validate-and-check-for-completeness"><uicontrol>Validate
          and Check for Completeness</uicontrol> operation</xref> with a script ran from the
      command-line interface. The operation can be executed by running the following script:<ul>
        <li><b>Windows:</b><codeblock outputclass="language-ini">validateCheckDITA.bat -i mainDitamapPath -s settingsFile -r reportFile</codeblock></li>
        <li><b>Linux:</b><codeblock outputclass="language-ini">sh validateCheckDITA.sh -i mainDitamapPath -s settingsFile -r reportFile</codeblock></li>
        <li><b>Mac OS
          X:</b><codeblock outputclass="language-ini">sh validateCheckDITA.sh -i mainDitamapPath -s settingsFile -r reportFile</codeblock></li>
      </ul>The script is located in the <ph keyref="product"/> installation folder and can be
      integrated in an external batch process launched from the command-line interface. The script
      accepts a variety of command-line arguments that allow you to configure the validation.</p>
    <p>The accepted arguments are as follows:</p>
    <p>
      <parml>
        <plentry>
          <pt>mainDitamapPath</pt>
          <pd>The path to the main <xref keyref="glossentry_ditamap"><term>DITA map</term></xref>
            file to validate. This is a required parameter.</pd>
        </plentry>
        <plentry>
          <pt>settingsFile</pt>
          <pd>The options file for the validate and completeness check. This file can be obtained
            from the <xref
              keyref="dita_validate-and-check-for-completeness/dita-map-completeness-dialog"
                ><uicontrol>DITA Map Completeness Check</uicontrol> dialog box</xref> by using the
              <uicontrol>Export Settings</uicontrol> action. If this parameter is missing, the
            default options for the validation will be used.</pd>
        </plentry>
        <plentry>
          <pt>reportFile</pt>
          <pd>The file where the validation report will be saved. If this parameter is missing, the
            report will be displayed in the console.</pd>
        </plentry>
      </parml>
      <note>When using this script, some of the options that appear in the <xref
        keyref="dita_validate-and-check-for-completeness/dita-map-completeness-dialog"
            ><uicontrol>DITA Map Completeness Check</uicontrol> dialog box</xref> are ignored. The
        ignored options include:<ul>
          <li><xref keyref="dita_validate-and-check-for-completeness/batch-validate-referenced"
                ><uicontrol>Batch validate referenced DITA resources</uicontrol></xref></li>
          <li><xref keyref="dita_validate-and-check-for-completeness/DITAVAL-from-current-set"
                ><uicontrol>Use DITAVAL filters: From the current condition
            set</uicontrol></xref></li>
          <li><xref keyref="dita_validate-and-check-for-completeness/DITAVAL-from-all-sets"
                ><uicontrol>Use DITAVAL filters: From all available condition
              sets</uicontrol></xref></li>
          <li><xref keyref="dita_validate-and-check-for-completeness/DITAVAL-from-associated-sets"
                ><uicontrol>Use DITAVAL filters: From the associated transformation
                scenario</uicontrol></xref></li>
          <li><xref keyref="dita_validate-and-check-for-completeness/repport-attr-values-conflict"
                ><uicontrol>Report attributes and values that conflict with profiling
                preferences</uicontrol></xref></li>
        </ul></note>
      <note type="tip">You can use DITAVAL filter files with the script by specifying one or more
          <filepath>ditaval</filepath> files in the <xref
            keyref="dita_validate-and-check-for-completeness/DITAVAL-other-files"><uicontrol>Use DITAVAL
            filters: Other DITAVAL files</uicontrol> option</xref> in the <uicontrol>DITA Map
          Completeness Check</uicontrol> dialog box.</note>
    </p>
    <p><b>Result:</b> The validation result is displayed in the command-line interface. This
      includes whether or not the validation was successful, the number of issues, and the path to
      the report file (if the <b>reportFile</b> parameter was used), or the actual content of the
      validation result if the <b>reportFile</b> parameter was not used.</p>
    <note type="restriction">When using this script, the Saxon 9 XSLT processor used to apply <xref
      keyref="dita_validate-and-check-for-completeness/additional-schematron-checks">custom
        Schematron checks</xref> is not licensed and therefore the Schematron cannot call external
      Java extensions.</note>
  </body>
</topic>
