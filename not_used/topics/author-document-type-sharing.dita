<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="author-document-type-sharing">
  <title><?oxy_comment_start author="Steven" timestamp="20180502T100244+0300" comment="This was pretty much a duplicate of &quot;author-document-type-extension-sharing.dita&quot; so I&apos;m moving this to not_used folder."?>Sharing
    a Framework (Document Type)<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Framework customization<indexterm>Sharing</indexterm></indexterm>
        <indexterm>Sharing frameworks</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> allows you to share customizations of a specific XML document type by
        <xref href="dg-author-settings.dita#dg-author-settings">creating your own
          <term>framework</term></xref> in the <ph
        conkeyref="reusables-preferences-pages/preferences-document-type-association"/>.</p>
    <p>A <xref keyref="glossentry_framework"><term>framework</term></xref> (document type) can be
      shared with other authors by using <ph product="author developer editor">any of the following
        methods</ph><ph product="authorEclipse developerEclipse editorEclipse">the following
        method</ph>:</p>
    <section id="save_it_in_a_custom_folder">
      <title>Save it in a Custom Folder</title>
      <p>To share your customized <xref keyref="glossentry_framework"><term>framework</term></xref>
        with other members of your team, you can save it to a separate folder inside the
            <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"/>/frameworks</filepath>
        directory by following these steps:<note type="important">For this approach to work, the
          application must be installed in a folder with full write access.</note><ol>
          <li>Go to <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"
              />/frameworks</filepath> and create a directory for your new <term>framework</term>
            (for example, <filepath>custom_framework</filepath>). This directory will contain the
            resources for your customized <term>framework</term>. See the <b>DocBook</b>
            <term>framework</term> structure from <filepath><term
                conkeyref="reusables-user-guide/oxy-install-dir"/>/frameworks/docbook</filepath> as
            an example.</li>
          <li>Create your custom document type (<term>framework</term>) and specify the
              <filepath>custom_framework</filepath> directory for the
              <uicontrol>External</uicontrol> storage option.</li>
          <li>Configure the custom document type according to your needs. Take special care to make
            all file references relative to the <filepath><term
                conkeyref="reusables-user-guide/oxy-install-dir"/>/frameworks</filepath> directory
            by using the <xref href="editor-variables.dita#editor-variables/edVar-frameworks"
                ><b>${frameworks}</b> editor variable</xref>. <ph
              product="author authorEclipse  editor editorEclipse">See the <xref
                href="author-devel-guide-intro.dita">Author Mode Customization</xref> section for
              more details on creating and configuring a new document type
              (<term>framework</term>).</ph></li>
          <li>Add any additional resources (CSS files, new document templates, schemas used for
            validation, catalogs, etc.) to the directory you created in step 1.</li>
          <li>After completing your customizations in the <ph
              conkeyref="reusables-preferences-pages/preferences-document-type-association"/>, you
            should have a new configuration file saved in: <filepath><term
                conkeyref="reusables-user-guide/oxy-install-dir"
              />/frameworks/custom_framework/custom.framework</filepath>.</li>
          <li>To share the new <term>framework</term> directory with other users, have them copy it
            to their <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"
              />/frameworks</filepath> directory. The new <term>framework</term> will be available
            in the list of document types when <ph keyref="product"/> starts.<note>If you have a
                <filepath>frameworks</filepath> directory stored on your local drive, you can also
              go to the <xref href="framework-location.dita#framework-location"><menucascade>
                  <uicontrol>Document Type Association</uicontrol>
                  <uicontrol>Locations</uicontrol>
                </menucascade> preferences page</xref> and add your <filepath>frameworks</filepath>
              directory in the <uicontrol>Additional frameworks directories</uicontrol>
            list.</note></li>
        </ol></p>
    </section>
    <section product="author developer editor" id="save_it_at_project_level">
      <title>Save it at Project Level</title>
      <p>You can also share customized <xref keyref="glossentry_framework"
          ><term>frameworks</term></xref> by saving it at <xref keyref="glossentry_project-options"
          >project level</xref> in the <ph
          conkeyref="reusables-preferences-pages/preferences-document-type-association"/>. To do so,
        follow these steps:<ol id="ol_h4n_vpi_5m">
          <li>On your local drive, create a directory with full write access. This directory will
            contain the resources for your customized <term>framework</term> and the project
            file.</li>
          <li>Start <ph keyref="product"/>, go to the <xref href="using-the-project-view.dita"
                ><uicontrol>Project</uicontrol> view</xref> and create a project. Save it in the
            newly created directory.</li>
          <li>In the <ph
              conkeyref="reusables-preferences-pages/preferences-document-type-association"/>,
            select <xref keyref="glossentry_project-options"><uicontrol>Project
              Options</uicontrol></xref> at the bottom of the page.</li>
          <li>Create your custom document type (<term>framework</term>) and use the default
              <uicontrol>Internal</uicontrol> storage option. It will actually be saved in the
            project file (<filepath>.xpr</filepath>).</li>
          <li>Configure the custom document type according to your needs. Take special care to make
            all file references relative to the project directory by using the <xref
              href="editor-variables.dita#editor-variables/edVar-pd"><b>${pd}</b> editor
              variable</xref>. <ph product="author editor">See the <xref
                href="dg-complex-customization-tutorial.dita#dg-complex-customization-tutorial"/>
              section for more details on creating and configuring a new document type
                (<term>framework</term>).</ph></li>
          <li>Add any additional resources (CSS files, new document templates, schemas used for
            validation, catalogs, etc.) to your project.</li>
          <li>You can then share the new project directory with other team members. When they open
            the customized project file in the <xref href="using-the-project-view.dita"
                ><uicontrol>Project</uicontrol> view</xref>, the new <term>framework</term> becomes
            available in the list of document types.</li>
        </ol></p>
    </section>
    <section product="author developer editor" id="deploy_it_as_an_addon">
      <title>Deploy it as an Add-on </title>
      <p>You can also share your customized <term>framework</term> by deploying it as and add-on. To
        do so, follow the procedures in <xref
          href="packing-and-deploying-addons.dita#packing-and-deploying-addons"/>.</p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link
        href="author-document-type-extension-sharing.dita#author-document-type-extension-sharing"/>
    </linklist>
  </related-links>
</topic>
