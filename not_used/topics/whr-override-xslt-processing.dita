<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="whr-override-xslt-processing">
  <title><?oxy_comment_start author="Steven" timestamp="20200202T183214-0500" comment="Not applicable for DocBook."?>Overriding
    XSLT Processing Step of DITA WebHelp Classic Transformations<?oxy_comment_end?></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
          >WebHelp Classic<indexterm>Overriding the XSLT processing step</indexterm></indexterm>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
          >WebHelp Classic<indexterm>Customizing<indexterm>Overriding the XSLT processing
              step</indexterm></indexterm></indexterm>
        <indexterm product="webhelp">XSLT Import extension points for WebHelp</indexterm>
        <indexterm product="webhelp">XSLT Parameter extension points for WebHelp</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Since WebHelp output is primarily obtained by running XSLT transformations over the DITA
      input files (through the <uicontrol>DITA Map WebHelp Classic</uicontrol> transformation
      scenarios), one customization method would be to override the default XSLT templates that are
      used by the WebHelp transformations.</p>
    <p>There are two methods available to override the XSLT stylesheets implied by the WebHelp
      transformation. </p>
    <ul id="ul_tz1_s3t_hz">
      <li>The first method is to use one of the <xref
          href="whr-override-xslt-dita-xslt-import.dita#whr-override-xslt-dita-xslt-import"
            ><b>WebHelp XSLT-import extension points</b></xref> that allow you to import an XSLT
        stylesheet so that it becomes part of the normal build. This method uses the same mechanism
        as the <xref
          href="http://www.dita-ot.org/dev/extension-points/plugin-extension-points-xslt-import.html"
          format="html" scope="external">DITA-OT XSLT-import extension points</xref>. Note that this
        method will affect all the outputs generated with the WebHelp system.</li>
      <li>The second method implies that you will <xref
          href="whr-xslt-customization.dita#whr-xslt-customization">create a DITA-OT extension
          plugin</xref> with a custom <i>transtype</i> and use an Ant build file to define the
        transformation process. The main difference from the first customization method is that you
        will not affect all WebHelp transformations. Only the transformations that use the declared
        plugin <i>transtype</i> will be affected.</li>
    </ul>
  </body>
</topic>
