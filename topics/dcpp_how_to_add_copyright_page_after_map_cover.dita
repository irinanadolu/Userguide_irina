<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="dcpp_how_to_add_copyright_page_after_map_cover">
  <title>How to Add a Copyright Page after the Map Cover (Not for Bookmaps)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><ph keyref="pdf-html5-transformation"/>
          <indexterm>Cover page<indexterm>Copyright page</indexterm></indexterm></indexterm>
        <indexterm product="pdf-css ope">Cover page<indexterm>Copyright page</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Regular DITA maps do not have the concept of a copyright notice. This is available only in
      the DITA <i>bookmap</i> structure. </p>
    <p>If you are constrained to using a regular map and you need to add a copyright page between
      the front cover and the TOC, use the following technique:</p>
    <p>In your <xref href="dcpp_the_customization_css.dita">customization CSS</xref>, declare a new
      page layout:</p>
    <codeblock outputclass="language-css">@page copyright-notice-page {
  @top-left {
    content:none; /* Clear the headers for the copyright page */
  }
  @top-right {
    content:none;
  }
}</codeblock>
    <p>The element with the class <codeph>front-page/front-page</codeph> element contains the title
      of the publication and generates the cover page. A synthetic <codeph>:after</codeph> element
      is created that follows this element and it is placed on a different page. </p>
    <codeblock outputclass="language-css">*[class~="front-page/front-page"]:after{
  display:block;
 
  page: copyright-notice-page; /* Moves the synthetic element on a new page. */ 
 
  margin-top:90%; /* use margins to position the text in the page */
  margin-left: 5em;
  margin-right: 5em;

  content: "Copyright 2018-2019 MyCorp Inc. \A All rights reserved";

  text-align:center; /* More styling */
  color:blue;
}</codeblock>
    <p>If you need to add more content as blocks, use the <codeph>:after(2)</codeph>,
        <codeph>:after(3)</codeph> pseudo-elements:</p>
    <codeblock outputclass="language-css">*[class~="front-page/front-page"]:after(2){
  display:block;
  page: copyright-notice-page;  /* Continue on the same page as the first ':after'. */
  content: "Some more styled text";
  color:red;
}</codeblock>
    <p>If you want to extract information from the document, use the <codeph>oxy_xpath()</codeph>
      function. For example, if the copyright info is stored in the map like this:</p>
    <codeblock outputclass="language-css"> &lt;map ...>
  &lt;topicmeta>
    &lt;copyright>
      &lt;copyryear year="2018"/>
      &lt;copyrholder>MyCorp Inc.&lt;/copyrholder>     
    &lt;/copyright>
  &lt;/topicmeta>
 ...</codeblock>
    <p>then use this:</p>
    <codeblock outputclass="language-css">*[class ~= "front-page/front-page"]:after(3) {
    display: block;
    page: copyright-notice-page;
    content: 
    "Year: " 
        oxy_xpath('//*[contains(@class, " front-page/front-page ")]/*[contains(@class, " map/topicmeta ")]/*[contains(@class, " topic/copyright ")]/*[contains(@class, " topic/copyryear ")]/@year') 
    "\A Holder: " 
        oxy_xpath('//*[contains(@class, " front-page/front-page ")]/*[contains(@class, " map/topicmeta ")]/*[contains(@class, " topic/copyright ")]/*[contains(@class, " topic/copyrholder ")]/text()');
    color: green;
}
</codeblock>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="dcpp_how_to_debug_xpath_expressions.dita"/>
    </linklist>
  </related-links>
</topic>
