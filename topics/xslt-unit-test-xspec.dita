<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="xslt-unit-test-xspec">
  <title>XSLT Unit Test (XSpec)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XSLT<indexterm>Unit test (XSpec)</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p conkeyref="reusables-editing-documents/xspec-p-1"/>
    <section id="creating_an_xslt_unit_test">
      <title>Creating an XSLT Unit Test</title>
      <p>To create an XSLT Unit Test, go to <menucascade>
          <uicontrol>File</uicontrol>
          <uicontrol>New</uicontrol>
          <uicontrol>XSLT Unit Test</uicontrol>
        </menucascade>. You can also create an XSLT Unit Test from the contextual menu of an XSL
        file in the <xref href="using-the-project-view.dita#using-the-project-view"><uicontrol
            product="developer editor">Project</uicontrol><uicontrol
            product="developerEclipse editorEclipse">Project Explorer</uicontrol> view</xref>. <ph
          keyref="product"/> allows you to customize the XSpec document when you create it. In the
        customization dialog box, you can enter the path to an XSL document or to a master XSL
        document.</p>
      <p>When you create an XSpec document based on an XSL document, <ph keyref="product"/> uses
        information from the validation and transformation scenarios associated with the XSL file.
        From the transformation scenario <ph keyref="product"/> uses extensions and properties of
        Saxon <ph keyref="saxon9FullVersion"/>, improving the Ant scenario associated with the XSpec
        document. </p>
      <p>
        <fig product="developer editor">
          <title>New XSLT Unit Test Wizard</title>
          <image href="../img/New_XSLT_Unit_Test_wizard.png"/>
        </fig>
      </p>
      <p>
        <fig product="developerEclipse editorEclipse">
          <title>New XSLT Unit Test Wizard</title>
          <image href="../img/EC_New_XSLT_Unit_Test_wizard.png"/>
        </fig>
      </p>
    </section>
    <section id="running_an_xslt_unit_test">
      <title>Running an XSLT Unit Test</title>
      <p conkeyref="reusables-editing-documents/xspec-p-2"/>
    </section>
    <section id="testing_a_stylesheet">
      <title>Testing a Stylesheet</title>
      <p>An XSpec file contains one or more test scenarios. You can test a stylesheet in one of the
        following ways:<ul>
          <li>
            <p><b>Test an entire stylesheet</b> - Testing is performed in a certain context. You can
              define a context as follows:<ul id="ul_gvx_yzk_tlb">
                <li>Inline context, building the test based on a
                  string.<codeblock outputclass="language-xml">&lt;x:scenario label="when processing a para element">
    &lt;x:context>
        &lt;para>...&lt;/para>
    &lt;/x:context>
    ...
&lt;/x:scenario>  </codeblock></li>
                <li>Based on an external file, or on a part of an external file extracted with an
                  XPath
                  expression.<codeblock outputclass="language-xml">&lt;x:scenario label="when processing a para element">
    &lt;x:context href="source/test.xml" select="/doc/body/p[1]" />
    ...
&lt;/x:scenario>  </codeblock></li>
              </ul></p>
          </li>
          <li>
            <p><b>Test a function</b>:</p>
            <p>
              <codeblock outputclass="language-xml">&lt;x:scenario label="when capitalising a string">
  &lt;x:call function="eg:capital-case">
    &lt;x:param select="'an example string'" />
    &lt;x:param select="true()" />
  &lt;/x:call>
  ...
&lt;/x:scenario>  </codeblock>
            </p>
          </li>
          <li>
            <p><b>Test a template with a name</b>:</p>
            <p>
              <codeblock outputclass="language-xml">&lt;x:scenario label="when creating a table">
  &lt;x:call template="createTable">
    &lt;x:param name="nodes">
      &lt;value>A&lt;/value>
      &lt;value>B&lt;/value>
    &lt;/x:param>
    &lt;x:param name="cols" select="2" />
  &lt;/x:call>
&lt;/x:scenario></codeblock>
            </p>
          </li>
        </ul></p>
      <p>You can reference test files between each other, which allows you to define a suite of
        tests. For further details about test scenarios, go to <xref
          href="https://github.com/xspec/xspec/wiki/Writing-Scenarios" format="html"
          scope="external"/>.</p>
    </section>
    <section id="adding_a_catalog_to_an_xspec_transformation">
      <title>Adding a Catalog to an XSpec Transformation</title>
      <p>If your XSLT needs a catalog, you can add one to the XSpec transformation by doing one of
        the following:<ul conkeyref="reusables-editing-documents/xspec-ul-1">
          <li/>
        </ul></p>
    </section>
  </body>
</topic>
