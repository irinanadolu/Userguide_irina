<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-plugin_use-case_1_styling_codeblocks_with_a_zebra_effect">
  <title>How to Style Codeblocks with a Zebra Effect</title>
  <body>
    <p>Suppose you want your <i>codeblocks</i> to have a particular background color for one line,
      and another color for the next line. One advantage of this coloring technique is that you can
      clearly see when text from the <i>codeblock</i> is wrapped.</p>
    <p>This effect can be done by altering the HTML5 output, creating a <xmlelement>div</xmlelement>
      for each line from the code block, then styling them.</p>
    <p>To add this functionality using a DITA-OT plugin, follow these steps:</p>
    <ol id="ol_p3y_cxz_njb">
      <li>In the <filepath>
          <term keyref="glossentry_dita_ot_dir"/>\plugins\</filepath> folder, create a folder for
        this plugin (for example, <filepath>com.oxygenxml.pdf.custom.codeblocks</filepath>).</li>
      <li>Create a <b>plugin.xml</b> file (in the folder you created in step 1) that specifies the
        extension point and your customization stylesheet. For
        example:<codeblock outputclass="language-xml">&lt;plugin id="com.oxygenxml.pdf.custom.codeblocks"&gt;
  &lt;feature extension="com.oxygenxml.pdf.css.xsl.merged2html5"
              file="custom_codeblocks.xsl"/&gt;    
&lt;/plugin&gt;</codeblock></li>
      <li>Create your customization stylesheet (for example, <b>custom_codeblocks.xsl</b>) with the
        following
        content:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    exclude-result-prefixes="xs"
    version="2.0"&gt;
   
    &lt;xsl:template match="*[contains(@class, ' pr-d/codeblock ')]"&gt;
       &lt;div class='zebra'&gt;       
          &lt;xsl:analyze-string regex="\n" select="."&gt;
            &lt;xsl:matching-substring/&gt;
            &lt;xsl:non-matching-substring&gt;
               &lt;div&gt;&lt;xsl:value-of select="."/&gt;&lt;/div&gt;
            &lt;/xsl:non-matching-substring&gt;
          &lt;/xsl:analyze-string&gt;
       &lt;/div&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</codeblock></li>
      <li>Use the <xref keyref="ditamap-run-dita-ot-integrator"
          product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><uicontrol>Run DITA-OT Integrator</uicontrol> transformation scenario</xref><ph
          product="pdf-css ope"><uicontrol>Run DITA-OT Integrator</uicontrol> transformation
          scenario</ph> found in the <uicontrol>DITA Map</uicontrol> section in the
          <uicontrol>Configure Transformation Scenario(s)</uicontrol> dialog box.</li>
      <li>Create a custom CSS file with rules that style the <i>codeblock</i> structure. For
        example:<codeblock outputclass="language-css">div.zebra {
  font-family:courier, fixed, monospace;        
  white-space:pre-wrap;
}

div.zebra &gt; *:nth-of-type(odd){        
  background-color: silver;
}     </codeblock></li>
      <li> Edit a <b><ph keyref="pdf-html5-transformation"/></b> transformation scenario and
        reference your custom CSS file (using the <codeph>args.css</codeph> parameter).</li>
      <li>Run the transformation scenario.</li>
    </ol>
  </body>
</topic>
