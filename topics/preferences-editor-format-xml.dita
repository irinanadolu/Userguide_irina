<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-editor-format-xml">
  <title>XML Preferences</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Preferences<indexterm>XML formatting</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>To configure the <uicontrol>XML</uicontrol> Formatting options, <ph
        conkeyref="reusables-preferences-pages/open-the-preferences-page"/> and go to <menucascade>
        <uicontrol>Editor</uicontrol>
        <uicontrol>Format</uicontrol>
        <uicontrol>XML</uicontrol>
      </menucascade>.</p>
    <p>The following options are available:<dl>
        <dlentry>
          <dt><uicontrol product="author developer editor">Format</uicontrol><uicontrol
              product="authorEclipse developerEclipse editorEclipse">Format and Indent</uicontrol>
            Section</dt>
          <dd>
            <p>This section includes the following drop-down boxes:</p>
            <p>
              <dl>
                <dlentry>
                  <dt><uicontrol>Preserve empty lines</uicontrol></dt>
                  <dd>The <uicontrol>Format and Indent</uicontrol> operation preserves all empty
                    lines found in the document.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Preserve text as it is</uicontrol></dt>
                  <dd>The <uicontrol>Format and Indent</uicontrol> operation preserves text content
                    as it is, without removing or adding any white space.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Preserve line breaks in attributes</uicontrol></dt>
                  <dd>Line breaks found in attribute values are preserved.<note>When this option is
                      selected, the <xref
                        href="#preferences-editor-format-xml/break-long-attributes" format="dita"
                          ><uicontrol>Break long attributes</uicontrol> option</xref> is
                      automatically disabled.</note></dd>
                </dlentry>
                <dlentry id="break-long-attributes">
                  <dt><uicontrol>Break long attributes</uicontrol></dt>
                  <dd>The <uicontrol>Format and Indent</uicontrol> operation breaks long attribute
                    values.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Indent inline elements</uicontrol></dt>
                  <dd>
                    <p>The <term keyref="glossentry_inline-element">inline elements</term> are
                      indented on separate lines if they are preceded by white spaces and they
                      follow another element start or end tag. For example:</p>
                    <p>Original XML:
                      <codeblock outputclass="language-xml" xml:space="preserve">&lt;root&gt;
  text &lt;parent&gt; &lt;child&gt;&lt;/child&gt; &lt;/parent&gt;
&lt;/root&gt;</codeblock></p>
                    <p><uicontrol>Indent inline elements</uicontrol>
                      selected:<codeblock outputclass="language-xml" xml:space="preserve">&lt;root&gt; text &lt;parent&gt;
    &lt;child/&gt;
  &lt;/parent&gt;
&lt;/root&gt;</codeblock></p>
                    <p><uicontrol>Indent inline elements</uicontrol> not
                      selected:<codeblock outputclass="language-xml" xml:space="preserve">&lt;root&gt; text &lt;parent&gt; &lt;child/&gt; &lt;/parent&gt; &lt;/root&gt;</codeblock></p>
                  </dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Expand empty elements</uicontrol></dt>
                  <dd>If not selected (default), the <uicontrol>Format and Indent</uicontrol>
                    operation results in an empty XML element being serialized in a compact form
                      (<codeph>&lt;a atr1="v1"/&gt;</codeph>). If selected, the same operation
                    results in empty XML elements being serialized in expanded form (for example,
                      <codeph>&lt;a atr1="v1"&gt;&lt;/a&gt;</codeph>).<note type="other"
                      othertype="Notes" product="author editor authorEclipse editorEclipse">
                      <ul irina="irina">
                        <li>When using the <uicontrol>Format and Indent</uicontrol> operation in
                            <uicontrol>Text</uicontrol> mode, if the <xref
                            href="#preferences-editor-format-xml/schema-aware-format-indent"
                            format="dita"><uicontrol>Schema-aware format and indent</uicontrol>
                            option</xref> is enabled, <ph keyref="product"/> will use information
                          from the associated schema and avoid expanding tags for elements that are
                          defined as <i>empty</i> in the schema.</li>
                        <li>When saving a document in <uicontrol>Author</uicontrol> mode, if the
                            <xref
                            href="preferences-schema-aware.dita#preferences-schema-aware/schema-aware-normalization"
                              ><uicontrol>Schema-aware normalization, format, and indent</uicontrol>
                            option in the <uicontrol>Schema-Aware</uicontrol> preferences
                            page</xref> is enabled, <ph keyref="product"/> will use information from
                          the associated schema and avoid expanding tags for elements that are
                          defined as <i>empty</i> in the schema (therefore, text or other elements
                          are not allowed inside them).</li>
                      </ul>
                    </note><note product="developer developerEclipse">When using the
                        <uicontrol>Format and Indent</uicontrol> operation in
                        <uicontrol>Text</uicontrol> mode, if the <xref
                        href="#preferences-editor-format-xml/schema-aware-format-indent"
                        format="dita"><uicontrol>Schema-aware format and indent</uicontrol>
                        option</xref> is enabled, <ph keyref="product"/> will use information from
                      the associated schema and avoid expanding tags for elements that are defined
                      as <i>empty</i> in the schema.</note></dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Sort attributes</uicontrol></dt>
                  <dd>The <uicontrol>Format and Indent</uicontrol> operation sorts the attributes of
                    an element lexicographically.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Add space before slash in empty elements</uicontrol></dt>
                  <dd>Inserts a space character before the trailing / and &gt; of empty
                    elements.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Break line before an attribute name</uicontrol></dt>
                  <dd>When selected, the <uicontrol>Format and Indent</uicontrol> operation always
                    breaks the line before any attribute name in an XML element. By default, the
                    setting is not selected, which means that new lines might still be added before
                    the attribute names but only if the line of content would overflow the maximum
                    line width specified in the <xref href="preferences-editor-format.dita"
                        ><uicontrol>Format</uicontrol> preferences page</xref>.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
        <dlentry id="element-spacing-section">
          <dt><uicontrol>Element Spacing</uicontrol> Section</dt>
          <dd>
            <p>This section controls how the application handles whitespaces found in XML content.
              You can <uicontrol>Add</uicontrol> or <uicontrol>Remove</uicontrol> element names or
              simplified XPath expressions in the various tabs.</p>
            <p id="simplified-XPath">The XPath expressions can accept multiple attribute conditions
              and inside each condition you can use <i>AND/OR</i> boolean operators and parentheses
              to override the priority.</p>
            <p>You can use one or more of the following attribute conditions (default attribute
              values are not taken into account):<ul irina="irina">
                <li><i>element[@attr]</i> - Matches all instances of the specified element that
                  include the specified attribute.</li>
                <li><i>element[not(@attr)]</i> - Matches all instances of the specified element that
                  do not include the specified attribute.</li>
                <li><i>element[@attr = "value"]</i> - Matches all instances of the specified element
                  that include the specified attribute with the given value.</li>
                <li><i>element[@attr != "value"]</i> - Matches all instances of the specified
                  element that include the specified attribute and its value is different than the
                  one given.</li>
              </ul></p>
            <p><b>Example:</b> The following is an example of how you could use multiple boolean
              operators and parentheses inside an attribute
              condition:<codeblock outputclass="language-ini">*[@a and @b or @c and @d]
*[@a and (@b or @c) and @d]</codeblock></p>
            <p>The following are just examples of how simplified XPath expressions might look like:<ul irina="irina">
                <li><codeph>elementName</codeph></li>
                <li><codeph>//elementName</codeph></li>
                <li><codeph>/elementName1/elementName2/elementName3</codeph></li>
                <li><codeph>//xs:localName</codeph> Note: The namespace prefixes (such as
                    <codeph>xs</codeph>) are treated as part of the element name without taking its
                  binding to a namespace into account.</li>
                <li><codeph>//xs:documentation[@lang="en"]</codeph></li>
              </ul></p>
            <p>The tabs are as follows:<dl>
                <dlentry>
                  <dt><uicontrol>Preserve space</uicontrol></dt>
                  <dd>List of elements that will have the <uicontrol>Format and Indent</uicontrol>
                    operation preserve the whitespaces (such as blanks, tabs, and newlines).</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Default space</uicontrol></dt>
                  <dd>List of elements that will have the content normalized (multiple contiguous
                    whitespaces are replaced by a single space), before applying the
                      <uicontrol>Format and Indent</uicontrol> operation.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Mixed content</uicontrol></dt>
                  <dd>The elements from this list are treated as mixed content when applying the
                      <uicontrol>Format and Indent</uicontrol> operation. The lines are split only
                    when whitespaces are encountered.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Line break</uicontrol></dt>
                  <dd>List of elements that will have line breaks inserted, regardless of their
                    content. You can choose to break the line <i>before</i> the element,
                      <i>after</i>, or both.</dd>
                </dlentry>
              </dl></p>
          </dd>
        </dlentry>
        <dlentry id="schema-aware-format-indent">
          <dt><uicontrol id="pref_sa_format">Schema-aware format and indent</uicontrol></dt>
          <dd>The <uicontrol>Format and Indent</uicontrol> operation takes the schema information
            into account with regard to the <i>space preserve</i>, <i>mixed</i>, or <i>element
              only</i> properties of an element.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Indent</uicontrol> Section</dt>
          <dd>
            <p>Includes the following options:</p>
            <p>
              <dl>
                <dlentry>
                  <dt><uicontrol>Indent (when typing) in preserve space elements</uicontrol></dt>
                  <dd>Normally, the <term>Preserve space</term> elements (identified by the
                      <codeph>xml:space</codeph> attribute set to <codeph>preserve</codeph> or by
                    their presence in the <xref
                      href="#preferences-editor-format-xml/element-spacing-section" format="dita"
                        ><uicontrol>Preserve space</uicontrol> tab of the <uicontrol>Element
                        Spacing</uicontrol> list</xref>) are ignored by the <uicontrol>Format and
                      Indent</uicontrol> operation. When this option is selected and you edit one of
                    these elements, its content is formatted.</dd>
                </dlentry>
                <dlentry>
                  <dt><uicontrol>Indent on paste - sections with number of lines less than
                      300</uicontrol></dt>
                  <dd>When you paste a chunk of text that has fewer than 300 lines, the inserted
                    content is indented. To keep the original indent style of the document you copy
                    content from, deselect this option.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
      </dl></p>
  </body>
</topic>
