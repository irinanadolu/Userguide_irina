<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="json-schema-instance-generator">
  <title>Generating JSON Schema from a JSON File</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Generate JSON Schema tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> includes a tool for generating a sample JSON Schema from a JSON file.
      To generate a sample JSON Schema, select <uicontrol>Generate JSON Schema</uicontrol> from the
        <menucascade product="developer editor">
        <uicontrol>Tools</uicontrol>
        <uicontrol>JSON Tools</uicontrol>
      </menucascade><menucascade product="developerEclipse editorEclipse">
        <uicontrol>XML Tools</uicontrol>
        <uicontrol>JSON Tools</uicontrol>
      </menucascade> menu. The action opens a dialog box where you can configure some options for
      generating the JSON Schema.</p>
    <p>
      <fig>
        <title>Generate JSON Schema Dialog Box</title>
        <image href="../img/json-generate-schema.png"/>
      </fig>
    </p>
    <p>The <uicontrol>Generate JSON Schema</uicontrol> dialog box includes the following fields and options:<dl>
        <dlentry>
          <dt><uicontrol>JSON Document URL</uicontrol></dt>
          <dd>The URL of the JSON file. You can specify the path by using the text field, the
            history drop-down menu, or the browsing actions in the <uicontrol><image
                href="../img/BrowseDrop.png"/>Browse</uicontrol> drop-down list.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Output JSON Schema</uicontrol></dt>
          <dd>The path to the folder where the generated JSON Schema will be saved.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>JSON Schema version</uicontrol></dt>
          <dd>The version of the resulting JSON schema. The possible choices are: <uicontrol>Draft
              4</uicontrol>, <uicontrol>Draft 6</uicontrol>, <uicontrol>Draft 7</uicontrol>, and
              <uicontrol>Draft 2019-09</uicontrol>.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Extract matching format for strings</uicontrol></dt>
          <dd> If selected, the generator will attempt to find a format that matches the string
            values from the JSON Document. </dd>
        </dlentry>
        <dlentry id="number-instances">
          <dt><uicontrol>Add default values for simple types</uicontrol></dt>
          <dd>If selected, the <i>default</i> values (<i>0</i> for number, <i>""</i> for string,
              <i>false</i> for boolean) and <i>examples</i> for strings will be added.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Restrict additional content</uicontrol></dt>
          <dd>If selected, <i>additionalProperties</i> (for objects) and <i>additionalItems</i> (for
            arrays) will be set to <i>false</i> in the resulting schema. By default, these keys are
            not in the schema, meaning that providing additional content (according to the schema)
            is allowed.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Open in Editor</uicontrol></dt>
          <dd>If selected, the generated JSON Schema is opened in the editor.</dd>
        </dlentry>
      </dl></p>
    <p>You can click <uicontrol>Generate</uicontrol> at any point to generate the JSON Schema.</p>
  </body>
</topic>
