<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="api_faq_eclipse_custom_view">
  <title>How to Use a Custom View with the <ph keyref="product"/> Distribution</title>
  <body>
    <section id="question">
      <title>Question</title>
      <p>Is it possible to create a custom view in Eclipse that can insert certain XML fragments in
        the documents opened with the <ph keyref="product"/>?</p>
    </section>
    <section id="answer">
      <title>Answer</title>
      <p>Here you can find more information about the Eclipse part of the <i>Oxygen SDK</i>:</p>
      <p><xref href="https://www.oxygenxml.com/oxygen_sdk.html#oXygen_Eclipse_plugin" format="html"
          scope="external"/></p>
      <p>Use the provided <ph keyref="product"/> sample project as a starting point. From any custom
        view/component you can have singleton access to the using the
          <codeph>ro.sync.exml.workspace.api.PluginWorkspaceProvider.getPluginWorkspace()</codeph>
        API. </p>
      <p>The Java code for inserting a certain XML fragment in the currently open editor (either in
        the <uicontrol>Text</uicontrol> or <uicontrol>Author</uicontrol> editing modes) would look
        like
        this:<codeblock outputclass="language-java">    WSEditor currentEditorAccess = PluginWorkspaceProvider.getPluginWorkspace().
getCurrentEditorAccess(PluginWorkspace.MAIN_EDITING_AREA);
    if(currentEditorAccess.getCurrentPage() instanceof WSXMLTextEditorPage) {
      //Editor opened in Text page
      WSXMLTextEditorPage tp = 
(WSXMLTextEditorPage) currentEditorAccess.getCurrentPage();

      //You can access an API to insert text in the XML content
//      tp.getDocument().insertString(tp.getCaretOffset(), "&lt;testTag/>", null);
      //This is the internal StyledText implementation
//      tp.getTextComponent()
      //You can use this XPath API to find the range of an XML element.
//      tp.findElementsByXPath(xpathExpression)
 } else if(currentEditorAccess.getCurrentPage() instanceof WSAuthorEditorPage) {
      //Editor opened in Author page
//      try {
        WSAuthorEditorPage authPage = (WSAuthorEditorPage) 
currentEditorAccess.getCurrentPage();

        //Then you can do stuff like this to insert XML at the cursor position
//        authPage.getDocumentController().insertXMLFragment("&lt;testTag/>", 
authPage.getCaretOffset());
//      } catch (AuthorOperationException e) {
//        // TODO Auto-generated catch block
//        e.printStackTrace();
//      }
    } </codeblock></p>
    </section>
  </body>
</topic>
