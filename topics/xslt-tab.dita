<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="xslt-tab">
  <title>XSLT Tab</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XSLT transformation scenario<indexterm>XSLT tab</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph conkeyref="reusables-transforming-documents/intro-for-transformation-tabs"/></p>
    <p id="xml-xslt-tabs">The <uicontrol>XSLT</uicontrol> tab contains the following options:<dl>
        <dlentry conkeyref="reusables-transforming-documents/xml-url" id="xml-url">
          <dt/>
          <dd/>
        </dlentry>
      </dl><note><ph conkeyref="reusables-transforming-documents/ph-note1-xml-url"/> If the
        transformer engine is one of the built-in XSLT 2.0 / 3.0 engines and <xref
          href="#xslt-tab/advanced-options" format="dita">the name of an initial template</xref> is
        specified in the scenario, the <uicontrol>XML URL</uicontrol> field can be empty. The
          <uicontrol>XML URL</uicontrol> field can also be empty if you use <xref
          href="configuring-custom-xslt-processors.dita#configuring-custom-xslt-processors"
          format="dita">external XSLT processors</xref>. Otherwise, a value is mandatory in this
        field.</note><dl>
        <dlentry id="xsl-url">
          <dt><uicontrol>XSL URL</uicontrol></dt>
          <dd>Specifies the source XSL file that the transformation will use. <ph
              conkeyref="reusables-user-guide/specify-path-ph"/><ph
              product="author developer editor"> You can also use the <uicontrol><image
                  href="../img/Edit16.gif"/>Open in editor</uicontrol> button to open the specified
              file in the editor panel.</ph> This URL is resolved through the catalog resolver. If
            the catalog does not have a mapping for the URL, the file is used directly from its
            remote location.</dd>
        </dlentry>
        <dlentry id="use-xml-stylesheet-declaration">
          <dt><uicontrol>Use "xml-stylesheet" declaration</uicontrol></dt>
          <dd>If selected, the scenario applies the stylesheet specified explicitly in the XML
            document with the <codeph>xml-stylesheet</codeph> processing instruction. By default,
            this option is deselected and the transformation applies the XSLT stylesheet that is
            specified in the <uicontrol>XSL URL</uicontrol> field.</dd>
        </dlentry>
        <dlentry conkeyref="reusables-transforming-documents/transformer">
          <dt/>
          <dd/>
        </dlentry>
        <dlentry id="advanced-options">
          <dt><uicontrol><image href="../img/Options16.png"/>Advanced options</uicontrol></dt>
          <dd>Allows you to configure the <xref
              href="advanced-saxon-xslt-options.dita#advanced-saxon-xslt-options">advanced options
              of the Saxon HE/PE/EE engine</xref> for the current transformation scenario. To
            configure the same options globally, go to the <xref href="preferences-xslt-saxon8.dita"
              >Saxon-HE/PE/EE preferences page</xref>. For the current transformation scenario,
            these <uicontrol>Advanced options</uicontrol> override the options configured in that
            preferences page.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Parameters</uicontrol></dt>
          <dd>Opens a <xref href="xslt-stylesheet-parameters.dita"><uicontrol>Configure
                parameters</uicontrol> dialog box</xref> that allows you to configure the XSLT
            parameters used in the current transformation. In this dialog box, you can also
            configure the parameters for <xref href="#xslt-tab/additional-stylesheets" format="dita"
              >additional XSLT stylesheets</xref>. If the XSLT transformation engine is
            custom-defined, you cannot use this dialog box to configure the parameters sent to the
            custom engine. Instead, you can copy all parameters from the dialog box using contextual
            menu actions and edit the custom XSLT engine to include the necessary parameters in the
            command line that starts the transformation process.</dd>
        </dlentry>
        <dlentry id="extensions">
          <dt><uicontrol>Extensions</uicontrol></dt>
          <dd>Opens a <xref href="xslt-xquery-extensions.dita#xslt-xquery-extensions">dialog box for
              configuring the XSLT extension <term>JARS</term> or classes</xref> that define
            extension Java functions or extension XSLT elements used in the transformation.</dd>
        </dlentry>
        <dlentry id="additional-stylesheets">
          <dt><uicontrol>Additional XSLT stylesheets</uicontrol></dt>
          <dd>Opens a <xref href="additional-xslt-stylesheets.dita">dialog box for adding XSLT
              stylesheets</xref> that are applied on the main stylesheet specified in the
              <uicontrol>XSL URL</uicontrol> field. This is useful when a chain of XSLT stylesheets
            must be applied to the input XML document.</dd>
        </dlentry>
      </dl></p>
  </body>
</topic>
