<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="dg-text-area-form-control">
  <title>Text Area Form Control</title>
  <shortdesc>The <codeph>oxy_textArea</codeph> built-in form control is used for entering multiple
    lines of text in a graphical user interface box. A text area may include optional syntax
    highlight capabilities to present the form control.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS extensions<indexterm>Form Controls<indexterm>Text
            area</indexterm></indexterm></indexterm>
        <indexterm>Form Controls<indexterm>Text area</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The <codeph>oxy_textArea</codeph> form control supports the following properties:</p>
    <ul>
      <li>
        <p><ph conkeyref="reusables-author-mode-customization/edit_property"/><ul
            id="ul_rr4_pl1_x3b">
            <li conkeyref="reusables-author-mode-customization/attr-name-li"/>
            <li conkeyref="reusables-author-mode-customization/text-li"/>
            <li>
              <p><b>#content</b> - This parameter is useful when an element has mixed or
                element-only content and you want to edit its content inside a text area form
                control.</p>
              <p>For example, if you have the following XML
                content:<codeblock outputclass="language-xml">&lt;codeblock outputclass="language-xml">START_TEXT&lt;ph>phase&lt;/ph>
           &lt;apiname>&lt;text>API&lt;/text>&lt;/apiname>&lt;/codeblock></codeblock></p>
              <p>and your CSS includes the following
                snippet:<codeblock outputclass="language-css">codeblock:before{
content:
    oxy_textArea(
      edit, '#content',
      contentType, 'text/xml');
}</codeblock></p>
              <p>then the text area form control will edit the following
                  fragment:<codeblock outputclass="language-javascript">START_TEXT&lt;ph>phase&lt;/ph>&lt;apiname>&lt;text>API&lt;/text>&lt;/apiname></codeblock><note>When
                  the value of the <codeph>edit</codeph> property is <codeph>#content</codeph>, the
                  text area form control will also offer content completion proposals.</note></p>
            </li>
          </ul></p>
      </li>
      <li>
        <p><b>#content</b> - This parameter is useful when an element has mixed or element-only
          content and you want to edit its content inside a text area form control.</p>
        <p>For example, if you have the following XML
          content:<codeblock outputclass="language-xml">&lt;codeblock outputclass="language-xml">START_TEXT&lt;ph>phase&lt;/ph>
           &lt;apiname>&lt;text>API&lt;/text>&lt;/apiname>&lt;/codeblock></codeblock></p>
        <p>and your CSS includes the following
          snippet:<codeblock outputclass="language-css">codeblock:before{
content:
    oxy_textArea(
      edit, '#content',
      contentType, 'text/xml');
}</codeblock></p>
        <p>then the text area form control will edit the following
            fragment:<codeblock outputclass="language-javascript">START_TEXT&lt;ph>phase&lt;/ph>&lt;apiname>&lt;text>API&lt;/text>&lt;/apiname></codeblock><note>When
            the value of the <codeph>edit</codeph> property is <codeph>#content</codeph>, the text
            area form control will also offer content completion proposals.</note></p>
      </li>
      <li><ph conkeyref="reusables-author-mode-customization/columns-property"/></li>
      <li><ph conkeyref="reusables-author-mode-customization/width-property"/></li>
      <li><ph conkeyref="reusables-author-mode-customization/fontInherit-property"/></li>
      <li><ph conkeyref="reusables-author-mode-customization/visible-property"/></li>
      <li><ph conkeyref="reusables-author-mode-customization/property-rows"/> If the form control
        has more lines, you can scroll and see them all.</li>
      <li><ph conkeyref="reusables-author-mode-customization/contentType_property"/></li>
      <li><ph conkeyref="reusables-author-mode-customization/indentOnTab_property"/></li>
      <li><b>white-space</b> - CSS property that influences the value that you edit, as well as the
        form control size:<ul id="ul_kw1_vdn_rq">
          <li><b>pre</b> - The whitespaces and new lines of the value are preserved and edited. If
            the <codeph>rows</codeph> and <codeph>columns</codeph> properties are not specifies, the
            form control calculates its size on its own so that all the text is visible.</li>
          <li><b>pre-wrap</b> - The long lines are wrapped to avoid horizontal scrolling.<note>The
                <codeph>rows</codeph> and <codeph>columns</codeph> properties must be specified. If
              these are not specified, the form control considers the value to be
                <codeph>pre</codeph>.</note></li>
          <li><b>normal</b> - The white spaces and new lines are normalized.</li>
        </ul></li>
      <li><ph conkeyref="reusables-author-mode-customization/hover-property-li"
        /><codeblock outputclass="language-css">p:before {
  content: oxy_textArea(hoverPseudoclassName, 'showBorder')
}
p:showBorder {
  border: 1px solid red;
}</codeblock></li>
    </ul>
    <p><b><u>Example: <i>oxy_textArea</i> Form Control</u></b></p>
    <p>The following example presents a text area with CSS syntax highlighting that calculates its
      own dimension, and a second one with XML syntax highlighting with defined
      dimension.<codeblock outputclass="language-css">textArea {
    visibility: -oxy-collapse-text;
    white-space: pre;
}

textArea[language="CSS"]:before {
    content: oxy_textArea(
      edit, '#text',
      contentType, 'text/css');
}

textArea[language="XML"]:before {
    content: oxy_textArea(
      edit, '#text',
      contentType, 'text/xml',
      rows, 10,
      columns, 30);
}</codeblock></p>
    <note type="tip">To insert a sample of the <codeph>oxy_textArea</codeph> form control in a CSS
      file <ph product="author developer editor">(or LESS file)</ph>, invoke the <xref
        keyref="glossentry_content-completion-assistant"><term>Content Completion
        Assistant</term></xref> by pressing <uicontrol
        conkeyref="reusable-oxygen-shortcuts-list/ctrl_space"/> and select the <image
        href="../img/CodeTemplates12.gif" id="image_fyc_fhh_5r"/>
      <codeph>oxy_textArea</codeph> code template.<p><ph
          conkeyref="reusables-author-mode-customization/samples-ph"/></p></note>
    <p>For more information about form controls, watch our video demonstration:</p>
    <p><object width="450" height="250" data="https://www.youtube.com/embed/-WY3wzkMSLM"
        outputclass="iframe">
        <param name="allowfullscreen" value="true"/>
      </object></p>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="dg-oxygen-css-functions.dita"/>
      <link href="dg-visibility-css-extension.dita"/>
    </linklist>
  </related-links>
</topic>
