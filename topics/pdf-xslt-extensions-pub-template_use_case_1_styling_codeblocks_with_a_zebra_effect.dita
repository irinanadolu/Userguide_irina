<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-pub-template_use_case_1_styling_codeblocks_with_a_zebra_effect">
	<title>How to Style Codeblocks with a Zebra Effect</title>
	<body>
		<p>Suppose you want your <i>codeblocks</i> to have a particular background color for one line,
			and another color for the next line. One advantage of this coloring technique is that you can
			clearly see when text from the <i>codeblock</i> is wrapped.</p>
		<p>This effect can be done by altering the HTML5 output, creating a <codeph>div</codeph> for
			each line from the code block, then styling them.</p>
		<p>To add this functionality using an <i>Oxygen Publishing Template</i>, follow these steps:</p>
		<ol>
      <li conkeyref="reusables-dcpp/pt-li1"/>
      <li conkeyref="reusables-dcpp/pt-li2"/>
      <li conkeyref="reusables-dcpp/pt-li3"/>
			<li>In this folder, create an XSL file (for example, named
          <filepath>merged2html5Extension.xsl</filepath>) with the following
        content:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    exclude-result-prefixes="xs"
    version="2.0"&gt;
   
    &lt;xsl:template match="*[contains(@class, ' pr-d/codeblock ')]"&gt;
       &lt;div class='zebra'&gt;       
          &lt;xsl:analyze-string regex="\n" select="."&gt;
            &lt;xsl:matching-substring/&gt;
            &lt;xsl:non-matching-substring&gt;
               &lt;div&gt;&lt;xsl:value-of select="."/&gt;&lt;/div&gt;
            &lt;/xsl:non-matching-substring&gt;
          &lt;/xsl:analyze-string&gt;
       &lt;/div&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</codeblock></li>
			<li>Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
            ><i>template descriptor file</i></xref> associated with your <i>publishing template</i>
        (the <filepath>.opt</filepath> file) and set the XSLT stylesheet created in the previous
        step with the <codeph>com.oxygenxml.pdf.css.xsl.merged2html5</codeph> XSLT extension
        point:<codeblock outputclass="language-xml">&lt;publishing-template&gt;
    ...
    &lt;pdf&gt;
        ...        
        &lt;xslt&gt;
            &lt;extension 
              id="com.oxygenxml.pdf.css.xsl.merged2html5"
              file="xslt/merged2html5Extension.xsl"/&gt;
        &lt;/xslt&gt;</codeblock></li>
			<li>Create a <filepath>css</filepath> folder in the publishing template directory. In this
        directory, save a custom CSS file with rules that style the <i>codeblock</i> structure. For
        example:<codeblock outputclass="language-css">div.zebra {
  font-family:courier, fixed, monospace;        
  white-space:pre-wrap;
}

div.zebra &gt; *:nth-of-type(odd){        
  background-color: silver;
}     </codeblock></li>
			<li>Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
            ><i>template descriptor file</i></xref> associated with your <i>publishing template</i>
        (the <filepath>.opt</filepath> file) and reference your custom CSS file in the
          <codeph>resources</codeph>
        element:<codeblock outputclass="language-xml">&lt;publishing-template&gt;
    ...
    &lt;pdf&gt;
      ...                
      &lt;resources&gt;            
          &lt;css file="css/custom.css"/&gt;
      &lt;/resources&gt; </codeblock></li>
      <li conkeyref="reusables-dcpp/pt-li6"/>
      <li conkeyref="reusables-dcpp/pt-li7"/>
      <li conkeyref="reusables-dcpp/pt-li8"/>
		</ol>
	</body>
</topic>
