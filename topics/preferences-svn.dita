<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-svn">
  <title>SVN Preferences</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Preferences<indexterm>SVN</indexterm></indexterm>
        <indexterm>SVN preferences</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>To configure the options for the SVN client tool, <ph
        conkeyref="reusables-preferences-pages/open-the-preferences-page"/> and go to
        <uicontrol>SVN</uicontrol>. Some other preferences for the embedded SVN client tool can be
      set in the global files called <filepath>config</filepath> and <filepath>servers</filepath>.
      These files contain parameters that act as defaults applied to all the SVN client tools that
      are used by the same user on their computer login account. To open these files for editing,
      launch the embedded SVN client tool (<menucascade>
        <uicontrol>Tools</uicontrol>
        <uicontrol><image href="../img/SyncroSVNClient16.png" id="image_tsk_4k3_ls"/>SVN
          Client</uicontrol>
      </menucascade>) and select <menucascade>
        <uicontrol>Global Runtime Configuration</uicontrol>
        <uicontrol>Edit 'config' file</uicontrol>
      </menucascade> or <menucascade>
        <uicontrol>Global Runtime Configuration</uicontrol>
        <uicontrol>Edit 'servers' file</uicontrol>
      </menucascade> from the SVN client <uicontrol>Options</uicontrol> menu.</p>
    <p>
      <fig id="figure-svn-preferences">
        <title>SVN Preferences Panel</title>
        <image href="../img/sa_svn_options.png"/>
      </fig>
    </p>
    <p>The following SVN options can be configured in this preferences page:<dl>
        <dlentry>
          <dt><uicontrol>Enable symbolic link support</uicontrol> (<i>available only on Mac OS X and
              Linux</i>)</dt>
          <dd><tm tmtype="tm">Apache Subversion</tm> can put a symbolic link under version control,
            via the usual SVN <i>add</i> command. The Subversion repository has no internal concept
            of a symbolic link. It stores a versioned symbolic link as an ordinary file with a
              <codeph>svn:special</codeph> property attached. On Unix/Linux, the SVN client sees the
            property and translates the file into a symbolic link in the working copy. If the
            symbolic link support is disabled, the versioned symbolic links appear as a text file
            instead of symbolic link.<note>Windows file systems have no symbolic links, so a Windows
              client will not do any such translation and the object appears as a normal
              file.</note><note type="important">It is recommended to disable symbolic links support
              if you do not have versioned symbolic links in your repository, since the SVN
              operations will work faster. However, you should not disable this option when you do
              have versioned symbolic links in repository. In that case a workaround would be to
              reference the working copy by its real path, instead of a path that includes a
              symbolic link.</note></dd>
        </dlentry>
        <dlentry id="allow-unversioned-obstructions">
          <dt><uicontrol>Allow unversioned obstructions</uicontrol></dt>
          <dd>Controls how to handle a situation where working copy resources are ignored /
            unversioned when performing an update operation and incoming files (from the repository)
            with the same name and location intersect with those being ignored / unversioned. If the
            option is selected, the incoming items will become BASE revisions of the ones already
            present in the working copy, and those present will be made versioned resources and will
            be marked as modified (exactly as if the user first made the update operation and then
            modified the files). If the option is not selected, the update operation will fail when
            encountering files in this situation, possibly leaving other files not updated. By
            default, this option is selected.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Use unsafe copy operations</uicontrol></dt>
          <dd>Sometimes when the working copy is accessed through Samba and the SVN client cannot
            make a safe copy of the committed file due to a delay in getting a write permission, the
            result is that the committed file will be saved with zero length (the content is
            removed) and an error will be reported. In this case, this option should be selected so
            that the SVN client does not try to make the safe copy.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Results Console</uicontrol></dt>
          <dd>Specifies the maximum number of lines displayed in the <uicontrol>Console</uicontrol>
            view. The default value is 1000.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Annotations View</uicontrol></dt>
          <dd>Sets the color used in the editor panel for highlighting all the changes contributed
            to a resource by the revision selected in <xref href="annotations-view.dita">the
                <uicontrol>Annotations</uicontrol> view</xref>.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Revision Graph</uicontrol></dt>
          <dd>Enables caching for the action of computing a revision graph. When a new revision
            graph is requested, one of the caches from the previous actions may be used that will
            avoid running the whole query again on the SVN server. If a cache is used, it will
            finish the action much faster.</dd>
        </dlentry>
      </dl></p>
  </body>
</topic>
