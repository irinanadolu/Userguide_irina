<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="dcpp_how_to_show_metadata_in_the_content">
  <title>How to Show Metadata in the Cover Page</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm product="author developer editor authorEclipse developerEclipse editorEclipse"
            ><ph keyref="pdf-html5-transformation"/><indexterm>Metadata<indexterm>Cover
              page</indexterm></indexterm></indexterm>
        <indexterm product="pdf-css ope">Metadata<indexterm>Cover page</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Suppose you need to present the <b>Author</b> and the <b>ISBN</b> (when it exists) just under
      the publication title and suppose your bookmap
      contains:<codeblock outputclass="language-xml">&lt;bookmap id="taskbook">
    &lt;booktitle>
        &lt;booklibrary>Retro Tools&lt;/booklibrary>
        &lt;mainbooktitle>Product tasks&lt;/mainbooktitle>
        &lt;booktitlealt>Tasks and what they can do&lt;/booktitlealt>
    &lt;/booktitle>
    &lt;bookmeta>        
        &lt;author>Howe Tuduit&lt;/author>
        &lt;critdates>
            &lt;created date="1/1/2015"/>
            &lt;revised modified="3/4/2016"/>
            &lt;revised modified="3/5/2016"/>
        &lt;/critdates>
        &lt;bookid>
            &lt;isbn>071271271X&lt;/isbn>
            &lt;booknumber>SG99-9999-00&lt;/booknumber>
...        </codeblock></p>
    <p>The entire <xmlelement>booktitle</xmlelement> element content is displayed on the first page
      of the PDF, so if you need to add the information after it, in your <xref
        href="dcpp_the_customization_css.dita">customization CSS</xref>, add the following CSS
      rules:<codeblock outputclass="language-css">*[class ~= "bookmap/booktitle"]:after {
    display: block;
    content: "by " oxy_xpath('//*[contains(@class, " bookmap/bookmeta ")]/*[contains(@class, " topic/author ")]/text()');
    margin-top: 4em;
    text-align: center;
    color: gray;
}
*[class ~= "bookmap/booktitle"]:after(2) {
    display: block;
    content: oxy_xpath('if(//*[contains(@class, " bookmap/isbn ")]) then concat("ISBN ", //*[contains(@class, " bookmap/isbn ")]/text()) else ""'); 
    text-align: center;
    color: gray;
}</codeblock></p>
    <p>The following CSS extensions were used in this example: <ul id="ul_c3t_xcf_scb">
        <li><b><xref href="https://www.oxygenxml.com/doc/ug-editor/topics/dg-xpath-function.html"
              format="html" scope="external">oxy_xpath</xref></b> - Executes an XPath expression and
          returns a string content. Use this whenever you need to extract data from elements other
          than the one matched by the CSS rule selector.</li>
        <li><b><codeph>:after(N)</codeph></b> - Creates more than one <i>after</i> pseudo-element.
          The argument value represents how far the generated content is from the real content. In
          the example above, the content of the <codeph>:after</codeph> is closer to the title
          (upper) than the content of the <codeph>:after(2)</codeph>.</li>
      </ul><note>The <codeph>attr()</codeph> CSS function can also be used but is limited to
        extracting attribute values from the matched element.</note></p>
    <section id="section_d5l_mdf_scb">
      <title>Generating Synthetic Pages for Metadata.</title>
      <p>Suppose you need to show this information on a page that follows the title page, instead of
        on the title page. In this case, you need to prepare a named page and place the content in
        it. In your <xref href="dcpp_the_customization_css.dita">customization CSS</xref>, add the
        following CSS rules:</p>
      <codeblock outputclass="language-css">@page page-for-meta {
    background-color: yellow; /* Just to see it better*/
    @top-left-corner {
        content:""; /* Remove the default header */
    }
    @top-right-corner {
        content:""; /* Remove the default header */
    }
}

*[class ~= "bookmap/booktitle"]:after {
    page: page-for-meta;
}
*[class ~= "bookmap/booktitle"]:after(2) {
    page: page-for-meta;
}</codeblock>
    </section>
  </body>
</topic>
