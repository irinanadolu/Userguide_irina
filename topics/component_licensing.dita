<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="component_licensing">
  <title>Licensing</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Oxygen XML Author Component<indexterm>Licensing</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The licensing terms and conditions for the <ph keyref="authorComponent"/> are defined in the
        <xref href="https://www.oxygenxml.com/sdk_agreement.html" format="html" scope="external"
            ><b><i>Oxygen SDK</i> License Agreement</b></xref>. To obtain the licensing terms and
      conditions and other licensing information as well, you can also contact the support team at
        <b>support@oxygenxml.com</b>. You may also obtain a free of charge evaluation license key
      for development purposes, subject to registration. Any deployment of an application developed
      using the <ph keyref="authorComponent"/> is also subject to the terms of the SDK agreement. </p>
    <p>There are two main categories of <ph keyref="authorComponent"/> integrations:<ul
        id="ol_k22_sbr_y3" irina="irina">
        <li>
          <p><b><u>Integration for internal use</u>:</b></p>
          <p>You develop an application that embeds the <i>Author Component</i> to be used
            internally (in your company or by you). You can buy and use previously purchased <ph
              keyref="product"/> floating licenses to enable the runtime usage of the <ph
              keyref="authorComponent"/> as it was integrated into the application.</p>
        </li>
        <li>
          <p><b><u>Integration for external use</u>:</b></p>
          <p>Using the <ph keyref="authorComponent"/>, you create an application that you distribute
            to other users outside your company (with a CMS for example). In this case, you should
            apply for a Value Added Reseller (VAR) partnership by contacting the <b>Oxygen Sales
              Team</b> (<xref href="https://www.oxygenxml.com/sales_support.html" format="html"
              scope="external"/>).</p>
        </li>
      </ul></p>
    <p>From a technical point of view, the <ph keyref="authorComponent"/> provides the Java API
      to:</p>
    <p>
      <ul id="ul_rkh_r4r_y3" irina="irina">
        <li>
          <p><b><u>Inject floating license server details in the Java code</u>:</b></p>
          <p>The following link provides details about how to configure an HTTP floating license
            server: <xref
              href="https://www.oxygenxml.com/license_server.html#floating_license_servlet"
              format="html" scope="external"
            />.<codeblock outputclass="language-java">AuthorComponentFactory.getInstance().init(frameworkZips, 
  optionsZipURL, codeBase, appID,
      //The servlet URL
      "http://www.host.com/servlet", 
      //The HTTP credentials user name
      "userName", 
      //The HTTP credentials password
      "password");
...</codeblock></p>
        </li>
        <li>
          <p><b><u>(Deprecated) Display the license registration dialog box, where the user will
                paste their license key</u>:</b></p>
          <p>This is the default behavior if a <i>null</i> license key is set using the API (as in
            the following example). This transfers the licensing responsibility to the end-user. The
            user can license an <ph keyref="authorComponent"/> using standard named-user based
                <ph><ph keyref="product"/></ph> license keys. The license key will be saved to the
            local user's disk and on subsequent runs, the user will not be asked again to provide a
            license
            key.<codeblock outputclass="language-java">AuthorComponentFactory.getInstance().init(
   frameworkZips, optionsZipURL, codeBase, appID,
   //Null license key, will ask the user.
   null);
...</codeblock></p>
        </li>
        <li>
          <p><b><u>(Deprecated) Inject the licensing information key directly in the component's
                Java code</u>:</b></p>
          <p>Note that this method can only be used for <b>evaluation</b> and <b>site</b> license
            keys. For
            example:<codeblock outputclass="language-java">AuthorComponentFactory.getInstance().init(
   frameworkZips, optionsZipURL, codeBase, appID,
   //The license key if it is a fixed license.
   licenseKey);
...</codeblock></p>
        </li>
      </ul>
    </p>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link format="html" href="https://www.oxygenxml.com/sdk_agreement.html" scope="external"/>
    </linklist>
  </related-links>
</topic>
