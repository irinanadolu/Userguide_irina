<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="edit-validation-scenario">
  <title>Editing a Validation Scenario</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XML documents<indexterm>Validation<indexterm>Edit validation
            scenario</indexterm></indexterm></indexterm>
        <indexterm>Validating XML Documents<indexterm>Edit validation
          scenarios</indexterm></indexterm>
        <indexterm>Edit validation scenario</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>To edit an existing validation scenario, follow these steps:</p>
    </context>
    <steps>
      <step>
        <cmd>Select the <uicontrol><image href="../img/ValidationConfig16.png" id="image_k3g_x5v_sr"
            />Configure Validation Scenario(s)</uicontrol> from the <ph
            product="author developer editor"><uicontrol><image href="../img/ValidateDrop.png"
                id="image_dyn_x5v_sr"/>Validation</uicontrol> toolbar drop-down menu</ph><ph
            product="authorEclipse developerEclipse editorEclipse">toolbar</ph>, or from the
            <menucascade product="editor author developer">
            <uicontrol>Document</uicontrol>
            <uicontrol>Validate</uicontrol>
          </menucascade><uicontrol product="authorEclipse developerEclipse editorEclipse"
            >XML</uicontrol> menu (or the <uicontrol>Validate</uicontrol> submenu when invoking the
          contextual menu on a file in the <xref
            href="using-the-project-view.dita#using-the-project-view"><ph product="developer editor"
                ><uicontrol>Project</uicontrol> view</ph><ph
              product="developerEclipse editorEclipse"><uicontrol>Project Explorer</uicontrol>
            view</ph></xref>).</cmd>
        <stepresult>The <uicontrol>Configure Validation Scenario(s)</uicontrol> dialog box is
          displayed. It contains built-in and user-defined scenarios. The built-in scenarios are
          organized in categories depending on the type of file they apply to and you can identify
          them by a yellow key icon that marks them as <i>read-only</i>. The user-defined scenarios
          are organized under a single category. The default scenarios for the particular <xref
            keyref="glossentry_framework"><term>framework</term></xref> are rendered in bold.<note
            conkeyref="reusables-editing-documents/validation-note"/><p>
            <fig id="figure-configure-validation-scenario-oxygen" product="editor author developer">
              <title>Configure Validation Scenario Dialog Box</title>
              <image href="../img/sa_validation_scenario_list_dialog.png"/>
            </fig>
          </p><p>
            <fig id="figure-configure-validation-scenario-oxygenEclipse"
              product="editorEclipse authorEclipse developerEclipse">
              <title>Configure Validation Scenario Dialog Box</title>
              <image href="../img/ec_validation_scenario_list_dialog.png"/>
            </fig>
          </p><p>The top section of the dialog box contains a filter that allows you to search
            through the scenarios list and the <uicontrol><image href="../img/Settings16.png"
                id="image_tff_ryk_1r"/>Settings</uicontrol> button allows you to configure the
            following options:<dl>
              <dlentry conkeyref="reusables-transforming-documents/show-all-scenarios">
                <dt/>
                <dd/>
              </dlentry>
              <dlentry conkeyref="reusables-transforming-documents/scenarios-available-for-editor">
                <dt/>
                <dd/>
              </dlentry>
              <dlentry conkeyref="reusables-transforming-documents/show-associated-scenarios">
                <dt/>
                <dd/>
              </dlentry>
              <dlentry conkeyref="reusables-transforming-documents/import-scenarios-dlentry">
                <dt/>
                <dd/>
              </dlentry>
              <dlentry conkeyref="reusables-transforming-documents/export-selected-scenarios">
                <dt/>
                <dd/>
              </dlentry>
            </dl></p></stepresult>
      </step>
      <step>
        <cmd>Select the scenario and click the <uicontrol>Edit</uicontrol> button. If you try to
          edit one of the <i>read-only</i> built-in scenarios, you will receive a warning message
          that <ph keyref="product"/> needs to creates customizable duplicate (you can also use the
            <uicontrol>Duplicate</uicontrol> button).</cmd>
        <stepresult id="validation-unit-stepresult">The <uicontrol>Edit scenario</uicontrol> dialog
          box is displayed and it lists all the validation units for the scenario.<p
            product="author developer editor">
            <fig>
              <title>Edit Validation Scenario</title>
              <image href="../img/sa_edit_validation_scenario.png"/>
            </fig>
          </p><p product="authorEclipse developerEclipse editorEclipse">
            <fig>
              <title>Edit Validation Scenario</title>
              <image href="../img/ec_edit_validation_scenario.png"/>
            </fig>
          </p><p conkeyref="reusables-validation-scenarios/new-scenario-dialog-box"
            id="validation-config-dialog"/></stepresult>
      </step>
      <step conkeyref="reusables-validation-scenarios/vs_7">
        <cmd/>
      </step>
      <step>
        <cmd>When you are done configuring the scenario, click <uicontrol>OK</uicontrol>.</cmd>
        <stepresult>The modified validation scenario will now be included in the list of scenarios
          in the <uicontrol>Configure Validation Scenario(s)</uicontrol> dialog box. If you chose to
          duplicate an existing one, the modified scenario will be listed with the word <i>copy</i>
          at the end of its name.</stepresult>
      </step>
    </steps>
  </taskbody>
</task>
