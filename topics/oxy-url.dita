<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="oxy-url">
  <title>OXY-URL: File URLs in <ph keyref="webappProduct"/></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>OXY-URL</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="webappProduct"/> works with files such as DITA documents, images referenced from
      documents, and DITA maps used as a context for editing. <ph keyref="webappProduct"/> can be
      instructed to load or save a particular file using an <term>OXY-URL</term> that identifies
      that file.</p>
    <p>An <term>OXY-URL</term> is a URL from a technical point of view, but it is not a normal HTTP
      URL like the ones that browsers use. It should have several characteristics:<ol
        id="ol_fdt_krl_3z">
        <li>It must have a <xref href="#oxy-url/oxyurl_unique_scheme" format="dita">unique
              <term>scheme</term></xref> according to the file storage system the file comes
          from.</li>
        <li>It should behave like an identifier for the file that it references.</li>
        <li>
          <p>It is usually different from other URLs identifying the file, such as one that would
            open it in a CMS web interface (herein called <term>CMS-URL</term>) or the one that is
            used to access the raw content of the file (herein called <term>RAW-URL</term>).</p>
          <p><u><b>Example: OXY-URL for a File in Oxygen's User Manual</b></u></p>
          <p>Suppose that the <term>OXY-URL</term> for the
              <filepath>DITA/topics/intro.dita</filepath> topic from the <term>Oxygen</term> User
            Manual (hosted on GitHub) is the
            following:<codeblock outputclass="language-ini">gitgh://https%3A%2F%2Fgithub.com%2Foxygenxml%2Fug/master/DITA/topics/introduction.dita</codeblock></p>
          <p>Notice that:<ol id="ol_xc5_xsl_3z">
              <li>The URL <term>scheme</term> is <b>gitgh</b>.</li>
              <li>It uniquely identifies the file <filepath>DITA/topics/introduction.dita</filepath>
                on branch <codeph>master</codeph> in the repository <codeph>oxygenxml/ug</codeph> on
                GitHub.</li>
              <li>It is different from the URL used to access the file in the GitHub web interface
                  (<term>CMS-URL</term>)
                  <codeph>https://github.com/oxygenxml/ug/blob/master/DITA/topics/introduction.dita</codeph>
                and from the URL used to access the file's raw content (<term>RAW-URL</term>)
                  <codeph>https://raw.githubusercontent.com/oxygenxml/ug/master/DITA/topics/introduction.dita</codeph>.</li>
            </ol></p>
        </li>
      </ol></p>
    <section id="oxyurl_unique_scheme">
      <title>Unique URL Scheme</title>
      <p id="oxy-url-p">
        <dl>
          <dlentry>
            <dt>GitHub</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">gitgh://REPOSITORY_URI/BRANCH/PATH_TO_FILE</codeblock></p>
            </dd>
            <dd>
              <p>where:<ul id="ul_htj_2wj_y3b">
                  <li><b>gitgh</b> = The URL scheme. Note that the <xref
                      href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin/github_integration"
                      >GitHub plugin must be configured</xref> for this URL scheme to work.</li>
                  <li><b>REPOSITORY_URI</b> = The URI of the GitHub repository (URI-encoded).</li>
                  <li><b>BRANCH</b> = The name of the branch where the file is located
                    (URI-encoded).</li>
                  <li><b>PATH_TO_FILE</b> = The path to the file. Each entry in the path should be
                    URI-encoded.</li>
                </ul></p>
              <p>Example:
                  <filepath>gitgh://https%3A%2F%2Fgithub.com%2Fuser%2Frepo/master/DITA/topics/intro%20topic.dita</filepath></p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>GitLab</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">gitgl://REPOSITORY_URI/BRANCH/PATH_TO_FILE</codeblock></p>
            </dd>
            <dd>
              <p>where:<ul id="ul_wpd_dwj_y3b">
                  <li><b>gitgl</b> = The URL scheme. Note that the <xref
                      href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin/gitlab_integration"
                      >GitLab plugin must be configured</xref> for this URL scheme to work.</li>
                  <li><b>REPOSITORY_URI</b> = The URI of the GitLab repository (URI-encoded).</li>
                  <li><b>BRANCH</b> = The name of the branch where the file is located
                    (URI-encoded).</li>
                  <li><b>PATH_TO_FILE</b> = The path to the file. Each entry in the path should be
                    URI-encoded.</li>
                </ul></p>
              <p>Example:
                  <filepath>gitgl://https%3A%2F%2Fgithub.com%2Fuser%2Frepo/master/DITA/topics/intro%20topic.dita</filepath></p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>GitLab On-Premise</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">gitgle://REPOSITORY_URI/BRANCH/PATH_TO_FILE</codeblock></p>
            </dd>
            <dd>
              <p>where:<ul id="ul_wd3_cwj_y3b">
                  <li><b>gitgle</b> = The URL scheme. Note that the <xref
                      href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin/gitlab_integration"
                      >GitLab On-Premise plugin must be configured</xref> for this URL scheme to
                    work.</li>
                  <li><b>REPOSITORY_URI</b> = The URI of the GitLab On-Premise repository
                    (URI-encoded).</li>
                  <li><b>BRANCH</b> = The name of the branch where the file is located
                    (URI-encoded).</li>
                  <li><b>PATH_TO_FILE</b> = The path to the file. Each entry in the path should be
                    URI-encoded.</li>
                </ul></p>
              <p>Example:
                  <filepath>gitgle://https%3A%2F%2Fgitlab-example.com%2Fuser%2Frepo/master/DITA/topics/intro%20topic.dita</filepath></p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>Bitbucket</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">gitbb://REPOSITORY_URI/BRANCH/PATH_TO_FILE</codeblock></p>
            </dd>
            <dd>
              <p>where:<ul id="ul_vjf_bwj_y3b">
                  <li><b>gitbb</b> = The URL scheme. Note that the <xref
                      href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin/bitucket_integration"
                      >Bitbucket plugin must be configured</xref> for this URL scheme to work.</li>
                  <li><b>REPOSITORY_URI</b> = The URI of the Bitbucket repository
                    (URI-encoded).</li>
                  <li><b>BRANCH</b> = The name of the branch where the file is located
                    (URI-encoded).</li>
                  <li><b>PATH_TO_FILE</b> = The path to the file. Each entry in the path should be
                    URI-encoded.</li>
                </ul></p>
              <p>Example:
                  <filepath>gitbb://https%3A%2F%2Fbitbucket.com%2Fuser%2Frepo/master/DITA/topics/intro%20topic.dita</filepath></p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>Git</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">git://REPOSITORY_URI/BRANCH/PATH_TO_FILE</codeblock></p>
            </dd>
            <dd>
              <p>where:<ul id="ul_kmf_wvj_y3b">
                  <li><b>git</b> = The URL scheme.</li>
                  <li><b>REPOSITORY_URI</b> = The URI of the Git repository (URI-encoded).</li>
                  <li><b>BRANCH</b> = The name of the branch where the file is located
                    (URI-encoded).</li>
                  <li><b>PATH_TO_FILE</b> = The path to the file. Each entry in the path should be
                    URI-encoded.</li>
                </ul></p>
              <p>Example:
                  <filepath>git://https%3A%2F%2Fgithub.com%2Fuser%2Frepo/master/DITA/topics/intro%20topic.dita</filepath></p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>WebDAV</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">webdav-https://dav.box.com/dav/path/to/file.dita</codeblock></p>
              <p>where the WebDAV URL of the file is:
                  <codeph>https://dav.box.com/dav/path/to/file.dita</codeph>.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>SharePoint</dt>
            <dd>The URL of the file is the SharePoint file URL, prefixed with <codeph>spo-</codeph>,
              as in the following
              example:<codeblock outputclass="language-ini">spo-https://mycompany.sharepoint.com/myfolder/Shared%20Documents/myfile.dita</codeblock></dd>
          </dlentry>
          <dlentry>
            <dt>REST</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">rest://&lt;server-id>/path/to/file.dita</codeblock></p>
              <p>The format can be further specified by the implementer of the REST API.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>CMIS</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">cmis://SERVER-URL/repository/path/to/file.dita</codeblock></p>
              <p>where the <b>SERVER-URL</b> is the URL of the CMIS service document (URI-encoded).
                For examples of such server URLs, see the <xref
                  href="wa-integrate-CMIS.dita#wa-integrate-CMIS/installing_the_plugin">CMIS
                  connector configuration instructions</xref>.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>Perforce</dt>
            <dd>
              <p>The URLs have the following
                format:<codeblock outputclass="language-ini">p4java://&lt;server-address>:&lt;server-port>//&lt;depot>/path/to/file.xml</codeblock></p>
              <p>where:<ul id="ul_xdz_czq_whb">
                  <li><b>server-address</b> = The domain name or IP of the server.</li>
                  <li><b>server-port</b> = The server port, usually 1666.</li>
                  <li><b>depot</b> = The name of the depot that contains the file.</li>
                </ul></p>
            </dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="section_enx_ybm_3z">
      <title>Opening and Saving Files</title>
      <p>For <ph keyref="webappProduct"/> to be able to open and save files identified by an
          <term>OXY-URL</term>, you need to provide a <xref
          href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/URLStreamHandlerWithContext.html"
          format="html" scope="external"
            ><b>ro.sync.ecss.extensions.api.webapp.plugin.URLStreamHandlerWithContext</b>
          class</xref> and associate it with the scheme of your <term>OXY-URL</term>.</p>
    </section>
    <section id="section_jjz_hcm_3z">
      <title>User Authentication</title>
      <p>The <xref
          href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/URLStreamHandlerWithContext.html"
          format="html" scope="external"><b>URLStreamHandlerWithContext</b></xref> receives a
          <b>contextId</b> for each open and save. This <b>contextId</b> is the session ID of the
        user that will open or save the file. <ul id="ul_amj_vcm_3z">
          <li>If the user is not authenticated to the CMS or if the credentials are denied by the
            CMS, you should throw a <xref
              href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/UserActionRequiredException.html"
              format="html" scope="external"
                ><codeph>ro.sync.ecss.extensions.api.webapp.plugin.UserActionRequiredException</codeph></xref>
            exception. This exception is automatically relayed to the client-side as a <xref
              keyref="jscript_api_WebappMessage"><codeph>sync.api.WebappMessage</codeph></xref>
            JavaScript object.</li>
          <li>On the client side, follow these steps:<ol id="ol_bmj_vcm_3z">
              <li>Use the <xref keyref="jscript_api_Editor"
                    ><codeph>sync.api.Editor.EventTypes.CUSTOM_MESSAGE_RECEIVED</codeph></xref>
                event to intercept the messages sent from the server-side.</li>
              <li><xref keyref="jscript_api_dialog">Display a dialog box</xref> to collect the user
                credentials.</li>
              <li>Send the new credentials to a <xref
                  href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/WebappServletPluginExtension.html"
                  format="html" scope="external"
                    ><b>ro.sync.ecss.extensions.api.webapp.plugin.WebappServletPluginExtension</b></xref>
                that you registered. This servlet will make the credentials available to the <xref
                  href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/URLStreamHandlerWithContext.html"
                  format="html" scope="external"
                    ><codeph>ro.sync.ecss.extensions.api.webapp.plugin.URLStreamHandlerWithContext</codeph></xref>
                instance presented above.</li>
              <li>Retry the operation that triggered the authentication procedure.</li>
            </ol></li>
        </ul></p>
    </section>
    <section id="section_g3r_htl_3z">
      <title>Resolving References to Other Files</title>
      <p>The XML content edited in <ph keyref="webappProduct"/> may contain references to other
        files. To access a referenced file, <ph keyref="webappProduct"/> needs to compute its
          <term>OXY-URL</term> based on the <term>OXY-URL</term> of the edited file and the value of
        the reference to it.</p>
      <p>For example, the value of the reference of the following
        image:<codeblock outputclass="language-xml">&lt;img src="../image/iris.jpg" /></codeblock>
        is<codeblock outputclass="language-ini">../image/iris.jpg</codeblock></p>
    </section>
    <section id="section_kq1_b1m_3z">
      <title>Relative References</title>
      <p><ph keyref="webappProduct"/> tries to resolve relative references against the
          <term>OXY-URL</term> of the currently open file. Also, when inserting references to other
        files (for example, images), <ph keyref="webappProduct"/> tries to insert relative URLs.</p>
    </section>
    <section id="section_s4w_kzl_3z">
      <title>Absolute References (Usually <term>CMS-URL</term>)</title>
      <p>For this case, you need to provide a <b>URIResolver</b> that will receive the
          <term>OXY-URL</term> of the currently open file and the <term>CMS-URL</term> of the
        referenced file. <note>This resolver will need to make sure that any <term>userinfo</term>
          from the <term>OXY-URL</term> of the current file is transferred to the result.</note></p>
      <p>For example, suppose an image is referenced in a DITA topic and the <term>OXY-URL</term> of
        the topic (from a GitHub repository) is:</p>
      <codeblock outputclass="language-ini">gitgh://ff33bba498@https%3A%2F%2Fgithub.com%2Foxygenxml%2Fug/master/DITA/topics/intro.dita</codeblock>
      <p>and the <term>CMS-URL</term> of the referenced image is:</p>
      <codeblock outputclass="language-ini">https://github.com/oxygenxml/ug/blob/master/DITA/img/login.png</codeblock>
      <p>then the resolved <term>OXY-URL</term> of the image should be:</p>
      <codeblock outputclass="language-ini">gitgh://ff33bba498@https%3A%2F%2Fgithub.com%2Foxygenxml%2Fug/master/DITA/img/login.png</codeblock>
    </section>
    <section id="section_jjk_p3p_1bb">
      <title>WebDAV Example</title>
      <p>If the main document is loaded over WebDAV, the following <codeph>URIResolver</codeph>
        rewrites references to HTTP URLs to use WebDAV and inherit the
        credentials:<codeblock outputclass="language-javascript">URIResolver uriResolver = new URIResolver() {
    @Override
    public Source resolve(String href, String base) throws TransformerException {
      if (base != null &amp;&amp; base.indexOf("webdav-") == 0) {
        if (href.indexOf("http://") == 0 || href.indexOf("https://") == 0) {
          try {
            URL hrefUrl = new URL(href);
            URL baseUrl = new URL(base);
            final URL hrefWithUserInfo = 
                URLUtil.attachUserInfo(hrefUrl, baseUrl.getUserInfo(), null);
            return new Source() {
              
              @Override
              public void setSystemId(String systemId) {
              }
              
              @Override
              public String getSystemId() {
                return "webdav-" + hrefWithUserInfo.toExternalForm();
              }
            };
          } catch (MalformedURLException e) {
          }
        }
      }
      return null;
    }
  };</codeblock></p>
      <p>It can be registered like
        this:<codeblock outputclass="language-javascript">public class SampleWorkspaceAccess implements WorkspaceAccessPluginExtension {
  public void applicationStarted(StandalonePluginWorkspace pluginWorkspaceAccess) {
    pluginWorkspaceAccess.getXMLUtilAccess().addPriorityURIResolver(uriResolver);
  }
  public boolean applicationClosing() {
    return true;
  }
}</codeblock></p>
      <p>To make <ph keyref="webappProduct"/> insert an absolute <term>CMS-URL</term> in content,
        you should also provide a <b>RelativeReferencesResolver</b> to be used in the Java
        server-side code and a <b>ReferencesResolver</b> to be used by the JavaScript client-side
        code.</p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link format="html"
        href="https://github.com/oxygenxml/wsaccess-javascript-sample-plugins/tree/master/preserveAllReferencesAsAbsolute"
        scope="external">
        <linktext>Sample Plugin: preserveAllReferencesAsAbsolute</linktext>
      </link>
      <link format="html" scope="external"
        href="customizing-options.dita#customizing-options/custom_sharepoint_options">
        <linktext>SharePoint Configuration for working with Absolute URLs</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
