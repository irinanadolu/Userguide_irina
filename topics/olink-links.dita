<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="olink-links">
  <title>Inserting an Olink in DocBook Documents</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DocBook olink</indexterm>
        <indexterm>Olink element</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>The <xmlelement>olink</xmlelement> element is used for linking to resources outside the current
        DocBook document. The <xmlatt>targetdoc</xmlatt> attribute is used for the document ID that
        contains the target element and the <xmlatt>targetptr</xmlatt> attribute for the ID of the
        target element (the value of an <xmlatt>id</xmlatt> or <xmlatt>xml:id</xmlatt> attribute).
        The combination of those two attributes provides a unique identifier to locate cross
        references.</p>
      <p>For example, a <i>Mail Administrator Guide</i> with the document ID
          <codeph>MailAdminGuide</codeph> might contain a chapter about user accounts, like
        this:</p>
      <codeblock outputclass="language-xml">&lt;chapter id="user_accounts"&gt;
&lt;title&gt;Administering User Accounts&lt;/title&gt;
&lt;para&gt;blah blah&lt;/para&gt;</codeblock>
      <p>You can form a cross reference to that chapter by adding an <xmlelement>olink</xmlelement>, as in
        the following example:</p>
      <codeblock outputclass="language-xml">You may need to update your
&lt;olink targetdoc="MailAdminGuide" targetptr="user_accounts"&gt;user accounts
&lt;/olink&gt;
when you get a new machine.</codeblock>
      <p>To use an <xmlelement>olink</xmlelement> to create links between documents, follow these steps:</p>
    </context>
    <steps>
      <step>
        <cmd>Decide which documents are to be included in the domain for cross referencing.</cmd>
        <info>A unique ID must be assigned to each document that will be referenced with an
          <xmlelement>olink</xmlelement>. It is usually added as an <xmlatt>id</xmlatt> (or
            <xmlatt>xml:id</xmlatt> for DocBook5) attribute to the root element of the document.
        </info>
      </step>
      <step>
        <cmd>Decide on your output hierarchy.</cmd>
        <info>For creating links between documents, the relative locations of the output documents
          must be known. Before going further you must decide the names and locations of the output
          directories for all the documents from the domain. Each directory will be represented by
          an element: <xmlelement>dir name="directory_name"</xmlelement>, in the target database
          document. </info>
      </step>
      <step>
        <cmd>Create the target database document.</cmd>
        <info>Each collection of documents has a master target database document that is used to
          resolve all <i>olinks</i> from that collection. The target database document is
          an XML file that is created once. It provides a means for pulling in the target data for
          each document. The database document is static and all the document data is pulled in
            dynamically.<note type="tip"><ph keyref="product"/> includes a built-in new document
            template called <b>DocBook Targetset Map</b> available in the <xref
              href="new-dialog-sa.dita#new-dialog-sa" product="author developer editor"
                ><uicontrol>New</uicontrol> document wizard</xref><xref
              href="creating-from-templates.dita#creating-from-templates"
              product="authorEclipse developerEclipse editorEclipse"><uicontrol>New from
                templates</uicontrol> wizard</xref> that will help you get
                started.</note><p><b><u>Example:</u></b> The following is an example of a target
                  database document. It structures a collection of documents in a <xmlelement>sitemap</xmlelement>
            element that provides the relative locations of the outputs (HTML in this example). Then
            it pulls in the individual target data using system entity references to target data
            files that will be created in the next
            step.<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="utf-8"?>
&lt;!DOCTYPE targetset [
&lt;!ENTITY ugtargets SYSTEM "file:///doc/userguide/target.db"&gt; 
&lt;!ENTITY agtargets SYSTEM "file:///doc/adminguide/target.db"&gt;
&lt;!ENTITY reftargets SYSTEM "file:///doc/man/target.db"&gt;
]&gt;
&lt;targetset&gt; 
  &lt;targetsetinfo&gt; 
    Description of this target database document,
    which is for the examples in olink doc.
  &lt;/targetsetinfo&gt;

  &lt;!-- Site map for generating relative paths between documents --&gt;
  &lt;sitemap&gt; 
    &lt;dir name="documentation"&gt; 
      &lt;dir name="guides"&gt; 
        &lt;dir name="mailuser"&gt; 
          &lt;document targetdoc="MailUserGuide" 
                    baseuri="userguide.html"&gt; 
            &amp;ugtargets;
          &lt;/document&gt;
        &lt;/dir&gt;
        &lt;dir name="mailadmin"&gt;
          &lt;document targetdoc="MailAdminGuide"&gt;
            &amp;agtargets;
          &lt;/document&gt;
        &lt;/dir&gt;
      &lt;/dir&gt;
      &lt;dir name="reference"&gt;
        &lt;dir name="mailref"&gt;
          &lt;document targetdoc="MailReference"&gt;
            &amp;reftargets;
          &lt;/document&gt;
        &lt;/dir&gt;
      &lt;/dir&gt;
    &lt;/dir&gt;
  &lt;/sitemap&gt;
&lt;/targetset&gt;</codeblock></p></info>
      </step>
      <step>
        <cmd>Generate the target data files by executing a DocBook transformation scenario.</cmd>
        <info>Before applying the transformation, you need to edit the transformation scenario, go
          to the <uicontrol>Parameters</uicontrol> tab, and make sure the value of the
            <codeph>collect.xref.targets</codeph> parameter is set to <codeph>yes</codeph>. The
          default name of a target data file is <filepath>target.db</filepath>, but it can be
          changed by setting an absolute file path in the <codeph>targets.filename</codeph>
                parameter.<p><b><u>Example:</u></b> An example of a <filepath>target.db</filepath>
            file:<codeblock outputclass="language-xml">&lt;div element="book" href="#MailAdminGuide" number="1" targetptr="user_accounts">
 &lt;ttl>Administering User Accounts&lt;/ttl>
 &lt;xreftext>How to administer user accounts&lt;/xreftext>
 &lt;div element="part" href="#d5e4" number="I">
  &lt;ttl>First Part&lt;/ttl>
  &lt;xreftext>Part I, “First Part”&lt;/xreftext>
  &lt;div element="chapter" href="#d5e6" number="1">
    &lt;ttl>Chapter Title&lt;/ttl>
    &lt;xreftext>Chapter 1, Chapter Title&lt;/xreftext>
    &lt;div element="sect1" href="#src_chapter" number="1" targetptr="src_chapter">
      &lt;ttl>Section1 Title&lt;/ttl>
      &lt;xreftext>xreflabel_here&lt;/xreftext>
    &lt;/div>
  &lt;/div>
 &lt;/div>
&lt;/div></codeblock></p></info>
      </step>
      <step>
        <cmd>Insert <xmlelement>olink</xmlelement> elements in the DocBook documents.</cmd>
        <info>When editing a DocBook XML document in <uicontrol>Author</uicontrol> mode, the
            <uicontrol>Insert OLink</uicontrol> action is available in the <uicontrol><image
              href="../img/LinkDrop.png" id="image_uq1_hkx_sr"/>Link</uicontrol> drop-down menu from
          the toolbar. This action opens the <uicontrol>Insert OLink</uicontrol> dialog box that
          allows you to select the target of an <xmlelement>olink</xmlelement> from the list of all possible
          targets from a specified target database document (specified in the <uicontrol>Targetset
            URL</uicontrol> field). Once a <uicontrol>Targetset URL</uicontrol> is selected, the
          structure of the target documents is presented. For each target document
            (<xmlatt>targetdoc</xmlatt>), its content is displayed, allowing you to easily identify
          the appropriate <xmlatt>targetptr</xmlatt>. You can also use the search fields to quickly
          identify a target. If you already know the values for the <xmlatt>targetdoc</xmlatt> and
            <xmlatt>targetptr</xmlatt> attributes, you can insert them directly in the corresponding
                fields.<p><b><u>Example:</u></b> In the following image, the target database
            document is called <filepath>target.xml</filepath>, <i>dbadmin</i> is selected for the
            target document (<xmlatt>targetdoc</xmlatt>), and <i>bldinit</i> is selected as the
            value for the <xmlatt>targetptr</xmlatt> attribute. Notice that you can also add XREF
                  text into the <xmlelement>olink</xmlelement> by using the <uicontrol>xreftext</uicontrol> field.</p><p>
            <fig product="editor author developer" id="fig_vvd_kfr_2s">
              <title>Insert OLink Dialog Box</title>
              <image href="../img/sa_insert_olink.png" id="image_wvd_kfr_2s"/>
            </fig>
          </p><p>
            <fig product="editorEclipse authorEclipse developerEclipse" id="fig_xvd_kfr_2s">
              <title>Insert OLink Dialog Box</title>
              <image href="../img/ec_insert_olink.png" id="image_yvd_kfr_2s"/>
            </fig>
          </p></info>
      </step>
      <step>
        <cmd>Process a DocBook transformation for each document to generate the output.</cmd>
        <substeps id="substeps_c21_yhr_2s">
          <substep>
            <cmd>Edit the transformation scenario and set the value of the
                <codeph>target.database.document</codeph> parameter to be the URL of the target
              database document.</cmd>
          </substep>
          <substep>
            <cmd>Apply the transformation scenario.</cmd>
          </substep>
        </substeps>
      </step>
    </steps>
  </taskbody>
</task>
