<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_advanced_styling_multiple_before_and_after_pseudo_elements">
  <title>Using the :before(n) and :after(n) CSS Pseudo-Elements</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>:before pseudo-element</indexterm>
        <indexterm>:after pseudo-element</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Although not standard, this extension may be useful if you want to style sections by adding
      multiple levels of static content. To add static content to an element, you would normally use
      a <codeph>:before</codeph> or <codeph>:after</codeph> pseudo-element. </p>
    <p>This example adds static text before the title ("Chapter 1", "Chapter 2", etc.):</p>
    <codeblock outputclass="language-css">h1:before {
  content: "Chapter " counter(chapter) ".";
  color: blue;
}</codeblock>
    <p>All of this is styled with the same color (blue in this example). Using standard CSS, it is
      impossible to style specific aspects of it (for example, just the chapter number with a larger
      font and with red). However, you can do it using multiple <codeph>before(n)</codeph> or
        <codeph>after(n)</codeph> pseudo-elements: </p>
    <codeblock outputclass="language-css">h1:before(3) {
  content: "Chapter ";
  color: blue;
}
h1:before(2) {
  content: counter(chapter);
  color: red;
  font-size: large;
}
h1:before(1) {
  content: ".";
  color: blue;
}</codeblock>
    <note type="other" othertype="Notes">
      <ul id="ul_ybj_c5b_ckb" irina="irina">
        <li>The bigger the level, the more distant the pseudo-element is.</li>
        <li>Level 1 corresponds to normal <codeph>:before</codeph> or <codeph>:after</codeph> pseudo-elements.</li>
      </ul>
    </note>
  </body>
</topic>
