<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dcpp_how_to_enable_code_syntax_highlight">
  <title>How to Enable Code Syntax Highlighting</title>
  <body>
    <p>This topic refers only to the <uicontrol keyref="pdf-html5-transformation"/> transformation
      type. </p>
    <p>You can use syntax highlighting to make it easier to read your code snippets by displaying
      each type of code in different colors and fonts. In the DITA topics, set the
        <xmlatt>outputclass</xmlatt> attribute on the <xmlelement>codeblock</xmlelement> elements to
      one of these values:</p>
    <ul conkeyref="reusables-transforming-documents/ul-output-class-values">
      <li/>
    </ul>
    <p>For example, for a java snippet:</p>
    <codeblock outputclass="language-xml">&lt;codeblock outputclass="language-java">
   for (int i=0; i &lt;100; i++) {
     // do something
   }
&lt;/codeblock></codeblock>
    <p>The resulting HTML fragment in the merged HTML5 document is:</p>
    <codeblock outputclass="language-xml"> &lt;pre class="+ topic/pre pr-d/codeblock pre codeblock language-java" 
    xml:space="preserve">
   &lt;strong class="hl-keyword" style="color:#7f0055">for&lt;/strong> 
       (&lt;strong class="hl-keyword" style="color:#7f0055">int&lt;/strong> 
         i=&lt;span class="hl-number">0&lt;/span>; i 
            &lt;&lt;span class="hl-number">100&lt;/span>; i++) {
     &lt;em class="hl-comment" style="color:#006400">// do something&lt;/em>
   }
&lt;/pre></codeblock>
    <p>And in the output, it will be rendered as:</p>
    <image href="../img/dcpp_how_to_enable_code_syntax_highlight_java.png" id="image_rcs_f4d_b2b"/>
    <section id="section_vvl_z4d_b2b">
      <title>Changing the Colors for the Syntax Highlighting </title>
      <p>As you can see in the above example, the HTML elements <xmlelement>span</xmlelement> and
          <xmlelement>strong</xmlelement> are used to color the content. Since they have a
          <xmlatt>style</xmlatt> attribute set, the overriding properties need to be marked with
          <codeph>!important</codeph>. </p>
      <p>Suppose you want to color the keywords in red and the comments in blue. To do so, add the
        following to your <xref href="dcpp_the_customization_css.dita">customization CSS</xref>:</p>
      <codeblock outputclass="language-css">.hl-keyword {
  color: red !important;
}
.hl-comment {
  color: blue !important;
}</codeblock>
    </section>
  </body>
</topic>
