<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="json-instance-generator">
  <title>Generating Sample JSON Files</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Generate Sample JSON Files tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> includes a tool for generating sample JSON files. To generate sample
      JSON files from a JSON Schema, select <uicontrol>Generate Sample JSON Files</uicontrol> from
      the <menucascade product="developer editor">
        <uicontrol>Tools</uicontrol>
        <uicontrol>JSON Tools</uicontrol>
      </menucascade><menucascade product="developerEclipse editorEclipse">
        <uicontrol>XML Tools</uicontrol>
        <uicontrol>JSON Tools</uicontrol>
      </menucascade> menu. The action opens a dialog box where you can configure a variety of
      options for generating the files.</p>
    <p>
      <fig>
        <title>Generate Sample JSON Files Dialog Box</title>
        <image href="../img/json_generate_sample.png"/>
      </fig>
    </p>
    <p>The <uicontrol>Generate Sample JSON Files</uicontrol> dialog box includes the following
      fields and options:<dl>
        <dlentry>
          <dt><uicontrol>Schema URL</uicontrol></dt>
          <dd>The URL of the Schema location. You can specify the path by using the text field, the
            history drop-down menu, or the browsing actions in the <uicontrol><image
                href="../img/BrowseDrop.png"/>Browse</uicontrol> drop-down list.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Associate schema in the document</uicontrol></dt>
          <dd>If enabled, the specified schema will be associated with the generated files.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Output folder</uicontrol></dt>
          <dd>Path to the folder where the generated JSON instances will be saved.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>File name</uicontrol></dt>
          <dd> The name of the instance(s) that will be generated. By default,
              <filepath>instance.json</filepath> is used. </dd>
        </dlentry>
        <dlentry id="number-instances">
          <dt><uicontrol>Number of instances</uicontrol></dt>
          <dd>The desired number of JSON instances to be generated. When more than one instance is
            generated, the index of the instance will be added to its file name.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Property value</uicontrol></dt>
          <dd>You can specify the way the values of the properties are generated. The following
            options are available:<ul id="ul_b2k_wzv_thb">
              <li><i>None</i> - Assigns empty values for properties (a template file will be
                generated). This is the default value.</li>
              <li><i>Default</i> - Assigns the name of the property as the value (for strings) or
                assigns the specified minimum value (for numbers).</li>
              <li><i>Random</i> - Assigns random values according to schema restrictions.</li>
            </ul></dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Generate optional properties</uicontrol></dt>
          <dd>If selected, the JSON instance will be generated with optional properties that are
            defined in the JSON schema. Otherwise, only the required properties will be
            generated.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Generate additional content</uicontrol></dt>
          <dd>If selected, the JSON instance will be generated with additional properties that are
            defined in the JSON schema as <codeph>additionalProperties</codeph> and additional items
            that are defined as <codeph>additionalItems</codeph> (in the case of an Array).</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Choice strategy</uicontrol></dt>
          <dd>You can specify the way an instance will be generated from a schema that contains a
              <codeph>CombinedSchema</codeph> (with either <i>oneOf</i> or <i>anyOf</i>). The
            following options are available:<ul id="ul_xxv_j1w_thb">
              <li><i>First</i> - The first defined schema in <i>oneOf</i> or <i>anyOf</i> will be
                used.</li>
              <li><i>Random</i> - A random schema defined in <i>oneOf</i> or <i>anyOf</i> will be
                used.</li>
            </ul></dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Recursion level</uicontrol></dt>
          <dd>This option controls the maximum allowed depth (must be a number), in case the
            selected schema contains recursive calls of <codeph>$ref</codeph> schemas referencing
            one another. By default, it is set to 1, meaning that the generation for the recursive
            calls will stop after the first iteration.</dd>
        </dlentry>
        <dlentry>
          <dt><uicontrol>Open first instance in editor</uicontrol></dt>
          <dd>If selected, the first generated instance is opened in the editor.</dd>
        </dlentry>
      </dl></p>
    <p>You can click <uicontrol>OK</uicontrol> at any point to generate the sample JSON files.</p>
  </body>
</topic>
