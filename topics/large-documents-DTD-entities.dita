<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="large-documents-DTD-entities">
  <title>Combining XML Document Content Using DTD Entities</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XML documents<indexterm>DTD Entities</indexterm></indexterm>
        <indexterm>DTD Entities</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>There are two conditions for including a document fragment using DTD entities:</p>
    <ul irina="irina">
      <li>The master document should declare the DTD to be used, while the external entities should
        declare the XML fragments to be referenced.</li>
      <li>The referenced documents that contain the fragments cannot also define the DTD because the
        main document will not be valid. If you want to validate the parts separately you have to
          <xref href="including-document-parts-with-XInclude.dita">use XInclude</xref> for
        assembling the parts together with the <term>master file</term>.</li>
    </ul>
    <p>The master document looks like
      this:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt; 
&lt;!DOCTYPE book SYSTEM "../xml/docbookx.dtd" [ 
&lt;!ENTITY testing SYSTEM "testing.xml" &gt; ]
&gt; 
&lt;book&gt; 
&lt;chapter&gt; ...</codeblock></p>
    <p>The referenced document (<i>testing.xml</i>) looks like this:</p>
    <codeblock outputclass="language-xml">&lt;section&gt; ... here is the section content ... &lt;/section&gt;</codeblock>
    <note>
      <p>The indicated DTD and the element names (<i>section</i>, <i>chapter</i>) are used here only
        for illustrating the inclusion mechanism. You can use any DTD and element names you
        need.</p>
    </note>
    <p>The content from the referenced file (in the example above, it is a
        <xmlelement>section</xmlelement> in the <i>test.xml</i> file) can be inserted somewhere in
      the master
      document:<codeblock outputclass="language-ini">... &amp;testing; ...</codeblock></p>
    <p>To obtain output in various formats (for example, PDF or HTML), you simply need to apply an
      XSLT stylesheet over the master document using a transformation scenario.</p>
    <section conkeyref="reusables-editing-documents/Entities_XInclude_viewing_expanded_content"
      id="d1187e84"/>
  </body>
</topic>
