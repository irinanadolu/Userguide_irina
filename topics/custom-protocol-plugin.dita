<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="custom-protocol-plugin">
  <title>Custom Protocol Plugin Extension</title>
  <shortdesc>This type of <xref keyref="glossentry_plugin"><term>plugin</term></xref> allows you to
    work with a custom designed protocol for retrieving and storing files.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Plugin extensions<indexterm>Custom Protocol</indexterm></indexterm>
        <indexterm>Custom Protocol plugin extension</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>It provides the following API:</p>
    <p>
      <dl>
        <dlentry>
          <dt><b><i>URLStreamHandlerPluginExtension</i> interface</b></dt>
          <dd>
            <p>There is one method that must be implemented:</p>
            <p>
              <dl>
                <dlentry>
                  <dt><i>getURLStreamHandler(String protocol)</i></dt>
                  <dd>It takes as an argument the name of the protocol and returns a
                      <codeph>URLStreamHandler</codeph> object, or null if there is no URL handler
                    for the specified protocol.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
      </dl>
    </p>
    <p>This type of <term>plugin</term> extension can be usually combined with a <xref
        href="workspace-access-plugin.dita">Workspace Access plugin extension</xref> that can add a
      custom toolbar with custom actions for opening documents from a certain source.</p>
    <p>As an alternative, two older <term>plugin</term> extensions can also be used to add a toolbar
      action for showing a custom URL chooser:</p>
    <p>
      <dl>
        <dlentry>
          <dt><b><i>URLChooserPluginExtension2</i> interface</b></dt>
          <dd>
            <p>Makes it possible to create your own dialog box that works with the custom protocol.
              This interface provides two methods:</p>
            <p>
              <dl>
                <dlentry>
                  <dt><i>chooseURLs(StandalonePluginWorkspace workspaceAccess)</i></dt>
                  <dd>Returns a <codeph>URL[]</codeph> object that contains the URLs the user
                    decided to open with the custom protocol. You can invoke your own URL chooser
                    dialog box here and then return the chosen URLs having your own custom protocol.
                    You have access to the workspace of <ph><ph keyref="product"/></ph>.</dd>
                </dlentry>
                <dlentry>
                  <dt><i>getMenuName()</i></dt>
                  <dd>Returns a <codeph>String</codeph> object that is the name of the entry added
                    in the <uicontrol>File</uicontrol> menu.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
        <dlentry>
          <dt><b><i>URLChooserToolbarExtension</i> interface</b></dt>
          <dd>
            <p>Makes it possible to provide a toolbar entry that is used for launching the custom
              URLs chooser from the <i>URLChooserPluginExtension</i> implementation. This interface
              provides two methods:</p>
            <p>
              <dl>
                <dlentry>
                  <dt><i>getToolbarIcon()</i></dt>
                  <dd>Returns the <codeph>javax.swing.Icon</codeph> image used on the toolbar.</dd>
                </dlentry>
                <dlentry>
                  <dt><i>getToolbarTooltip()</i></dt>
                  <dd>Returns a <codeph>String</codeph> that is the tooltip used on the toolbar
                    button.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
      </dl>
    </p>
  </conbody>
</concept>
