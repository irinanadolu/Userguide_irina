<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="json-associate-schema-validation-scenario">
  <title>Associating a Schema Through a Validation Scenario</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>JSON documents<indexterm>Associate schema through a validation
            scenario</indexterm></indexterm>
        <indexterm>Associate schema through a validation scenario</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> uses the rules defined in the detected schema to report errors and
      warnings during automatic and manual validations that help maintain the structural integrity
      of your JSON documents. <ph keyref="product"/> includes built-in validation engines for
      validating JSON documents against a JSON Schema or Schematron schema. There are several
      methods that can be used to validate JSON document with a schema. </p>
    <section id="configure_a_validation_scenario_and_specify_the_s">
      <title>Configure a Validation Scenario and Specify the Schema</title>
      <p>You can specify the schema to be used for validation directly in the <xref
          href="json-validation-scenario.dita">JSON validation scenario</xref>. To associate a
        schema to a validation scenario to be used whenever the scenario is invoked, follow these steps:<ol>
          <li>Select the <uicontrol><image href="../img/ValidationConfig16.png"
                id="image_k3g_x5v_sr"/>Configure Validation Scenario(s)</uicontrol> from the <ph
              product="developer editor"><uicontrol><image href="../img/ValidateDrop.png"
                  id="image_dyn_x5v_sr"/>Validation</uicontrol> toolbar drop-down menu</ph><ph
              product="developerEclipse editorEclipse">toolbar</ph>, from the <menucascade
              product="developer editor">
              <uicontrol>Document</uicontrol>
              <uicontrol>Validate</uicontrol>
            </menucascade><uicontrol product="developerEclipse editorEclipse">JSON</uicontrol> menu,
            or from the <uicontrol>Validate</uicontrol> submenu when invoking the contextual menu on
            a JSON file in the <xref href="using-the-project-view.dita#using-the-project-view"><ph
                product="developer editor"><uicontrol>Project</uicontrol> view</ph><ph
                product="developerEclipse editorEclipse"><uicontrol>Project Explorer</uicontrol>
              view</ph></xref>).</li>
          <li>Click the <uicontrol>New</uicontrol> button to <xref
              href="json-validation-scenario.dita">create a new validation scenario</xref> or the
              <uicontrol>Edit</uicontrol> button to modify an existing one.</li>
          <li>Add or configure validation units according to your needs. For details about all of
            the configuration options, see <xref href="json-validation-scenario.dita"/>.</li>
          <li>Click the <uicontrol><image href="../img/Options16.png" id="image_o3p_1g4_3kb"
              />Specify Schema</uicontrol> button to select the schema to be associated with the
            validation unit.</li>
          <li>Click <uicontrol>OK</uicontrol> on both dialog boxes.</li>
        </ol></p>
      <p><b>Result:</b> The schema is now associated with that validation scenario whenever it is
        invoked.</p>
    </section>
    <section id="use_the_validate_with_action_to_specify_a_schema">
      <title>Use the <uicontrol>Validate with</uicontrol> Action to Specify a Schema for Validating
        the Current Document</title>
      <p>To validate the current document using a specified schema, follow these steps:<ol>
          <li>
            <p>Select the <uicontrol>Validation with</uicontrol> action from the <uicontrol><image
                  href="../img/ValidateDrop.png" id="image_ct1_cnd_w3b"/>Validation</uicontrol>
              drop-down menu on the toolbar (or <menucascade product="developer editor">
                <uicontrol>Document</uicontrol>
                <uicontrol>Validate</uicontrol>
              </menucascade><uicontrol product="developerEclipse editorEclipse">JSON</uicontrol>
              menu).</p>
            <p><b>Step Result:</b> The <uicontrol>Validate with</uicontrol> dialog box is
              displayed:</p>
            <p>
              <fig>
                <title>Validate with Dialog Box</title>
                <image href="../img/JSON-validate-with.png"/>
              </fig>
            </p>
            <p>This dialog box contains the following options:<ul>
                <li>
                  <uicontrol>URL</uicontrol> - Allows you to specify or select a URL for the schema.
                  It also keeps a history of the last used schemas. The URL must point to the schema
                  file that can be loaded from the local disk or from a remote server through
                  HTTP(S), FTP(S)<ph product="editor developer"> or a <xref
                      href="howto-custom-protocol-plugin.dita#howto-custom-protocol-plugin"
                      format="dita">custom protocol</xref></ph>. You can specify the URL by using
                  the text field, the history drop-down, the <xref
                    href="editor-variables.dita#editor-variables"><uicontrol><image
                        href="../img/InsertEditorVariables16.png"/>Insert Editor
                      Variables</uicontrol></xref> button, or the browsing actions in the
                      <uicontrol><image href="../img/BrowseDrop.png"/>Browse</uicontrol> drop-down
                  list.</li>
                <li>
                  <uicontrol>Schema type</uicontrol> - You can select one of the following two types
                  (other types of schema will not work with JSON documents):<ul id="ul_y1r_j24_3kb">
                    <li><uicontrol>JSON</uicontrol> - Used for validating JSON documents against a
                      specified JSON Schema.</li>
                    <li><uicontrol>Schematron</uicontrol> - Used for validating JSON documents
                      against a specified Schematron schema. You can also select a
                        <uicontrol>Schematron phase</uicontrol> that you want to use for the
                        validation.<note
                        conkeyref="reusables-editing-documents/note-JSON-validate-against-schematron"
                      /></li>
                  </ul></li>
              </ul></p>
          </li>
          <li>Select the schema to be associated with the manual validation.</li>
          <li>Click <uicontrol>OK</uicontrol>.</li>
        </ol></p>
      <p><b>Result:</b> The current document is validated using the schema you specified.</p>
    </section>
    <section id="use_the_validate_with_schema_action_to_specify_a_">
      <title>Use the <uicontrol>Validate with Schema</uicontrol> Action to Specify a Schema for
        Validating all Selected JSON Documents</title>
      <p>To validate multiple JSON documents using a specified schema, follow these steps:<ol>
          <li>Select all the JSON documents you want to validate in the <ph
              product="developer editor"><uicontrol>Project</uicontrol></ph>
            <ph product="developerEclipse editorEclipse"><uicontrol>Project Explorer</uicontrol></ph>
            view.</li>
          <li>
            <p>Invoke the contextual menu (right-click) and select the <uicontrol>Validate with
                Schema</uicontrol> action from the <uicontrol>Validate</uicontrol> submenu.</p>
            <p><b>Step Result:</b> The <uicontrol>Validate with</uicontrol> dialog box is
              displayed:</p>
            <p>
              <fig>
                <title>Validate with Dialog Box</title>
                <image href="../img/JSON-validate-with.png"/>
              </fig>
            </p>
            <p>This dialog box contains the following options:<ul>
                <li>
                  <uicontrol>URL</uicontrol> - Allows you to specify or select a URL for the schema.
                  It also keeps a history of the last used schemas. The URL must point to the schema
                  file that can be loaded from the local disk or from a remote server through
                  HTTP(S), FTP(S)<ph product="editor developer"> or a <xref
                      href="howto-custom-protocol-plugin.dita#howto-custom-protocol-plugin"
                      format="dita">custom protocol</xref></ph>. You can specify the URL by using
                  the text field, the history drop-down, the <xref
                    href="editor-variables.dita#editor-variables"><uicontrol><image
                        href="../img/InsertEditorVariables16.png"/>Insert Editor
                      Variables</uicontrol></xref> button, or the browsing actions in the
                      <uicontrol><image href="../img/BrowseDrop.png"/>Browse</uicontrol> drop-down
                  list.</li>
                <li>
                  <uicontrol>Schema type</uicontrol> - You can select one of the following two types
                  (other types of schema will not work with JSON documents):<ul id="ul_q1f_3g4_3kb">
                    <li><uicontrol>JSON</uicontrol> - Used for validating JSON documents against a
                      specified JSON Schema.</li>
                    <li><uicontrol>Schematron</uicontrol> - Used for validating JSON documents
                      against a specified Schematron schema. You can also select a
                        <uicontrol>Schematron phase</uicontrol> that you want to use for the
                        validation.<note
                        conkeyref="reusables-editing-documents/note-JSON-validate-against-schematron"
                      /></li>
                  </ul></li>
              </ul></p>
          </li>
          <li>Select the JSON schema that you want to use to validate all selected JSON
            documents.</li>
          <li>Click <uicontrol>OK</uicontrol>.</li>
        </ol></p>
      <p><b>Result:</b> The selected JSON documents are validated using the JSON schema you
        specified.</p>
    </section>
  </body>
</topic>
