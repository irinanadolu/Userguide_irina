<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="custom-attribute-value-editor">
  <title>Customizing Attribute Value Editors</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Framework customization<indexterm>Extensions<indexterm>Custom Attribute Value
              Editor</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The <i>CustomAttributeValueEditor</i> extension point allows you customize the attribute
      value editing mechanisms in <ph keyref="product"/>. It changes the <uicontrol><image
          href="../img/Open16.png"/>Browse</uicontrol> button found in the attribute editors to an
          <uicontrol><image href="../img/EditComment16.png"/> Edit</uicontrol> button. When a user
      clicks that <uicontrol><image href="../img/EditComment16.png"/>Edit</uicontrol> button, your
      custom attribute value editor will be presented.</p>
    <p>The <uicontrol><image href="../img/EditComment16.png"/>Edit</uicontrol> button can be
      accessed in the following attribute editors:<ul>
        <li>The <xref href="author-attributes-view.dita#author-attributes-view"
              ><uicontrol>Attributes</uicontrol> view in <uicontrol>Author</uicontrol> mode</xref>
          (when the <uicontrol><image href="../img/Collapsed16.png"/>Expand</uicontrol> button is
          used to reveal an expanded panel).</li>
        <li>The <xref href="attributes-panel.dita#attributes-panel"
              ><uicontrol>Attributes</uicontrol> view in <uicontrol>Text</uicontrol> mode</xref>
          (when the <uicontrol><image href="../img/Collapsed16.png"/>Expand</uicontrol> button is
          used to reveal an expanded panel).</li>
        <li>The <xref href="author-attributes-view.dita#author-attributes-view/in-place-attr-editor"
              ><b>In-place Attributes Editor</b></xref> when invoked in
            <uicontrol>Author</uicontrol> mode.</li>
        <li>The <b>In-place Attributes Editor</b> invoked in the <xref href="outliner-view.dita"
              ><uicontrol>Outline</uicontrol> view</xref>.</li>
      </ul></p>
    <section id="implement_an_editpropertieshandler">
      <title>How to Implement a <i>CustomAttributeValueEditor</i></title>
      <p>To implement your own <i>CustomAttributeValueEditor</i>, follow this procedure:<ol>
          <li>Extend the <xref
              href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/CustomAttributeValueEditor.html"
              format="html" scope="external"
                ><i>ro.sync.ecss.extensions.api.CustomAttributeValueEditor</i></xref> abstract
            class.</li>
          <li>To instruct <ph keyref="product"/> to use this newly created implementation, use
            either of the following methods:<ol>
              <li>If you have <xref href="dg-extensions-bundle.dita#dg-extensions-bundle">configured
                  an extensions bundle</xref>, you can return the <i>CustomAttributeValueEditor</i>
                implementation using the
                  <i>ro.sync.ecss.extensions.api.ExtensionsBundle.createCustomAttributeValueEditor()</i>
                method.</li>
              <li>Specify the <i>CustomAttributeValueEditor</i> in the <uicontrol>Author custom
                  attribute value editor</uicontrol> individual extension in the <xref
                  href="document-type-extensions-tab.dita#document-type-extensions-tab"
                    ><uicontrol>Extensions</uicontrol> tab</xref> of the <xref
                  href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
                    Type</uicontrol> configuration dialog box</xref> for your particular document
                type.</li>
            </ol></li>
        </ol></p>
    </section>
    <section id="example">
      <title>Example</title>
      <p>The following example creates a very simple custom attribute value editor:</p>
      <codeblock outputclass="language-java">/**
 * A custom attribute value editor.
 */
public class MyCustomAttributeValueEditor extends CustomAttributeValueEditor {

  /**
   * @see ro.sync.ecss.extensions.api.Extension#getDescription()
   */
  @Override
  public String getDescription() {
    return "My custom attribute value editor";
  }

  /**
   * @see ro.sync.ecss.extensions.api.CustomAttributeValueEditor#getAttributeValue
             (ro.sync.ecss.extensions.api.EditedAttribute, java.lang.Object)
   */
  @Override
  public String getAttributeValue(EditedAttribute attribute, Object parentComponent)
      throws CancelledByUserException {
    // Show an input dialog for collecting the new value
    return JOptionPane.showInputDialog
                    ("Set a new value for " + attribute.getAttributeQName() + ":");
  }

  /**
   * @see ro.sync.ecss.extensions.api.CustomAttributeValueEditor#shouldHandleAttribute
                     (ro.sync.ecss.extensions.api.EditedAttribute)
   */
  @Override
  public boolean shouldHandleAttribute(EditedAttribute attribute) {
    // Handle all attributes
    return true;
  }
}</codeblock>
      <p><b>Example result:</b> If a user were to click the <uicontrol><image
            href="../img/EditComment16.png"/>Edit</uicontrol> button in any of the attribute
        editors, the following dialog box would be displayed that allows the user to insert a value
        for the particular attribute:</p>
      <p>
        <image href="../img/customAttrEditor.png" placement="break"/>
      </p>
    </section>
  </body>
</topic>
