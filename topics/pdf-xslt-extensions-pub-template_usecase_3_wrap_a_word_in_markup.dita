<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-pub-template_usecase_3_wrap_a_word_in_markup">
  <title>How to Wrap Words in Markup</title>
  <body>
    <p>Suppose you want compound words that contain hyphens (or any other criteria) to be wrapped
      with inline elements (such as the HTML <xmlelement>code</xmlelement> element).</p>
    <p>To add this functionality using an <i>Oxygen Publishing Template</i>, follow these steps:<ol
        id="ol_gjr_kq5_njb">
        <li conkeyref="reusables-dcpp/pt-li1"/>
        <li conkeyref="reusables-dcpp/pt-li2"/>
        <li conkeyref="reusables-dcpp/pt-li3"/>
        <li>In this folder, create an XSL file (for example, named
            <filepath>merged2htmlExtension.xsl</filepath>) with the following
          content:<codeblock outputclass="language-xml">  &lt;xsl:template match="text()">

    &lt;xsl:variable name="txt">
      &lt;xsl:next-match />
    &lt;/xsl:variable>

    &lt;xsl:analyze-string regex="(\w|\-)+" select="$txt">
      &lt;xsl:matching-substring>
        &lt;!-- A word -->
        &lt;xsl:choose>
          &lt;xsl:when test="contains(.,'-')">          
            &lt;!-- A compound word -->
            &lt;code class='compound-word'>&lt;xsl:value-of  select="."/>&lt;/code>
          &lt;/xsl:when>
          &lt;xsl:otherwise>
            &lt;!-- A simple word -->
            &lt;xsl:value-of select="." />
          &lt;/xsl:otherwise>
        &lt;/xsl:choose>
      &lt;/xsl:matching-substring>
      &lt;xsl:non-matching-substring>
        &lt;!-- Not a word -->      
        &lt;xsl:value-of select="." />
      &lt;/xsl:non-matching-substring>
    &lt;/xsl:analyze-string>

  &lt;/xsl:template></codeblock></li>
        <li>Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
              ><i>template descriptor file</i></xref> associated with your <i>publishing
            template</i> (the <i>.opt</i> file) and set the XSLT stylesheet created in the previous
          step with the <codeph>com.oxygenxml.pdf.css.xsl.merged2merged</codeph> XSLT extension
          point:<codeblock outputclass="language-xml">&lt;publishing-template&gt;
    ...
    &lt;pdf&gt;
        ...        
        &lt;xslt&gt;
            &lt;extension 
              id="com.oxygenxml.pdf.css.xsl.merged2merged"
              file="xslt/merged2mergedExtension.xsl"/&gt;
        &lt;/xslt&gt;</codeblock></li>
        <li conkeyref="reusables-dcpp/pt-li6"/>
        <li conkeyref="reusables-dcpp/pt-li7"/>
        <li conkeyref="reusables-dcpp/pt-li8"> </li>
      </ol></p>
  </body>
</topic>
