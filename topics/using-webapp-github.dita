<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="using-webapp-github">
  <title>Using Web Author with a Git Repository</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>GitHub repository support</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="webappProduct"/> includes a <i>Git</i>
      <xref keyref="glossentry_plugin"><term>plugin</term></xref> that allows you to edit files
      stored in a Git repository (including GitHub, GitLab, Bitbucket, and generic Git
      integrations). To access the files in these repositories, it is assumed that your system
      administrator has <xref
        href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin">enabled and
        configured this <term>plugin</term></xref> in your installation of <ph
        keyref="webappProduct"/>.</p>
    <section id="open_or_create_file_stored_in_github">
      <title>Opening or Creating Files</title>
      <p>To open a file stored in a Git repository or create a new file, go to the main <xref
          href="webapp-create-open-docs.dita#webapp-create-open-docs">Dashboard</xref>, click the
        tab for your particular Git file repository integration (GitHub, Bitbucket, GitLab, or Git),
        and log in. To create a new document, click on <uicontrol>New</uicontrol> in the top-right
        corner. To open an existing document, browse for the file and double-click it (or tap on a
        mobile device). If you need to change the repository or branch, click the <uicontrol><image
            href="../img/WebAppEdit16.png"/>Edit</uicontrol> button.</p>
      <p>
        <fig>
          <title>Git Browsing Functionality</title>
          <image href="../img/wa_git_browsing.png"/>
        </fig>
      </p>
      <note conkeyref="reusables-webapp/upload-file-note"/>
      <note>If your connection has not yet been configured, a dialog box will be displayed that
        provides instructions for configuring and selecting the URL for the connection. For more
        information, see <xref
          href="webapp-configure-plugins.dita#webapp-configure-plugins/configure_a_plugin"/>.</note>
    </section>
    <section id="commit_a_file_to_github">
      <title>Committing Files to a Git Repository</title>
      <p>To commit a file to a configured Git repository, select <uicontrol>Commit</uicontrol> from
        the <uicontrol><image href="../img/WAGitDrop.png" id="image_vnp_4rp_hnb"/>Git</uicontrol>
        drop-down menu located on the toolbar (or use the <uicontrol><shortcut>Ctrl + S (Command + S
            on OS X)</shortcut></uicontrol> shortcut). If you have <term>push</term> access to the
        repository, a <uicontrol>Commit on Git</uicontrol> dialog box will be opened that allows you
        to enter a <i>commit message</i> and choose the branch where the commit will be processed
        (you can also edit the name of the branch in this dialog box).</p>
      <p>
        <fig id="fig_cyf_prp_hnb">
          <title>Commit on Git Dialog Box</title>
          <image href="../img/WA_Commit_git.png" id="image_dyf_prp_hnb"/>
        </fig>
      </p>
      <p>The <uicontrol>Commit on Git</uicontrol> dialog box includes the following options:<ul
          id="ul_ejk_srp_hnb" irina="irina">
          <li><b>Commit message</b> - Use this text box to enter a commit message.</li>
          <li><b>Choose a previously entered comment</b> - Use this history drop-down to select a
            previously used commit message.</li>
          <li><b>Signed-off-by</b> - Use this option to specify a person who <i>signed off</i> on
            the commit.<note type="attention">This option is only visible if the <xref
                href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin/allow-users-signed-off"
                  ><uicontrol>Allow users to add a Signed-off-by trailer to commit
                  messages</uicontrol> option</xref> is enabled in your organization's Git
              configuration.</note></li>
          <li><b>Branch</b> - You can choose to commit on the current branch or a new branch. If you
            choose <uicontrol>Commit on a new branch</uicontrol>, the new branch will be created
            automatically and you also have the option to automatically create a pull request.</li>
          <li><b>Open this dialog with Ctrl+S</b> - If this option is selected, the
              <uicontrol>Commit on Git</uicontrol> dialog box can be opened by using the
                <uicontrol><shortcut>Ctrl + S</shortcut></uicontrol> keyboard shortcut.</li>
        </ul><note>If your organization uses GitLab protected branches and you do not have access to
          the current branch, you will only have the option to <uicontrol>Commit on a new
            branch</uicontrol>.</note></p>
      <p>If someone else has committed the current document since you last opened it (causing
        conflicts), a <uicontrol>Commit Status</uicontrol> confirmation dialog box will appear.</p>
      <p>
        <fig>
          <title>Commit Status Dialog Box</title>
          <image href="../img/commit_status.png"/>
        </fig>
      </p>
      <p>The <uicontrol>Commit Status</uicontrol> dialog box allows you to choose the following options:<ul irina="irina">
          <li><uicontrol>Click here</uicontrol> link - You can click the link at the top of the
            dialog box to see the difference between the two commits.</li>
          <li><uicontrol>Merge and commit</uicontrol> - Merges your changes with versions that were
            committed by other people and commits the merged changes.</li>
          <li><uicontrol>Commit on a new branch</uicontrol> - Creates a new branch that contains
            your version of the document so that you can merge the changes at a later time, after
            the conflicts have been solved.</li>
          <li><uicontrol>Commit only my changes</uicontrol> - Commits your changes regardless of
            whether or not there was a conflict, and the changes made by the other user are
            lost.</li>
          <li><uicontrol>Cancel</uicontrol> - Cancels the operation and your changes are not
            committed to the repository. Before canceling, you could click the link at the top to
            see the differences, correct the conflicts manually, and then commit afterward using
            the <uicontrol>Commit only my changes</uicontrol> option.</li>
        </ul></p>
    </section>
    <section id="committing_to_a_repository_without_access">
      <title>Committing to a Repository Without Access Rights</title>
      <p>If you try to commit a file on a repository that you do not have access to, a dialog box is
        displayed that allows you to enter or choose a <i>commit message</i> but you cannot choose a
        branch. It warns you that continuing will commit the file to a new branch and allows you to
        create an automatic pull request.</p>
      <p>
        <fig>
          <title>Commit Error Dialog Box</title>
          <image href="../img/WA_commit_error.png"/>
        </fig>
      </p>
      <p>When you tap or click the <uicontrol>Commit</uicontrol> button, the Git connector will
        automatically do the following: <ul irina="irina">
          <li>Fork the project into your account, if it is not already.</li>
          <li>Create a new branch from the edited branch.</li>
          <li>Commit your changes on this newly created branch.</li>
          <li>Create a pull request from your newly created branch to the originally edited
            branch.</li>
          <li>Switch the editor to your branch so further save operations will just add new commits
            to your branch, thus updating the pull request with new changes.</li>
        </ul></p>
    </section>
    <section id="working_with_a_git_repository_stored_on_a_central">
      <title>Working with and Connecting to a Generic Git Repository Stored on a Central
        Server</title>
      <p>If you use <ph keyref="webappProduct"/> to access a generic Git repository stored on a
        central server, a clone of that repository is created on the Web Author server. This clone
        remains in sync with its original repository as follows:<ul irina="irina">
          <li>When you open a file, it is pulled from the original repository.</li>
          <li>When you commit a file, it is automatically pushed to the original repository.</li>
        </ul><note>Web Author cannot be used to edit files stored in a local repository on a user's
          computer.</note></p>
      <sectiondiv><b><u>How to Connect to a Generic Git Repository</u></b></sectiondiv>
      <p>To connect to a Git repository using the built-in generic Git connector, follow these steps:<ol>
          <li>Go to your repository page (for example, <b>https://github.com/owner/repo</b>) and
            copy the Git HTTPS URL (usually, this can be found using the
              <uicontrol>Clone</uicontrol> action and in some cases, you will need to copy the URL
            from within the displayed command).</li>
          <li>Go to the <xref href="webapp-create-open-docs.dita">Web Author Dashboard</xref> and
            click the generic <uicontrol><image href="../img/git24.png"/>Git</uicontrol> icon.</li>
          <li>Log in using your repository credentials.</li>
          <li>Paste the repository URL you copied in step 1 into the input field and click
              <uicontrol>Connect</uicontrol>.</li>
        </ol></p>
    </section>
    <section id="view_on_github_gitlab_or_bitbucket">
      <title>View on GitHub, GitLab, or Bitbucket</title>
      <p>The <uicontrol><image href="../img/WAGitDrop.png"/>Git</uicontrol> drop-down menu located
        on the toolbar includes an action to view the current document on your particular
        repository. Depending on your type of configured Git repository, the action is named
          <uicontrol>View on GitHub</uicontrol>, <uicontrol>View on GitLab</uicontrol>, or
          <uicontrol>View on Bitbucket</uicontrol>. Selecting this action opens the current document
        in a new browser tab where you can view the source code in a text editor on GitHub, GitLab,
        or Bitbucket. </p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="webapp-integrate-github-plugin.dita#webapp-integrate-github-plugin"/>
    </linklist>
  </related-links>
</topic>
