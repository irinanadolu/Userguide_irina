<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="oxy-allows-child-element">
  <title>oxy:allows-child-element() Function</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>oxy:allows-child-element function</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The <b>oxy:allows-child-element()</b> function allows you to check whether or not an element
      that matches the arguments of the function is valid as a child of the element at the current
      cursor position, according to the associated schema. It is evaluated at the cursor position
      and has the following signature:</p>
    <p><b><codeph>oxy:allows-child-element($childName, ($attributeName, $defaultAttributeValue,
          $contains?)?)</codeph></b></p>
    <p>The following parameters are supported:<parml>
        <plentry>
          <pt>childName</pt>
          <pd>The name of the element that you want to check if it is valid in the current context.
            Its value is a string that supports the following forms:<ul>
              <li>
                <p>The child element with the specified local name that belongs to the default
                  namespace.<codeblock outputclass="language-css">oxy:allows-child-element("para")</codeblock></p>
                <p>The above example verifies if the <xmlelement>para</xmlelement> element (of the
                  default namespace) is allowed in the current context.</p>
              </li>
              <li>
                <p>The child element with the local name specified by any
                  namespace.<codeblock outputclass="language-css">oxy:allows-child-element("*:para")</codeblock></p>
                <p>The above example verifies if the <xmlelement>para</xmlelement> element (of any
                  namespace) is allowed in the current context.</p>
              </li>
              <li>
                <p>A prefix-qualified name of an
                  element.<codeblock outputclass="language-css">oxy:allows-child-element("prefix:para")</codeblock></p>
                <p>The prefix is resolved in the context of the element where the cursor is located.
                  The function matches on the element with the <codeph>para</codeph> local name from
                  the previously resolved namespace. If the prefix is not resolved to a namespace,
                  the function returns a value of <codeph>false</codeph>.</p>
              </li>
              <li>
                <p>A specified namespace-URI-qualified name of an
                  element.<codeblock outputclass="language-css">oxy:allows-child-element("{namespaceURI}para")</codeblock></p>
                <p>The <codeph>namespaceURI</codeph> is the namespace of the element. The above
                  example verifies if the <xmlelement>para</xmlelement> element (of the specified
                  namespace) is allowed in the current context.</p>
              </li>
              <li>
                <p>Any
                  element.<codeblock outputclass="language-css">oxy:allows-child-element("*")</codeblock></p>
                <p>The above function verifies if any element is allowed in the current
                    context.<note>A common use case of
                      <codeph>oxy:allows-child-element("*")</codeph> is in combination with the
                      <codeph>attributeName</codeph> parameter.</note></p>
              </li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><codeph>attributeName</codeph></pt>
          <pd>The attribute of an element that you want to check if it is valid in the current
            context. Its value is a string that supports the following forms:<ul>
              <li>
                <p>The attribute with the specified name from no
                  namespace.<codeblock outputclass="language-css">oxy:allows-child-element("*", "class", " topic/topic ")</codeblock></p>
                <p>The above example verifies if an element with the <xmlatt>class</xmlatt>
                  attribute and the default value of this attribute (that contains the
                    <codeph>topic/topic</codeph> string) is allowed in the current context.</p>
              </li>
              <li>The attribute with the local name specified by any
                namespace.<codeblock outputclass="language-css">oxy:allows-child-element("*", "*:localname", " topic/topic ")</codeblock></li>
              <li>
                <p>A qualified name of an
                  attribute.<codeblock outputclass="language-css">oxy:allows-child-element("*", "prefix:localname", " topic/topic ")</codeblock></p>
                <p>The prefix is resolved in the context of the element where the cursor is located.
                  If the prefix is not resolved to a namespace, the function returns a value of
                    <codeph>false</codeph>.</p>
              </li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><codeph>defaultAttributeValue</codeph></pt>
          <pd>A string that represents the default value of the attribute. Depending on the value of
            the next parameter, the default value of the attribute must either contain this value or
            be equal to it.</pd>
        </plentry>
        <plentry>
          <pt><codeph>contains</codeph></pt>
          <pd>An optional boolean. The default value is <codeph>true</codeph>. For the
              <codeph>true</codeph> value, the default value of the attribute must contain the
              <codeph>defaultAttributeValue</codeph> parameter. If the value is
              <codeph>false</codeph>, the two values must be the same.</pd>
        </plentry>
      </parml></p>
  </body>
</topic>
