<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="oxygen-plugin">
  <title>General Configuration of an <ph keyref="product"/> Plugin</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Oxygen SDK<indexterm>Configuration</indexterm></indexterm>
        <indexterm>Plugins<indexterm>Configuration</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>The <ph keyref="product"/> functionality can be extended with <xref
        keyref="glossentry_plugin"><term>plugins</term></xref> that implement a clearly specified
      API. On the <ph keyref="product"/> website, there is an <xref
        href="https://www.oxygenxml.com/oxygen_sdk.html" format="html" scope="external">SDK</xref>
      with sample <term>plugins</term> (source and compiled Java code) and the Javadoc API necessary
      for developing custom <term>plugins</term>.</p>
    <p>The minimal implementation of a <term>plugin</term> must provide:</p>
    <ul irina="irina">
      <li>A Java class that extends the <i>ro.sync.exml.plugin.Plugin</i> class.</li>
      <li>A Java class that implements the <i>ro.sync.exml.plugin.PluginExtension</i>
        interface.</li>
      <li>A <term>plugin</term> descriptor file called <filepath>plugin.xml</filepath>.</li>
    </ul>
    <p>A <i>ro.sync.exml.plugin.PluginDescriptor</i> object is passed to the constructor
      of the subclass of the <i>ro.sync.exml.plugin.Plugin</i> class. It contains the
      following data items about the <term>plugin</term>:</p>
    <ul irina="irina">
      <li><b>basedir</b> (<i>File</i> object) - The base directory of the <term>plugin</term>.</li>
      <li><b>description</b> (<i>String</i> object) - The description of the
        <term>plugin</term>.</li>
      <li><b>name</b> (<i>String</i> object) - The name of the <term>plugin</term>.</li>
      <li><b>vendor</b> (<i>String</i> object) - The vendor name of the <term>plugin</term>.</li>
      <li><b>version</b> (<i>String</i> object) - The <term>plugin</term> version.</li>
      <li><ph id="plugin-id"><b>id</b> (<i>String</i> object) - A unique identifier.</ph></li>
      <li><ph><b>classLoaderType</b> - You can choose between <codeph>preferOxygenResources</codeph>
          (default value) and <codeph>preferReferencedResources</codeph>. When choosing
            <codeph>preferOxygenResources</codeph>, the libraries that are referenced in the <ph
            keyref="product"/>
          <filepath>lib</filepath> directory will have precedence over those referenced in the
            <filepath>plugin.xml</filepath> configuration file, if they have the same package names.
          When choosing <codeph>preferReferencedResources</codeph>, the libraries that are
          referenced in the <filepath>plugin.xml</filepath> configuration file will have precedence
          over those found in the <ph keyref="product"/>
          <filepath>lib</filepath> directory, if they have the same package names.</ph></li>
    </ul>
    <p>The <term>plugin</term> descriptor is an XML file that defines how the <term>plugin</term> is
      integrated in <ph keyref="product"/> and what libraries are loaded. The structure of the
        <term>plugin</term> descriptor file is fully described in a DTD grammar located in
          <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"
        />/plugins/plugin.dtd</filepath>. Here is a sample <term>plugin</term> descriptor used by
      the <i>Capitalize Lines</i> sample <term>plugin</term>: </p>
    <codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plugin SYSTEM "../plugin.dtd"&gt;
&lt;plugin
    name="Capitalize Lines"
    description="Capitalize the first character on each line"
    version="1.0.0"
    vendor="SyncRO"
    class="ro.sync.sample.plugin.caplines.CapLinesPlugin"&gt;
    &lt;runtime&gt;
        &lt;library name="lib/caplines.jar"/&gt;
    &lt;/runtime&gt;
    &lt;extension type="selectionProcessor" 
    class="ro.sync.sample.plugin.caplines.CapLinesPluginExtension" 
           keyboardShortcut="ctrl shift EQUALS"/&gt;
&lt;/plugin&gt;</codeblock>
    <p>If your <term>plugin</term> is of the <b>Selection</b>, <b>Document</b> or <b>General</b>
      types, and thus contributes an action either to the contextual menu or to the main menu of the
        <uicontrol>Text</uicontrol> editing mode, then you can assign a keyboard shortcut for it.
      You can use the <xmlatt>keyboardShortcut</xmlatt> attribute for each
        <xmlelement>extension</xmlelement> element to specify the desired shortcut.</p>
    <note type="tip">To compose string representations of the desired shortcut keys you can go to <menucascade>
        <uicontrol>Options</uicontrol>
        <uicontrol>Menu Shortcut Keys</uicontrol>
      </menucascade>, select an action, and click <uicontrol>Edit</uicontrol>. Then choose the
      desired key sequence and use the representation that appears in the resulting dialog
      box.</note>
    <section id="referencing_libraries">
      <title>Referencing Libraries</title>
      <p>To reference libraries, use either of the following elements:<ul irina="irina">
          <li><xmlelement>library name="path/libraryName" scope="global"</xmlelement> - To point to
            specific libraries. Notice that the value of <codeph>library name</codeph> includes the
            path (relative or absolute) to the library.<note>You can use the <xref
                href="editor-variables.dita#editor-variables/edVar-oxygenInstallDir"
                  ><i>${oxygenInstallDir}</i> editor variable</xref> as part of the value of the
                <xmlatt>name</xmlatt> attribute. You can also use a system variable
                (<codeph>${system(var.name)}</codeph>) or environment variable
                (<codeph>${env(VAR_NAME)}</codeph>).</note></li>
          <li><xmlelement>librariesFolder name="path/libraryFolderPath" scope="global"</xmlelement>
            - To point to multiple libraries located in the specified folder. Notice that the value
            of <codeph>libraryFolder name</codeph> includes the path (relative or absolute) to the
            library folder.</li>
        </ul></p>
      <p>Both elements support the <xmlatt>scope</xmlatt> attribute that defines the loading
        priority. It can have one of the following two values:<ul id="ul_cw1_gd3_c4" irina="irina">
          <li><b>local</b> - The library is loaded in the <term>plugin's</term> own class loader.
            This is the default behavior.</li>
          <li><b>global</b> - The library is loaded in the main application class loader as the last
            library in the list (as if it would be present in the application
              <filepath>lib</filepath> directory).</li>
        </ul></p>
    </section>
  </conbody>
</concept>
