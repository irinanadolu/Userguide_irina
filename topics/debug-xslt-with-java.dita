<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="debug-xslt-with-java">
    <title>Debugging XSLT that Call Java Extensions</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Debugging XSLT<indexterm>Debugging XSLT that call Java
          extensions</indexterm></indexterm>
        <indexterm>XSLT Debugger perspective<indexterm>Debugging XSLT that call Java
            extensions</indexterm></indexterm>
        <indexterm>Debugging XSLT that call Java extensions</indexterm>
      </keywords>
    </metadata>
  </prolog>
    <body>
        <p>It is possible to debug an XSLT that calls Java extensions. This is achieved through a
      transformation scenario where the Java extensions are specified, and the debugging can be done
      based upon the same scenario.</p>
    <p>To debug XSLT with Java extensions, follow this procedure:<ol>
        <li>Create an <xref href="xslt-transformation.dita#xslt-transformation">XSLT transformation
            scenario</xref> for your XSLT document (select <uicontrol><image
              href="../img/TransformConfig16.png"/>Configure Transformation Scenario(s)</uicontrol>
          action from the toolbar, then click <uicontrol>New</uicontrol>, and select <uicontrol>XSLT
            transformation</uicontrol>).</li>
        <li>In the <uicontrol>New scenario</uicontrol> dialog box, click the
            <uicontrol>Extensions</uicontrol> button (in the <uicontrol>XSLT</uicontrol> tab),
          specify the Java extensions (JAR libraries) that are needed, and click
            <uicontrol>OK</uicontrol>.</li>
        <li>Once you are finished configuring the transformation scenario, click
            <uicontrol>OK</uicontrol>, then select <uicontrol>Save and close</uicontrol>.</li>
        <li>Use the <uicontrol><image href="../img/DebugScenario16.png"/>Debug scenario</uicontrol>
          action on the toolbar and the debugging will be based upon the same transformation
          scenario you just configured and saved.</li>
      </ol></p>
    <note type="tip">You could achieve this during a <xref
        href="steps-in-typical-debug-process.dita#steps-in-typical-debug-process">typical debugging
        process</xref> by specifying the Java extensions using the <xref
        href="debug-control-toolbar.dita#debug-control-toolbar/debug-xslt-extensions"
            ><uicontrol><image href="../img/ConfigExtensions16.png"/>Edit extensions</uicontrol>
        button on the debugger control toolbar</xref>.</note>
    </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="validate-xslt-with-java-extensions.dita#validate-xslt-with-java-extensions"/>
    </linklist>
  </related-links>
</topic>
