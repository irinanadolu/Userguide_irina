<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_graphics_setting_image_width_and_height">
  <title>Setting Image Width and Height</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Graphics<indexterm>Image size</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The image size can be determined from the number of pixels of the image, taking the <xref
        href="ch_graphics_image_resolution.dita">image resolution</xref> into account (if
      available). There are cases where this computed size is not what you need, and you want to
      specify the size explicitly. </p>
    <p>For HTML, it is enough to use the image attributes directly in your document.</p>
    <codeblock outputclass="language-xml">&lt;img src="my_image.png" width="300" height="250" /&gt;</codeblock>
    <p>For an arbitrary XML, you can indicate the image width and height through a rule that matches
      the element (or its <codeph>:before</codeph> or <codeph>:after</codeph> pseudo-elements) and
      sets the <codeph>width</codeph> and <codeph>height</codeph> CSS properties.</p>
    <codeblock outputclass="language-css">imagedata {
    display: inline;
    content: attr(src, url);
    width: attr(width, length);
    height: attr(height, length);
}</codeblock>
    <p>Or, if you use an image as a decorator, you can specify fixed dimensions in the CSS:</p>
    <codeblock outputclass="language-css">chapter title:before {
    content: url("my_artwork.png");
    width: 300px;
}</codeblock>
    <p>
      <note>For static content as in the example above, <ph keyref="product"/> tries to use the
        width and height set on the pseudo-element, then the ones that are set on the parent
        element, but only if the static content is composed of a single image. Mixing text and
        images in the <codeph>content</codeph> property disables the width and height
        specification.</note>
    </p>
    <p>If you want to limit the width of the images to a maximum size, you can use the
        <codeph>max-width</codeph> property. The image will be scaled down to fit the maximum size
      (if it is larger).</p>
    <codeblock outputclass="language-css">imagedata {
    ...
    content: attr(src, url);
    max-width: attr(width, length); 
    ...
}</codeblock>
  </body>
</topic>