<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="debugging-java-extensions">
  <title>Debugging Java Extensions</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Debugging XSLT<indexterm>Debugging Java extensions</indexterm></indexterm>
        <indexterm>XSLT Debugger perspective<indexterm>Debugging Java
          extensions</indexterm></indexterm>
        <indexterm>Debugging XQuery<indexterm>Debugging Java extensions</indexterm></indexterm>
        <indexterm>XQuery Debugger perspective<indexterm>Debugging Java
          extensions</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>The XSLT/XQuery debugger does not step into Java classes that are configured as XSLT/XQuery
        extensions of the transformation. To step into Java classes, inspect variable values, and
        set <xref href="using-breakpoints.dita#using-breakpoints"
          ><term>breakpoints</term></xref> in Java methods, you can set up a Java debug
        configuration in an IDE (such as the Eclipse SDK) as described in the following steps:</p>
    </context>
    <steps>
      <step>
        <cmd>Create a debug configuration.</cmd>
        <substeps>
          <substep>
            <cmd>Set at least 256 MB as heap memory for the Java virtual machine (recommended 1024
              MB) by setting the <codeph>-Xmx</codeph> parameter in the debug configuration (for
              example, <q>-Xmx1024m</q>).</cmd>
          </substep>
          <substep>
            <cmd>Make sure the <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"
                />/lib/oxygen.jar</filepath> file and your Java extension classes are on the Java
              classpath.</cmd>
            <info>The Java extension classes should be the same classes that were <xref
                href="debug-control-toolbar.dita#debug-control-toolbar/debug-xslt-extensions"
                format="dita">set as an extension</xref> of the XSLT/XQuery transformation in the
              debugging <xref keyref="glossentry_perspective"
              ><term>perspective</term></xref>.</info>
          </substep>
          <substep>
            <cmd>Set the class <i>ro.sync.exml.Oxygen</i> as the main Java class of the
              configuration.</cmd>
            <info>The main Java class <i>ro.sync.exml.Oxygen</i> is located in the
                <filepath>oxygen.jar</filepath> file.</info>
          </substep>
        </substeps>
      </step>
      <step>
        <cmd>Start the debug configuration.</cmd>
        <info>Now you can set <term>breakpoints</term> and inspect Java variables as in any Java
          debugging process executed in the selected IDE (Eclipse SDK, and so on.).</info>
      </step>
    </steps>
  </taskbody>
</task>
