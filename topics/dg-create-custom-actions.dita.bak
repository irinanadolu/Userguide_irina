<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dg-create-custom-actions">
  <title>Creating and Customizing Actions for a Framework</title>
  <body>
    <p>There are several possibilities for creating new <uicontrol>Author</uicontrol> mode
        actions:<ul id="ul_zwn_mnf_jlb">
        <li>You can create new actions for a framework or edit existing ones using the
            <uicontrol>Actions</uicontrol> subtab of the <xref
            href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
              Type</uicontrol> configuration dialog box</xref>. In this case, the actions are stored
          internally in the <i>*.framework</i> file.</li>
        <li>You can export existing actions from the <xref
            href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
              Type</uicontrol> configuration dialog box</xref> into individual XML files or use a
          built-in template to create a new XML file that defines a single action. In this case, the
          actions are stored externally as separate XML files. The benefits of using this approach
          are explained in the <xref href="#dg-create-custom-actions/section_2"
            format="dita"/> section below.</li>
      </ul></p>
    <section id="section_q5l_h4f_jlb">
      <title>Creating or Editing Actions Using the Document Type Configuration Dialog Box</title>
      <p>To add or configure <uicontrol>Author</uicontrol> mode actions for a <xref
          keyref="glossentry_framework"><term>framework</term></xref> (document type) using the
          <xref href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
            Type</uicontrol> configuration dialog box</xref>, follow this procedure:<ol
          id="procedure-dg-author-settings">
          <li><ph conkeyref="reusables-preferences-pages/Open-the-preferences-page"/>, go to
              <uicontrol>Document Types Association</uicontrol>, and select the
              <term>framework</term>.</li>
          <li>Select your framework and click the <uicontrol>Edit</uicontrol> button<ph
              product="author editor authorEclipse editorEclipse"> (or you can use the
                <uicontrol>Duplicate</uicontrol> or <uicontrol>Extend</uicontrol> button to <xref
                href="framework-customization-extending.dita">create an extension of the
                framework</xref>)</ph>.</li>
          <li>In the resulting <xref href="the-document-type-dialog.dita#the-document-type-dialog"
                ><uicontrol>Document Type</uicontrol> configuration dialog box</xref>, go to the
              <uicontrol>Author</uicontrol> tab, then the <uicontrol>Actions</uicontrol> subtab. </li>
          <li>To create a new action, click the <uicontrol><image href="../img/Add16.png"
                id="image_p55_2t4_5r"/>New</uicontrol> button. To edit an existing action, select
            the action and click the <uicontrol><image href="../img/Wrench16.png"
                id="image_ltc_3ns_tr"/>Edit</uicontrol> button.<p><b>Step Result:</b> In either
              case, this opens the <xref href="the-action-dialog.dita#the-action-dialog"
                  ><uicontrol>Action</uicontrol> configuration dialog box</xref> where you can
              configure numerous aspects of the action.</p></li>
          <li>Once you are finished, click <uicontrol>OK</uicontrol> several times to exit the
            configuration dialog box.</li>
        </ol></p>
      <p><b>Result:</b> Your changes are stored in the <i>*.framework</i> file for your particular
        framework.</p>
    </section>
    <section id="section_2">
      <title>Creating or Editing Actions Using an Individual XML File for Each Action</title>
      <p>It is possible to work with <uicontrol>Author</uicontrol> mode actions outside the <xref
          href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
            Type</uicontrol> configuration dialog box</xref> and store them externally from the
          <i>*.framework</i> file. You can either export existing actions or use a template to
        create a new action from scratch. The benefits of using this approach are:<ul
          id="ul_tbb_fsf_jlb">
          <li>You can share, copy, or reuse each individual action across multiple projects or
            frameworks.</li>
          <li>It is easier to develop and test action configurations. After configuring the XML file
            that defines an action, you can test its functionality by opening a document from your
            particular framework and invoking the action to see if it works as expected. If you did
            not get the desired result, you can simply repeat the process until you are happy with
            the result without having to navigate through the framework configuration dialog
            box.</li>
        </ul></p>
      <p id="exporting-actions"><u><b>Exporting Actions</b></u></p>
      <p>To export existing <uicontrol>Author</uicontrol> mode actions into individual XML files,
        follow this procedure:</p>
      <p>
        <ol id="procedure-dg-author-settings2">
          <li><ph conkeyref="reusables-preferences-pages/Open-the-preferences-page"/>, go to
              <uicontrol>Document Types Association</uicontrol>, and select the
              <term>framework</term>.</li>
          <li>Select your framework and click the <uicontrol>Edit</uicontrol> button<ph
              product="author editor authorEclipse editorEclipse"> (or you can use the
                <uicontrol>Duplicate</uicontrol> or <uicontrol>Extend</uicontrol> button to <xref
                href="framework-customization-extending.dita">create an extension of the
                framework</xref>)</ph>.</li>
          <li>In the resulting <xref href="the-document-type-dialog.dita#the-document-type-dialog"
                ><uicontrol>Document Type</uicontrol> configuration dialog box</xref>, go to the
              <uicontrol>Author</uicontrol> tab, then the <uicontrol>Actions</uicontrol>
            subtab.</li>
          <li><b>[Important]</b> Make sure the <xref
              href="the-document-type-dialog.dita#the-document-type-dialog/storage-definition"
                ><uicontrol>Storage</uicontrol> option</xref> in the top part of the dialog box is
            set to <uicontrol>External</uicontrol> and the external location must be a subdirectory
            of your current framework directory (see the <xref
              href="#dg-create-custom-actions/section_ht2_3jg_jlb" format="dita">Notes About the
              Storage Path section</xref>).</li>
          <li>Select the action (or multiple actions) you want to export, right-click, and use the
                <uicontrol><image href="../img/Export16.png" id="image_rxx_3lg_jlb"
              />Export</uicontrol> action (this action is also located at the bottom of the table of
                actions).<p><b>Step Result:</b> If you choose to export a single action, a resulting
              dialog box will allow you to select the destination path for the new XML file that
              contains the configuration details of the action. If you export multiple actions, they
              will automatically be saved as individual XML files inside a newly created folder (it
              will have <b><i>_externalAuthorActions</i></b> at the end of the folder name) inside
              your current framework directory.</p></li>
          <li><b>[Important]</b> Click <uicontrol>OK</uicontrol> several times to confirm your
            changes and exit the <uicontrol>Preferences</uicontrol> dialog box. The files will not
            be created until you exit this dialog box.<p><b>Step Result:</b> Each exported action is
              extracted from the framework configuration file and exported as an individual XML
              file.</p></li>
          <li>To configure and test a particular action, you can open its corresponding XML file in
              <ph keyref="product"/>, make changes, save the file, then open a document from your
            framework, test the action and repeat until you get the desired result.<note
              conkeyref="reusables-author-mode-customization/note-editing-action-files"/></li>
        </ol>
      </p>
      <p><u><b>Creating New Actions</b></u></p>
      <p>To create a new <uicontrol>Author</uicontrol> mode action outside the framework
        configuration dialog box, follow these steps:<ol id="ol_vrl_p5f_jlb">
          <li>Open the <xref href="new-dialog-sa.dita#new-dialog-sa" product="author editor"
                ><uicontrol>New</uicontrol> document wizard</xref><xref
              href="creating-from-templates.dita#creating-from-templates"
              product="authorEclipse editorEclipse"><uicontrol>New from templates</uicontrol>
              wizard</xref>, search for a template called <uicontrol>Author Action</uicontrol>, and
            choose a storage path and file name. Remember that ultimately, it must be saved in a
            subdirectory of your particular framework directory (see the <xref
              href="#dg-create-custom-actions/section_ht2_3jg_jlb" format="dita">Notes About the
              Storage Path section</xref>). Complete the creation process.<p><b>Step Result:</b> The
              resulting XML file contains some hints and it is an example of an action configuration
              that will insert a new paragraph.</p></li>
          <li>
            <p>Configure the action as needed and save your changes.</p>
            <note>You can use XInclude to reuse different fragments, like XPath expressions or
              configured operations between actions.<p><b>Example</b>: Reusing an XPath
                expression:</p><codeblock outputclass="language-xml">&lt;a:operations>
    &lt;a:operation id="InsertFragmentOperation">
      &lt;a:xpathCondition>
        &lt;xi:include href="expression.txt" 
            xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"/>
        &lt;/a:xpathCondition>
      &lt;a:arguments>
        &lt;a:argument name="insertLocation">
            &lt;xi:include href="expression.txt" 
                xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"/>
            &lt;/a:argument>
      &lt;/a:arguments>
    &lt;/a:operation>
  &lt;/a:operations></codeblock><p>Where the content of the
                  <filepath>expression.txt</filepath> file is
                  <codeph>self::para</codeph></p><p><b>Example</b>: Reusing an entire
                operation:<codeblock outputclass="language-xml">  &lt;a:operations xmlns:a="http://www.oxygenxml.com/ns/author/external-action">
      &lt;xi:include href="operation.xml"
          xpointer="element(/1/1)" xmlns:xi="http://www.w3.org/2001/XInclude" />
  &lt;/a:operations></codeblock></p><p>Where the content of
                  <filepath>operation.xml</filepath>
                is:<codeblock outputclass="language-xml">&lt;a:operations xmlns:a="http://www.oxygenxml.com/ns/author/external-action">
    &lt;a:operation id="ToggleSurroundWithElementOperation">
        &lt;a:xpathCondition>ancestor-or-self::p&lt;/a:xpathCondition>
        &lt;a:arguments>
            &lt;a:argument name="element">&lt;i/>&lt;/a:argument>
        &lt;/a:arguments>
    &lt;/a:operation>
&lt;/a:operations></codeblock></p></note>
            <p><b>Step Result:</b> At this point, the action has been created but it needs to be
              added to the UI (in a toolbar or menu).</p>
          </li>
          <li>Add the new action to a UI component. For example, to add it in a toolbar, open the
              <xref href="the-document-type-dialog.dita#the-document-type-dialog"
                ><uicontrol>Document Type</uicontrol> configuration dialog box</xref>, go to the
              <uicontrol>Author</uicontrol> tab, then the <xref href="the-toolbar-tab.dita"
                ><uicontrol>Toolbar</uicontrol> subtab</xref>, and add the action. </li>
          <li>To test the action, you can open a document from your framework and test the action.
            If you don't get the desired result, open the action file, make changes, then test them
            again. Repeat until you get the desired result.<note
              conkeyref="reusables-author-mode-customization/note-editing-action-files"/></li>
        </ol></p>
    </section>
    <section id="section_ht2_3jg_jlb">
      <title>Notes About the Storage Path</title>
      <p>As mentioned above, it is imperative that the action configuration files be stored in a
        specific subdirectory of your particular framework directory. </p>
      <p>There are two possible naming conventions for this subdirectory:</p>
      <p>
        <ul id="ul_d4d_pcg_jlb">
          <li><b><i>{framework_directory}</i>/externalAuthorActions</b> - If there are multiple
            framework subdirectories inside <i>{framework_directory}</i>, using this path structure
            will make the actions available to all of them.</li>
          <li><b><i>{framework_directory}</i>/<i>{framework_file_name}</i>_externalAuthorActions</b>
            - Using this path structure will make the actions only available in the framework stored
            inside the  <filepath>{framework_file_name}.framework</filepath> file.<note>When <xref
                href="#dg-create-custom-actions/exporting-actions" format="dita">exporting actions
                from the UI</xref>, this is the directory structure that is used.</note></li>
        </ul>
      </p>
    </section>
    <section id="section_lsn_bkg_jlb">
      <title>Action Configuration Tips</title>
      <ul id="ul_mgv_fkg_jlb">
        <li>If an action is configured to insert a fragment that contains entities, you need to wrap
          it in <codeph>CDATA</codeph> markup.</li>
        <li>For a list of default operation, see <xref href="dg-default-author-operations.dita"
          />.</li>
      </ul>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="the-actions-sub-tab.dita">
        <linktext>Framework Configuration Dialog Box: Actions Subtab</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
