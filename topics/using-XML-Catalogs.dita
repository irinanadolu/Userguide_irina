<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="using-XML-Catalogs">
  <title>Working with XML Catalogs</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XML documents<indexterm>XML catalogs</indexterm></indexterm>
        <indexterm>XML Catalogs</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> uses <xref keyref="glossentry_xml-catalog"><term>XML
        Catalogs</term></xref> to resolve references for validations and transformations and they
      are especially helpful for resolving external resources when internet access is not available
      or your connection is slow.</p>
    <p><ph keyref="product"/> supports any <term>XML Catalog</term> file that conforms to one of the
      following:</p>
    <ol id="ol_rc1_nl3_mg">
      <li><xref href="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html"
          scope="external" format="html">OASIS XML Catalogs Committee Specification
        v1.1</xref>.</li>
      <li><xref href="https://www.oasis-open.org/specs/a401.htm" scope="external" format="html"
          >OASIS Technical Resolution 9401:1997</xref>, including the plain-text flavor described in
        that resolution.</li>
    </ol>
    <p>The version 1.1 of the OASIS <term>XML Catalog</term> specification introduces the
      possibility to map a system ID, public ID, or a URI to a local copy using only a suffix of the
      ID or URI used in the actual document. This is done using the catalog elements <xref
        href="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.systemsuffix"
        scope="external" format="html"><i>systemSuffix</i>
      </xref> and <xref
        href="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.urisuffix"
        scope="external" format="html"><i>uriSuffix</i></xref>.</p>
    <p>Depending on the resource type, <ph keyref="product"/> uses different catalog mappings. </p>
    <table frame="all" rowsep="1" colsep="1" id="table_cw5_1v3_mg">
      <title>Catalog Mappings</title>
      <tgroup cols="3">
        <colspec colname="c1" colnum="1" colwidth="1*"/>
        <colspec colname="c2" colnum="2" colwidth="1.79*"/>
        <colspec colname="c3" colnum="3" colwidth="9.26*"/>
        <thead>
          <row>
            <entry>Doc Type</entry>
            <entry>Referenced Resource</entry>
            <entry>Mappings</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry morerows="4">XML</entry>
            <entry>DTD</entry>
            <entry><i>system</i> or <i>public</i>
              <p>The <xref
                  href="preferences-xml-catalog.dita#preferences-xml-catalog/xml_catalog_prefer"
                  format="dita"><uicontrol>Prefer</uicontrol> option</xref> controls which one of
                the mappings should be used.</p></entry>
          </row>
          <row>
            <entry>XML Schema</entry>
            <entry morerows="3">
              <p>The following strategy is used (if one step fails to provide a resource, the next
                is applied):<ol id="ol_iy1_mw3_mg">
                  <li>Resolve the schema using <i>URI</i> catalog mappings.</li>
                  <li>Resolve the schema using <i>system</i> catalog mappings. This happens only if
                    the <xref
                      href="preferences-xml-catalog.dita#preferences-xml-catalog/xml_catalog_resolve_schema"
                      format="dita"><uicontrol>Resolve schema locations also through system
                        mappings</uicontrol> option</xref> is selected (it is by default).</li>
                  <li>Resolve the root <i>namespace</i> using <i>URI</i> catalog mappings. </li>
                </ol></p>
            </entry>
          </row>
          <row>
            <entry>Relax NG</entry>
          </row>
          <row>
            <entry>Schematron</entry>
          </row>
          <row>
            <entry>NVDL</entry>
          </row>
          <row>
            <entry>XSL</entry>
            <entry>XSL/ANY</entry>
            <entry><i>URI</i></entry>
          </row>
          <row>
            <entry>CSS</entry>
            <entry>CSS</entry>
            <entry><i>URI</i></entry>
          </row>
          <row>
            <entry>JSON</entry>
            <entry>JSON</entry>
            <entry><i>URI</i></entry>
          </row>
          <row>
            <entry>XML Schema</entry>
            <entry>XML Schema</entry>
            <entry morerows="1">
              <p>The following strategy is used (if one step fails to provide a resource, the next
                is applied):<ol id="ol_ukf_kv3_mg">
                  <li>Resolve schema reference using <i>URI</i> catalog mappings. </li>
                  <li>Resolve schema reference using <i>system</i> catalog mappings. This happens
                    only if the <xref
                      href="preferences-xml-catalog.dita#preferences-xml-catalog/xml_catalog_resolve_schema"
                      format="dita"><uicontrol>Resolve schema locations also through system
                        mappings</uicontrol> option</xref> is selected (it is by default).</li>
                  <li>Resolve schema <i>namespace</i> using <i>URI</i> catalog mappings. This
                    happens only if the <xref
                      href="preferences-xml-catalog.dita#preferences-xml-catalog/xml_catalog_process_ns"
                      format="dita"><uicontrol>Process namespaces through URI mappings for XML
                        Schema</uicontrol> option</xref> is selected (it is not by default).</li>
                </ol></p>
            </entry>
          </row>
          <row>
            <entry>Relax NG</entry>
            <entry>Relax NG</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <section id="creating_an_xml_catalog_with_a_template">
      <title>Creating an XML Catalog with a Template</title>
      <p>An <xref keyref="glossentry_xml-catalog"><term>XML Catalog</term></xref> file can be created quickly in <ph keyref="product"/> starting from the document template called <i>OASIS XML Catalog</i>. It is available when <xref href="new-dialog-sa.dita#new-dialog-sa" product="author developer editor">creating new document templates</xref><xref href="creating-from-templates.dita#creating-from-templates" product="authorEclipse developerEclipse editorEclipse">creating new document templates</xref>.</p>
    </section>
    <section id="catalog-order">
      <title>How <ph keyref="product"/> Determines which Catalog to Use</title>
      <p><ph keyref="product"/> uses <xref keyref="glossentry_xml-catalog"><term>XML
          Catalogs</term></xref> to resolve references for validations and transformations and it
        maps such references to the built-in local copies of the schemas associated with the various
          <xref keyref="glossentry_framework"><term>frameworks</term></xref> (DocBook, DITA, TEI,
        XHTML, SVG, etc.)</p>
      <p><ph keyref="product"/> includes default global catalogs and default catalogs for each of
        the built-in <term>frameworks</term>, and you can also create your own.</p>
      <p><ph keyref="product"/> looks for catalogs in the following order:<ul>
          <li>Global user-defined catalogs that are set in the <xref
              href="preferences-xml-catalog.dita#preferences-xml-catalog"><uicontrol>XML
                Catalog</uicontrol> preferences page</xref>.</li>
          <li>User-defined catalogs that are set for each <xref keyref="glossentry_framework"
                ><term>framework</term></xref> in the <xref
              href="document-type-catalogs-tab.dita#document-type-catalogs-tab"
                ><uicontrol>Catalog</uicontrol> tab</xref> of the <xref
              href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
                Type</uicontrol> configuration dialog box</xref>.</li>
          <li>Default built-in catalogs.</li>
        </ul></p>
    </section>
    <div>
      <div>
        <p><b><u>Example: Using an XML Catalog to map an Absolute XML Schema Reference to an XML
              Schema Located Relative to the XML Catalog</u></b></p>
        <p>An <term>XML Catalog</term> can be used to map an XML Schema specified with a URN in the
            <xmlatt>xsi:noNamespaceSchemaLocation</xmlatt> attribute of an XML document to a local
          copy of the schema.</p>
        <p>Considering the following XML document code snippet:<codeblock outputclass="language-xml">&lt;topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="urn:oasis:names:tc:dita:xsd:topic.xsd:1.1"&gt;</codeblock></p>
        <p>The URN can be resolved to a local schema file with an XML catalog entry like this:<codeblock outputclass="language-xml">&lt;uri name="urn:oasis:names:tc:dita:xsd:topic.xsd:1.1"
    uri="topic.xsd"/&gt;</codeblock></p>
      </div>
      <p><b><u>Example: Using an XML Catalog to map an Imported XML Schema Reference to an XML
            Schema Located Relative to the XML Catalog</u></b></p>
      <p>An <term>XML Catalog</term> can be used to map an <codeph>xs:import</codeph> or <codeph>xs:include</codeph> XML Schema reference to a local copy of the schema.</p>
      <p>Considering the following <codeph>xs:include</codeph> inside an XML Schema:<codeblock outputclass="language-xml">&lt;xs:include schemaLocation="someFolder/common.xsd"/></codeblock></p>
      <p>The reference can be resolved to a local schema file with an XML catalog entry like this:<codeblock outputclass="language-xml">&lt;uriSuffix uriSuffix="someFolder/common.xsd" uri="relative/path/to/common.xsd"/></codeblock></p>
    </div>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="preferences-xml-catalog.dita#preferences-xml-catalog"/>
    </linklist>
  </related-links>
</topic>
