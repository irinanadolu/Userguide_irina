<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:topic.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<topic id="reusables-transforming-documents">
  <title>Reusable Components in Publishing</title>
  <body>
    <p><ph id="intro-for-transformation-tabs"
        product="author developer editor authorEclipse developerEclipse editorEclipse">When you
          <xref
          href="../../topics/defining-new-transformation-scenario.dita#defining-new-transformation-scenario"
          >create a new transformation scenario</xref> or <xref
          href="../../topics/edit-scenario-dialog.dita#edit-scenario-dialog">edit an existing
          one</xref>, a configuration dialog box is displayed that allows you to customize the
        transformation with various options in several tabs.</ph></p>
    <!--Options in the Setting menu or contextual menu of the Transformation view-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="show-all-scenarios">
          <dt><uicontrol>Show all scenarios</uicontrol></dt>
          <dd>Select this option to display all the available scenarios, regardless of the document
            they are associated with.</dd>
        </dlentry>
        <dlentry id="scenarios-available-for-editor">
          <dt><uicontrol>Show only the scenarios available for the editor</uicontrol></dt>
          <dd>Select this option to only display the scenarios that <ph keyref="product"/> can apply
            for the current document type.</dd>
        </dlentry>
        <dlentry id="show-associated-scenarios">
          <dt><uicontrol>Show associated scenarios</uicontrol></dt>
          <dd>Select this option to only display the scenarios associated with the document you are
            editing.</dd>
        </dlentry>
        <dlentry id="import-scenarios-dlentry">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Import
            scenarios</uicontrol></dt>
          <dd>This option opens the <uicontrol>Import scenarios</uicontrol> dialog box that allows
            you to select the <filepath>scenarios</filepath> file that contains the scenarios you
            want to import. If one of the scenarios you import is identical to an existing scenario,
              <ph keyref="product"/> ignores it. If a conflict appears (an imported scenario has the
            same name as an existing one), you can choose between two options: <ul>
              <li>Keep or replace the existing scenario.</li>
              <li>Keep both scenarios. <note>When you keep both scenarios, <ph keyref="product"/>
                  adds <filepath>imported</filepath> to the name of the imported
                scenario.</note></li>
            </ul></dd>
        </dlentry>
        <dlentry id="export-selected-scenarios">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Export selected
              scenarios</uicontrol></dt>
          <dd>Use this option to export selected scenarios individually. <ph keyref="product"/>
            creates a <filepath>scenarios</filepath> file that contains the exported scenarios. This
            is useful if you want to share scenarios with others or export them to another
            computer.</dd>
        </dlentry>
        <dlentry id="export-scenarios-dlentry">
          <dt><uicontrol><image href="../../img/ImportScenario16.png"/>Export
            scenarios</uicontrol></dt>
          <dd>Use this option to export scenarios. <ph keyref="product"/> creates a
              <filepath>scenarios</filepath> file that contains the scenarios that you export. This
            is useful if you want to share scenarios with others or export them to another
            computer.</dd>
        </dlentry>
        <dlentry id="show-type">
          <dt><uicontrol>Show Type</uicontrol></dt>
          <dd>Use this option to display the transformation type of each scenario.</dd>
        </dlentry>
        <dlentry id="show-storage">
          <dt><uicontrol>Show Storage</uicontrol></dt>
          <dd>Use this option to display the storage location of the scenarios.</dd>
        </dlentry>
        <dlentry id="group-by-association" product="author developer editor">
          <dt><uicontrol>Group by Association</uicontrol></dt>
          <dd>Select this option to group the scenarios depending on whether or not they are
            associated with the current document.</dd>
        </dlentry>
        <dlentry id="group-by-type">
          <dt><uicontrol>Group by Type</uicontrol></dt>
          <dd>Select this option to group the scenarios by their type.</dd>
        </dlentry>
        <dlentry id="group-by-storage">
          <dt><uicontrol>Group by Storage</uicontrol></dt>
          <dd>Select this option to group the scenarios by their storage location.</dd>
        </dlentry>
        <dlentry id="ungroup-all">
          <dt><uicontrol product="author developer editor"><image href="../../img/Flat16.png"
              />Ungroup all</uicontrol><uicontrol
              product="authorEclipse developerEclipse editorEclipse">Ungroup all</uicontrol></dt>
          <dd>Select this option to ungroup all the scenarios.</dd>
        </dlentry>
        <dlentry id="reset-layout">
          <dt><uicontrol>Reset Layout</uicontrol></dt>
          <dd>Select this option to restore the default settings of the layout.</dd>
        </dlentry>
      </dl>
    </p>
    <!--Global/Project options-->
    <p id="name-storage-options" product="author developer editor">The upper part of the dialog box
      allows you to specify the <uicontrol>Name</uicontrol> of the transformation scenario and the
      following <uicontrol>Storage</uicontrol> options: <ul>
        <li id="project-options-li"><xref keyref="glossentry_project-options"><uicontrol>Project
              Options</uicontrol></xref> - The scenario is stored in the project file and can be
          shared with other users. For example, if your project is saved on a source
          versioning/sharing system (CVS, SVN, Source Safe, etc.) or a shared folder, your team can
          use the scenarios that you store in the project file.</li>
        <li id="global-options-li"><xref keyref="glossentry_global-options"><uicontrol>Global
              Options</uicontrol></xref> - The scenario is saved in the global options that are
          stored in the user home directory and is not accessible to other users.</li>
      </ul>
    </p>
    <!--The Output tab-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl id="output-tab-dl">
        <dlentry id="prompt-for-file">
          <dt><uicontrol>Prompt for file</uicontrol></dt>
          <dd>At the end of the transformation, a file browser dialog box is displayed for
            specifying the path and name of the file that stores the transformation result.</dd>
        </dlentry>
        <dlentry id="output-tab-save-as">
          <dt><uicontrol>Save As</uicontrol></dt>
          <dd>The path of the file where the result of the transformation is stored. <ph
              conkeyref="reusables-user-guide/specify-path-without-drop-down"/></dd>
        </dlentry>
        <dlentry id="open-in-browser">
          <dt><uicontrol>Open in Browser/System Application</uicontrol></dt>
          <dd>If selected, <ph keyref="product"/> automatically opens the result of the
            transformation in a system application associated with the file type of the result (for
            example, in Windows <i>PDF</i> files are often opened in <i>Acrobat Reader</i>).
              <note>To set the web browser that is used for displaying HTML/XHTML pages, <ph
                product="author developer editor">go to <menucascade>
                  <uicontrol>Options</uicontrol>
                  <uicontrol>Preferences</uicontrol>
                  <uicontrol>Global</uicontrol>
                </menucascade>, and set it in the <uicontrol>Default Internet browser</uicontrol>
                field</ph><ph product="authorEclipse developerEclipse editorEclipse">go to <menucascade>
                  <uicontrol>Window</uicontrol>
                  <uicontrol>Preferences</uicontrol>
                  <uicontrol>General</uicontrol>
                  <uicontrol>Web Browser</uicontrol>
                </menucascade> and specify it there</ph>. <p>
                <ul>
                  <li><uicontrol>Output file</uicontrol> - When <uicontrol>Open in Browser/System
                      Application</uicontrol> is selected, you can use this button to automatically
                    open the default output file at the end of the transformation.</li>
                  <li><uicontrol>Other location</uicontrol> - When <uicontrol>Open in Browser/System
                      Application</uicontrol> is selected, you can use this option to open the file
                    specified in this field at the end of the transformation. <ph
                      id="specify-path-without-drop-down"
                      product="author developer editor authorEclipse developerEclipse editorEclipse"
                      >You can specify the path by using the text field, the <xref
                        href="../../topics/editor-variables.dita#editor-variables"><uicontrol><image
                            href="../../img/InsertEditorVariables16.png"/>Insert Editor
                          Variables</uicontrol></xref> button, or the <uicontrol><image
                          href="../../img/Open16.png"/>Browse</uicontrol> button.</ph>
                  </li>
                </ul>
              </p></note></dd>
        </dlentry>
        <dlentry id="output-tab-open-in-editor">
          <dt><uicontrol>Open in editor</uicontrol></dt>
          <dd>When this is option is selected, at the end of the transformation, the default output
            file is opened in a new editor panel with the appropriate built-in editor type (for
            example, if the result is an XML file it is opened in the built-in XML editor, or if it
            is an XSL-FO file it is opened with the built-in FO editor).</dd>
        </dlentry>
        <dlentry id="show-in-results-view-li">
          <dt><uicontrol>Show in results view as</uicontrol></dt>
          <dd>You can choose to view the results in one of the following:<ul>
              <li id="output-tab-show-as-xml"><uicontrol>XML</uicontrol> - If this is selected, <ph
                  keyref="product"/> displays the transformation result in an XML viewer panel at
                the bottom of the application window with <xref keyref="preferences-colors-sh"
                  >syntax highlighting</xref>.</li>
              <li product="editor author developer" id="output-tab-show-as-svg"
                    ><ph><uicontrol>SVG</uicontrol> - If this is selected, <ph keyref="product"/>
                  displays the transformation result in an <xref
                    href="../../topics/preview-result-pane.dita#preview-result-pane">integrated SVG
                    viewer in the <uicontrol>Results</uicontrol> panel</xref> at the bottom of the
                  application window and renders the result as an SVG image</ph>.</li>
              <li id="show-as-XHTML"><ph><uicontrol>XHTML</uicontrol> - This option is only
                  available if <uicontrol>Open in Browser/System Application</uicontrol> is not
                  selected. If selected, <ph keyref="product"/> displays the transformation result
                  in a built-in XHTML browser panel at the bottom of the application
                  window.</ph><note type="important"><ph>When transforming very large documents, you
                    should be aware that selecting this option may result in very long processing
                    times. This drawback is due to the built-in Java XHTML browser implementation.
                    To avoid delays for large documents, if you want to see the XHTML result of the
                    transformation, you should use an external browser by selecting the
                      <uicontrol>Open in Browser/System Application</uicontrol> option
                  instead.</ph></note></li>
              <li><uicontrol>Image URLs are relative to</uicontrol> - If <uicontrol>Show in results
                  view as XHTML</uicontrol> is selected, this option specifies the path used to
                resolve image paths contained in the transformation result. <ph
                  conkeyref="reusables-user-guide/specify-path-without-drop-down"/></li>
            </ul></dd>
        </dlentry>
      </dl>
    </p>
    <!--Edit Scenario Advanced Tab-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="additional-arguments">
          <dt><uicontrol>Additional arguments</uicontrol></dt>
          <dd>You can specify additional command-line arguments to be passed to the transformation
            (such as <codeph>-verbose</codeph>).</dd>
        </dlentry>
        <dlentry id="ant-home">
          <dt><uicontrol>Ant Home</uicontrol></dt>
          <dd>You can choose between the default or custom Ant installation to run the
            transformation. <ph product="author developer editor">The default path can be configured
              in the <xref keyref="ant-preferences">Ant preferences page</xref>.</ph></dd>
        </dlentry>
        <dlentry id="java-home">
          <dt><uicontrol>Java Home</uicontrol></dt>
          <dd>You can choose between the default or custom Java installation to run the
            transformation. The default path is the Java installation that is used by <ph
              keyref="product"/>.</dd>
        </dlentry>
        <dlentry id="dita-jvm-args-dlentry">
          <dt><uicontrol>JVM Arguments</uicontrol></dt>
          <dd>This parameter allows you to set specific parameters for the Java Virtual Machine used by Ant. When performing a large transformation, you may want to increase the memory allocated to the Java Virtual Machine. This will help avoid <i>Out of Memory</i> error messages (<uicontrol>OutOfMemoryError</uicontrol>). For example, if it is set to <b>-Xmx2g</b>, the transformation process is allowed to use a maximum 2 gigabytes of memory. If you do not specify an <b>-Xmx</b> value in this field, by default the application will use a maximum of 512 megabytes when used with the 32-bit Java Virtual Machine and one gigabyte with the 64-bit Java Virtual Machine.</dd>
        </dlentry>
        <dlentry id="libraries">
          <dt><uicontrol>Libraries</uicontrol></dt>
          <dd>By default, <ph keyref="product"/> adds libraries (as high priority) that are not
            transformation-dependent and also patches for certain DITA Open Toolkit bugs. You can
            use this button to specify additional libraries (<xref keyref="glossentry_jar"
                ><term>JAR</term></xref> files or additional class paths) to be used by the
              transformer.<note type="tip">You can specify the path to the additional libraries
              using wildcards (for example, <codeph>${oxygenHome}/lib/*.jar</codeph>).</note></dd>
        </dlentry>
      </dl>
    </p>
    <!--Ant note-->
    <note type="tip" product="author developer editor authorEclipse developerEclipse editorEclipse"
      id="ant-libraries-note">Certain Ant tasks require additional JAR libraries (for example, Ant
        <i>mail</i> tasks). The additional libraries can be added by editing the Ant transformation
      scenario, and in the <xref href="../../topics/ant-transformation-options-tab.dita"
          ><uicontrol>Output</uicontrol> tab, click the <uicontrol>Libraries</uicontrol>
        button</xref> in the bottom right corner. This opens a dialog box where you can add JAR
      libraries. For a list of library dependencies, see <xref
        href="https://ant.apache.org/manual/install.html#librarydependencies" format="html"
        scope="external"/>.</note>
    <!--Saxon-CE limitation note-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <note id="saxon-ce-execution-limitation">Saxon-CE, being JavaScript-based, was designed to run
        inside a web browser. This means that you will use <ph keyref="product"/> only for
        developing the Saxon-CE stylesheet, leaving the execution part to a web browser. See more
        details about <xref href="http://www.saxonica.com/ce/index.xml" scope="external"
          format="html">executing such a stylesheet on Saxonica's website</xref>.</note>
    </p>
    <!--XML and XSLT transformation note-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <note id="note-001">If a scenario is already associated with the edited document, selecting
            <uicontrol><image href="../../img/ApplyStyleSheet16.png"/>Apply Transformation
          Scenario(s)</uicontrol> runs the associated scenario automatically. You can check to see
        if transformation scenarios are associated with the edited document by hovering your cursor
        over the <uicontrol><image href="../../img/ApplyStyleSheet16.png"/>Apply Transformation
          Scenario</uicontrol> button. </note>
    </p>
    <!--The XSLT/XQuery Tab-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="xml-url">
          <dt><uicontrol>XML URL</uicontrol></dt>
          <dd>Specifies the source XML file. <ph conkeyref="reusables-user-guide/specify-path-ph"
              /><ph product="author developer editor"> You can also use the <uicontrol><image
                  href="../../img/Edit16.gif"/>Open in editor</uicontrol> button to open the
              specified file in the editor panel.</ph> This URL is resolved through the catalog
            resolver. If the catalog does not have a mapping for the URL, then the file is used
            directly from its remote location.</dd>
        </dlentry>
      </dl>
    </p>
    <!--Note-->
    <p><ph id="ph-note1-xml-url"
        product="author developer editor authorEclipse developerEclipse editorEclipse">If the
        transformer engine is Saxon 9.x and a custom URI resolver is configured in the <xref
          href="../../topics/preferences-advanced-xslt-saxon8.dita#preferences-advanced-xslt-saxon8"
          >advanced Saxon preferences page</xref>, the XML input of the transformation is passed to
        that URI resolver.</ph></p>
    <p>
      <dl product="author developer editor authorEclipse developerEclipse editorEclipse">
        <dlentry id="transformer">
          <dt><uicontrol>Transformer</uicontrol></dt>
          <dd>This drop-down menu presents all the transformation engines available to <ph
              keyref="product"/> for performing a transformation. These include the built-in engines
            and <xref href="../../topics/preferences-custom-engines.dita">the external engines
              defined in the Custom Engines preferences page</xref>. The engine you choose is used
            as the default transformation engine. Also, if an XSLT or XQuery document does not have
            an associated validation scenario, this transformation engine is used in the validation
            process (if it provides validation support).</dd>
        </dlentry>
      </dl>
    </p>
    <!--FO Processor Tab-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="perform-fo-processing">
          <dt><uicontrol>Perform FO Processing</uicontrol></dt>
          <dd>Specifies whether or not an FO processor is applied (either the built-in Apache FOP
            engine or an external engine defined in <uicontrol>Preferences</uicontrol>) during the
            transformation.</dd>
        </dlentry>
        <dlentry id="method">
          <dt><uicontrol>Method</uicontrol></dt>
          <dd>The output format of the FO processing. The available options depend on the selected
            processor type.</dd>
        </dlentry>
        <dlentry id="processor">
          <dt><uicontrol>Processor</uicontrol></dt>
          <dd>Specifies the FO processor to be used for the transformation. It can be the built-in
            Apache FOP processor or an <xref href="../../topics/preferences-fo-processors.dita"
              >external processor</xref>.</dd>
        </dlentry>
      </dl>
    </p>
    <!--Actions for managing parameters-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="new-dlentry">
          <dt><uicontrol>New</uicontrol></dt>
          <dd>Opens the <uicontrol>Add Parameter</uicontrol> dialog box that allows you to add a new
            parameter to the list. You can specify the <uicontrol>Value</uicontrol> of the parameter
            by using the <xref href="../../topics/editor-variables.dita#editor-variables"
                  ><uicontrol><image href="../../img/InsertEditorVariables16.png"/>Insert Editor
                Variables</uicontrol></xref> button or the <uicontrol><image
                href="../../img/Open16.png"/>Browse</uicontrol> button. <ph
              product="author developer editor"> You can also use the <uicontrol><image
                  href="../../img/Edit16.gif"/>Open in editor</uicontrol> button to open the
              specified file in the editor panel.</ph></dd>
        </dlentry>
        <dlentry id="edit-dlentry">
          <dt><uicontrol>Edit</uicontrol></dt>
          <dd>Opens the <uicontrol>Edit Parameter</uicontrol> dialog box that allows you to change
            the value of the selected parameter or its description.</dd>
        </dlentry>
        <dlentry id="delete-dlentry">
          <dt><uicontrol>Delete</uicontrol></dt>
          <dd>Removes the selected parameter from the list. It is available only for new parameters
            that have been added to the list.</dd>
        </dlentry>
      </dl>
    </p>
    <!--WebHelp documentation systems-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse webhelp"><ph
        id="toc-highlight">You can enhance the appearance of items in the <i>Table of Contents</i>.
        See the <xref href="../../topics/customize_webhelp.dita#customize_webhelp">Customizing
          WebHelp Classic Output chapter</xref> for more details.</ph></p>
    <!--Comments Section-->
    <p id="comments-1-p">To add a new comment, click the <uicontrol>Add New Comment</uicontrol>
      button, or click <uicontrol>Reply</uicontrol> to add a comment to an existing thread. You can
      click on the <uicontrol>Log in</uicontrol> button on the right side of this bar to be
      authenticated as a user and your user name will be included in any comments that you add. If
      you do not have a user name, you can click on the <uicontrol>Sign Up</uicontrol> button to
      create a new user.</p>
    <p id="comments-2-p">After you log in, your name and user name are displayed in the
        <uicontrol>Comments</uicontrol> bar, along with the <uicontrol>Log off</uicontrol> and
        <uicontrol>Edit</uicontrol> buttons. Click the <uicontrol>Edit</uicontrol> button to open
      the <uicontrol>User Profile</uicontrol> dialog box where you can customize the following
        options:<ul id="ul_ik1_cbf_dr">
        <li><uicontrol>Your Name</uicontrol> - You can use this field to edit the initial name that
          you used to create your user profile.</li>
        <li><uicontrol>Your email address</uicontrol> - You can use this field to edit the initial
          email address that you used to create your profile.</li>
        <li>You can choose to receive an email in the following situations:<ul id="ul_qs2_4dk_vs">
            <li>When a comment is left on a page that you commented on.</li>
            <li>When a comment is left on any topic in the WebHelp Classic system.</li>
            <li>When a reply is left to one of my comments.</li>
          </ul></li>
        <li><uicontrol>New Password</uicontrol> - Allows you to enter a new password for your user
            account.<note>The <uicontrol>Current Password</uicontrol> field from the top of the
              <uicontrol>User Profile</uicontrol> is mandatory if you want to save the changes you
            make. </note></li>
      </ul></p>
    <!--Search feature section-->
    <section id="search_feature">
      <title>WebHelp Search Engine</title>
      <p id="search_tab_webhelp_responsive_intro">When you enter search terms in the
          <uicontrol>Search</uicontrol> field, the results are displayed in a results page. When you
        click on a result, the topic is opened in the main pane and the search results are
        highlighted. If you want to remove the colored highlights, click the <uicontrol><image
            href="../../img/ShowHighlight16.png"/>Toggle Highlights</uicontrol> button at the
        top-right side of the page. The <uicontrol>Search</uicontrol> field also includes an
          <term>autocomplete</term> feature.</p>
      <p id="result-p">Each result includes the topic title that can be clicked to open that page.
        Under the title, a breadcrumb is displayed that shows the path of the topic and you can
        click any of the topics in the breadcrumb to open that particular page.</p>
      <p id="search_tab_webhelp_classic_intro">When you enter search terms in the
          <uicontrol>Search</uicontrol> field at the top of the help system, the results are
        displayed in the <uicontrol>Search Results</uicontrol> tab in the left section. When you
        click on a result in the <uicontrol>Search Results</uicontrol> tab, that result is displayed
        in the main pane with the search terms highlighted. If you press
            <uicontrol><shortcut>Enter</shortcut></uicontrol> with the <uicontrol>Search</uicontrol>
        field empty, the highlights are removed.</p>
    </section>
    <section id="autocomplete-suggestion-section">
      <title>Autocomplete Suggestions in the Search Text Field</title>
      <p id="autocomplete-suggestions-p">When you are typing in the search text field, proposals are
        presented to help you to compute the search query. The information proposed when you are
        typing is collected from:<ul id="ul_zmq_32s_2z">
          <li>The search queries from the history of the previous searches.</li>
          <li>The titles collected from your documentation.</li>
          <li>Documentation index terms and keywords. For example, in a DITA topic, the keywords and
            index terms are specified in the topic prolog section like
            this:<codeblock outputclass="language-xml">&lt;prolog>
  &lt;metadata>
	&lt;keywords>&lt;indexterm>databases&lt;/indexterm>&lt;/keywords>
	&lt;keyword>installing&lt;/keyword>
	&lt;keyword>uninstalling&lt;/keyword>
    &lt;keyword>prerequisites&lt;/keyword> 
  &lt;/metadata>
&lt;/prolog></codeblock></li>
        </ul></p>
    </section>
    <section id="section_rrm_22s_2z">
      <title>Search Feature</title>
      <p id="webhelp_search_feature">The <uicontrol>Search</uicontrol> feature is also enhanced with
        a rating mechanism that computes scores for every result that matches the search criteria.
        These scores are then translated into a 5-star rating scheme and the stars are displayed to
        the right of each result. The search results are sorted depending on the following:<ul
          id="ul_ely_wvx_cr">
          <li>Search entries that satisfy the phrase search criterion are presented first.</li>
          <li>The number of keywords found in a single page (the higher the number, the
            better).</li>
          <li>The context (for example, a word found in a title, scores better than a word found in
            unformatted text). The search ranking order, sorted by relevance is as follows:<ul
              id="ul_swf_qzg_dr">
              <li>The search term is included in a meta keyword.</li>
              <li>The search term is in the title of the page.</li>
              <li>The search term is in bold text in a paragraph.</li>
              <li>The search term is in normal text in a paragraph.</li>
            </ul></li>
        </ul></p>
      <p id="excluded-terms-p">To improve performance, the <uicontrol>Search</uicontrol> feature
        excludes certain <term>stop words</term>. For example, the English version of the <term>stop
          words</term> includes: <i>a, an, and, are, as, at, be, but, by, for, if, in, into, is, it,
          no, not, of, on, or, such, that, the, their, then, there, these, they, this, to, was,
          will, with</i>.</p>
      <p id="missing-words-p">If you enter multiple search terms (other than <term>stop
        words</term>), for any result that the search engine found at least one term but not one or
        more of the other terms, the <uicontrol>Missing</uicontrol> terms will be listed below each
        result. </p>
      <p>
        <fig id="fig_srm_22s_2z">
          <title>WebHelp Classic Search Results</title>
          <image href="../../img/WebHelp-search-stemming.png" id="search-webhelp-classic-figure"/>
        </fig>
      </p>
      <p id="whr-search-results-fig">
        <fig>
          <title>WebHelp Responsive Search Results Page</title>
          <image href="../../img/wh_resp_search_page.png"/>
        </fig>
      </p>
      <p id="search_rules_webhelp">Rules that are applied during a search include:<ul
          id="ul_zmy_wvx_cr">
          <li>You can use quotes to perform an exact search for multiple word phrases (for example,
              <i>"grow flowers"</i> will only return results if both words are found consecutively
            and exactly as they are typed in the search field). This type of search is known as a
              <term>phrase search</term>.</li>
          <li><term>Boolean Search</term> is supported using the following operators: <i>and</i>,
              <i>or</i>, <i>not</i>. When there are two adjacent search terms without an operator,
              <i>or</i> is used as the default search operator (for example, <i>grow flowers</i> is
            the same as <i>grow or flowers</i>).</li>
          <li>The space character separates keywords (an expression such as <i>grow flowers</i>
            counts as two separate keywords.</li>
          <li>Words composed by merging two or more words with colon (":"), minus ("-"), underline
            ("_"), or dot (".") characters count as a single word.</li>
          <li>Your search terms should contain two or more characters (note that stop words will be
            ignored). This rule does not apply to CJK (Chinese, Japanese, Korean) languages.</li>
          <li>When searching for multi-word phrases in CJK (Chinese, Japanese, Korean) languages
            that often have multiple words appear in strings without a space separator, you need to
            add a space to separate the words. Otherwise, WebHelp will not find results. For
            example, Chinese uses a specialized character for space separators, but the current
            WebHelp implementation cannot detect such specialized characters, so to search for
              <b>开始之前</b> (it translates as "before you begin" or "before start"), you have to enter
              <b>开始 之前</b> (notice the space between the second and third symbols) in the search
            field.</li>
        </ul></p>
      <p id="webhelp_scoring"
        product="author developer editor authorEclipse developerEclipse editorEclipse webhelp">HTML
        tag elements are also assigned a scoring value and these values are evaluated for the search
        results. For information about editing these values, see <xref
          href="../../topics/scoring-properties-search-results-classic.dita#scoring-properties-search-results-classic"
        />.</p>
      <p id="webhelp_compatible_browsers">This output format is compatible with the most recent
        versions of the following common browsers:<ul id="ul_rbs_yvx_cr">
          <li>Edge</li>
          <li>Internet Explorer (IE 11 or newer)</li>
          <li>Chrome </li>
          <li>Firefox</li>
          <li>Safari</li>
          <li>Opera</li>
        </ul></p>
      <note type="important" id="chrome_issues">Due to some security restrictions in certain
        browsers (Google Chrome and Internet Explorer), WebHelp Classic pages loaded from the local
        system (through URLs of the <filepath>file:///...</filepath> format) may not work properly.
        It is recommended that you load WebHelp Classic pages in Google Chrome or Internet Explorer
        only from a web server (with a URL such as
          <filepath>http://your.server.com/webhelp/index.html</filepath> or
          <filepath>http://localhost/web_pages/index.html</filepath>).</note>
    </section>
    <!--WebHelp reusables-->
    <note id="context-id-note" type="tip">You can use an <term>anchor</term> in the
        <codeph>contextId</codeph> parameter to jump to a specific section in a document. For
      example, <codeph>contextId=topicID#anchor</codeph>.</note>
    <ul>
      <li id="contextid-classic"
        product="author developer editor authorEclipse developerEclipse editorEclipse webhelp"
          ><b>contextId</b> - The WebHelp JavaScript engine will look for this value in the
          <filepath>context-help-map.xml</filepath> mapping file and load the corresponding help
          page.<note>You can use an <xref keyref="glossentry_anchor"><term>anchor</term></xref> in
          the <codeph>contextId</codeph> parameter to jump to a specific section in a document. For
          example, <codeph>contextId=topicID#anchor</codeph>.</note></li>
      <li id="contextid-resp"
        product="author developer editor authorEclipse developerEclipse editorEclipse webhelp-responsive"
          ><b>contextId</b> - The WebHelp JavaScript engine will look for this value in the
          <filepath>context-help-map.xml</filepath> mapping file and load the corresponding help
        page. For more information, see the <xref
          href="../../topics/whr-context-sensitive.dita#whr-context-sensitive">Context-Sensitive
          WebHelp System topic</xref>.<note>You can use an <xref keyref="glossentry_anchor"
              ><term>anchor</term></xref> in the <codeph>contextId</codeph> parameter to jump to a
          specific section in a document. For example,
          <codeph>contextId=topicID#anchor</codeph>.</note></li>
      <li id="appname-classic"
        product="author developer editor authorEclipse developerEclipse editorEclipse webhelp"
          ><b>appname</b> - You can use this parameter in conjunction with
          <codeph>contextId</codeph> to search for this value in the corresponding <i>appname</i>
        attribute value in the mapping
        file.<codeblock outputclass="language-ini">http://localhost/webhelp/index.html?contextId=topicID&amp;appname=myApplication</codeblock></li>
      <li id="appname-resp"
        product="author developer editor authorEclipse developerEclipse editorEclipse webhelp-responsive"
          ><b>appname</b> - You can use this parameter in conjunction with
          <codeph>contextId</codeph> to search for this value in the corresponding <i>appname</i>
        attribute value in the mapping
        file.<codeblock outputclass="language-ini">http://localhost/webhelp/index.html?contextId=topicID&amp;appname=myApplication</codeblock></li>
      <li id="searchquery"><b>searchQuery</b> - You can use this parameter to perform a search
        operation when WebHelp is loaded. For example, if you want to open WebHelp showing all
        search results for <i>growing flowers</i>, the URL should look like this:
          <filepath>http://localhost/webhelp/index.html?searchQuery=growing%20flowers</filepath>.</li>
    </ul>
    <!--Advanced Saxon Transformation Options-->
    <p product="author developer editor authorEclipse developerEclipse editorEclipse">
      <dl>
        <dlentry id="xslt-use-config-file">
          <dt><uicontrol>Use a configuration file ("-config")</uicontrol></dt>
          <dd>Select this option if you want to use a Saxon <ph keyref="saxon9FullVersion"/>
            configuration file that will be executed for the XSLT transformation and validation
            processes. You can specify the path to the configuration file by entering it in the
              <uicontrol>URL</uicontrol> field, or by using the <uicontrol><image
                href="../../img/InsertEditorVariables16.png" id="image_pdh_bwg_gs"/>Insert Editor
              Variables</uicontrol> button, or using the browsing actions in the <uicontrol><image
                href="../../img/BrowseDrop.png" product="developer editor"/><image
                href="../../img/BrowseDropEC.png" product="developerEclipse editorEclipse"
              />Browse</uicontrol> drop-down list.</dd>
        </dlentry>
        <dlentry product="developer editor developerEclipse editorEclipse" id="xslt-debugger-trace">
          <dt><uicontrol>Debugger trace into XPath expressions (applies to debugging
              sessions)</uicontrol></dt>
          <dd>Instructs the <xref href="../../topics/steps-in-typical-debug-process.dita"
              format="dita">XSLT Debugger</xref> to <i>step into</i> XPath expressions.</dd>
        </dlentry>
        <dlentry id="xslt-line-numbering">
          <dt><uicontrol>Line numbering ("-l")</uicontrol></dt>
          <dd>Line numbers where errors occur are included in the output messages.</dd>
        </dlentry>
        <dlentry id="xslt-expand-attributes">
          <dt><uicontrol>Expand attributes defaults ("-expand")</uicontrol></dt>
          <dd>Specifies whether or not the attributes defined in the associated DTD or XML Schema
            are expanded in the output of the transformation you are executing.</dd>
        </dlentry>
        <dlentry id="xslt-dtd-validation">
          <dt><uicontrol>DTD validation of the source ("-dtd")</uicontrol></dt>
          <dd>Specifies whether or not the source document will be validated against their
            associated DTD. You can choose from the following:<ul>
              <li>
                <uicontrol>On</uicontrol> - Requests DTD validation of the source file and of any
                files read using the <codeph>document()</codeph> function.</li>
              <li>
                <uicontrol>Off</uicontrol> - (default setting) Suppresses DTD validation.</li>
              <li>
                <uicontrol>Recover</uicontrol> - Performs DTD validation but treats the errors as
                  non-fatal.<note>Any external DTD is likely to be read even if not used for
                  validation, since DTDs can contain definitions of entities.</note></li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-recoverable-errors">
          <dt><uicontrol>Recoverable errors ("-warnings")</uicontrol></dt>
          <dd>Specifies how dynamic errors are handled. The following options can be selected:<ul>
              <li><uicontrol>Recover silently ("silent")</uicontrol> - Continues processing without
                reporting the error.</li>
              <li><uicontrol>Recover with warnings ("recover")</uicontrol> - Issues a warning but
                continues processing.</li>
              <li><uicontrol>Signal the error and do not attempt recovery ("fatal")</uicontrol> -
                Issues an error and stops processing.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-strip-whitespaces">
          <dt><uicontrol>Strip whitespaces ("-strip")</uicontrol></dt>
          <dd>Specifies how the <i>strip whitespaces</i> operation is handled. You can choose one of
            the following values:<ul>
              <li><uicontrol>All ("all")</uicontrol> - Strips <i>all</i> whitespace text nodes from
                source documents before any further processing, regardless of any
                  <xmlatt>xml:space</xmlatt> attributes in the source document.</li>
              <li><uicontrol>Ignore ("ignorable")</uicontrol> - Strips all <i>ignorable</i>
                whitespace text nodes from source documents before any further processing,
                regardless of any <xmlatt>xml:space</xmlatt> attributes in the source document.
                Whitespace text nodes are ignorable if they appear in elements defined in the DTD or
                schema as having element-only content.</li>
              <li><uicontrol>None ("none")</uicontrol> - Strips <i>no</i> whitespace before further
                processing.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-optimization-level">
          <dt><uicontrol>Enable Optimizations ("-opt")</uicontrol></dt>
          <dd>This option is selected by default, which means that optimization is enabled. If not
            selected, the optimization is suppressed, which is helpful when reducing the compiling
            time is important, optimization conflicts with debugging, or optimization causes
            extension functions with side-effects to behave unpredictably.</dd>
        </dlentry>
        <dlentry id="xslt-register-ce-extension-functions">
          <dt><uicontrol>Register Saxon-JS extension functions and instructions</uicontrol></dt>
          <dd>Registers the Saxon-CE extension functions and instructions when compiling a
            stylesheet using the Saxon <ph keyref="saxon9FullVersion"/> processors.<note
              conkeyref="reusables-transforming-documents/saxon-ce-execution-limitation"
              product="developer editor developerEclipse editorEclipse"/></dd>
        </dlentry>
        <dlentry id="enable-assertions">
          <dt><uicontrol>Enable assertions ("-ea")</uicontrol></dt>
          <dd>In XSLT 3.0, you can use the <xmlelement>xsl:assert</xmlelement> element to make assertions in the form
            of XPath expressions, causing a dynamic error if the assertion turns out to be false. If
            this option is selected, XSLT 3.0 <xmlelement>xsl:assert</xmlelement> instructions are enabled.
            If it is not selected (default), the assertions are ignored. </dd>
        </dlentry>
        <dlentry id="xslt-allow-calls">
          <dt><uicontrol>Allow calls on extension functions ("-ext")</uicontrol></dt>
          <dd>If selected, the stylesheet is allowed to call external Java functions. This does not
            affect calls on integrated extension functions, including Saxon and EXSLT extension
            functions. This option is useful when loading an untrusted stylesheet (such as from a
            remote site using <filepath>http://[URL]</filepath>). It ensures that the stylesheet
            cannot call arbitrary Java methods and thus gain privileged access to resources on your
            machine.</dd>
        </dlentry>
        <dlentry id="xslt-val-source-file">
          <dt><uicontrol>Validation of the source file ("-val")</uicontrol></dt>
          <dd>Requests schema-based validation of the source file and of any files read using
              <codeph>document()</codeph> or similar functions. It can have the following values:<ul>
              <li><uicontrol>Schema validation ("strict")</uicontrol> - This mode requires an XML
                Schema and allows for parsing the source documents with strict schema-validation
                enabled.</li>
              <li><uicontrol>Lax schema validation ("lax")</uicontrol> - If an XML Schema is
                provided, this mode allows for parsing the source documents with schema-validation
                enabled but the validation will not fail if, for example, element declarations are
                not found.</li>
              <li><uicontrol>Disable schema validation</uicontrol> - This specifies that the source
                documents should be parsed with schema-validation disabled.</li>
            </ul></dd>
        </dlentry>
        <dlentry id="xslt-saxon-option-outval">
          <dt><uicontrol>Validation errors in the result tree treated as warnings
              ("-outval")</uicontrol></dt>
          <dd>
            <p>Normally, if validation of result documents is requested, a validation error is
              fatal. Selecting this option causes such validation failures to be treated as
              warnings.</p>
            <p>
              <dl>
                <dlentry>
                  <dt><uicontrol>Write comments for non-fatal validation errors of the result
                      document</uicontrol></dt>
                  <dd>The validation messages for non-fatal errors are written (wherever possible)
                    as a comment in the result document itself.</dd>
                </dlentry>
              </dl>
            </p>
          </dd>
        </dlentry>
      </dl>
    </p>
    <!--WebHelp customization misc-->
    <p><ph id="ph-1">Insert the HTML content in a well-formed XML file (see comments above).</ph><ul>
        <li id="li-1">
          <p><b>Well-Formedness</b> - If the file is not a <xref
              href="../../topics/checking-xml-well-formedness.dita#checking-xml-well-formedness"
              product="author developer editor authorEclipse developerEclipse editorEclipse"
                ><i>Well-formed XML</i> document</xref><ph product="webhelp webhelp-responsive ope"
                ><i>Well-formed XML</i> document</ph> (or fragments are not well-formed), the
            transformation will fail.</p>
          <p>A common use case is if you want to include several <xmlelement>script</xmlelement> or
              <xmlelement>link</xmlelement> elements. In this case, the XML fragment has multiple
            root elements and to make it well-formed, you can wrap it in an
              <xmlelement>html</xmlelement> element. This element tag will be filtered out and only
            its children will be copied to the output documents. Similarly, you can wrap your
            content in <xmlelement>head</xmlelement>, <xmlelement>body</xmlelement>,
              <xmlelement>html/head</xmlelement>, or <xmlelement>html/body</xmlelement>
            elements.</p>
        </li>
        <li id="li-2"
          product="author developer editor authorEclipse developerEclipse editorEclipse webhelp">
          <p><b>Referencing Resources in the XML File</b> - You can include references to local
            resources (such as JavaScript or CSS files) by using the built-in
              <codeph>${oxygen-webhelp-output-dir}</codeph> macro to specify their paths relative to
            the output
            directory:<codeblock outputclass="language-xml">&lt;html>
  &lt;script type="text/javascript" src="${oxygen-webhelp-output-dir}/js/test.js"/>
  &lt;link rel="stylesheet" type="text/css" 
        href="${oxygen-webhelp-output-dir}/css/test.css" />
&lt;/html></codeblock></p>
          <p>To copy the referenced resources to the output directory, follow the procedure in:
              <xref href="../../topics/copy_resources.dita"/>.</p>
        </li>
        <li id="li-2b"
          product="author developer editor authorEclipse developerEclipse editorEclipse webhelp-responsive ope">
          <p><b>Referencing Resources in the XML File</b> - You can include references to local
            resources (such as JavaScript or CSS files) by using the built-in
              <codeph>${oxygen-webhelp-output-dir}</codeph> macro to specify their paths relative to
            the output
            directory:<codeblock outputclass="language-xml">&lt;html>
  &lt;script type="text/javascript" src="${oxygen-webhelp-output-dir}/js/test.js"/>
  &lt;link rel="stylesheet" type="text/css" 
        href="${oxygen-webhelp-output-dir}/css/test.css" />
&lt;/html></codeblock></p>
          <p>If you want that the path of your resource to be relative to the <xref
              keyref="wh-publishing-template">templates directory</xref>, you can use the
              <codeph>${oxygen-webhelp-template-dir}</codeph> macro.</p>
          <p>To copy the referenced resources to the output directory, follow the procedure in:
              <xref keyref="whr-copy-additional-resources"/>.</p>
        </li>
        <li id="li-3">
          <p><b>Inline JavaScript or CSS Content</b>:</p>
          <p>JavaScript:<codeblock outputclass="language-xml">&lt;script type="text/javascript">
    /* Include JavaScript code here. */
 
    function myFunction() {
      return true;
    }
&lt;/script> </codeblock></p>
          <p>CSS:<codeblock outputclass="language-xml">&lt;style>
    /* Include CSS style rules here. */

    *{
      color:red
    } 
&lt;/style></codeblock><note>
              <p>If you have special characters (for example, <codeph>&amp;</codeph>,
                  <codeph>&lt;</codeph>) that break the well-formedness of the XML fragment, it is
                important to place the content inside an XML comment.</p>
              <p><b>[Important]</b> The XML comment tags (both the start and end tags) must be on
                lines by themselves. If they are on the same line as any of the script's content, it
                will likely result in a JavaScript error.</p>
              <codeblock outputclass="language-xml">&lt;script type="text/javascript">
  &lt;!--
    /* Include JavaScript code here. */
 
    function myFunction() {
      return true;
    }
  --/>
&lt;/script> </codeblock>
            </note></p>
        </li>
      </ul></p>
    <note type="important"
      product="author developer editor authorEclipse developerEclipse editorEclipse"
      id="note-command-line">Running WebHelp transformations from a script outside of <b>Oxygen XML
        Editor/Author</b> requires an additional license and some additional setup:<ul>
        <li>You must have a valid license for the <b>Oxygen XML WebHelp Plugin</b> (<xref
            href="https://www.oxygenxml.com/buy_webhelp.html" format="html" scope="external"
          />).</li>
        <li>The <b>Oxygen XML WebHelp Plugin</b> must be installed and integrated.</li>
      </ul></note>
    <p><!--WebHelp UG variant--></p>
    <note type="important" id="note-command-line-WHUG" product="webhelp webhelp-responsive">Running
      WebHelp transformations from a command-line script requires the following:<ul>
        <li>A valid license for the <b>Oxygen XML WebHelp Plugin</b> (<xref
            href="https://www.oxygenxml.com/buy_webhelp.html" format="html" scope="external"
          />).</li>
        <li product="webhelp">The <b>Oxygen XML WebHelp Plugin</b> must be installed and integrated
          for a <xref href="../../topics/wh-docbook-getting-started.dita#wh-docbook-getting-started"
            >DocBook XSL Distribution</xref>.</li>
        <li product="webhelp-responsive">The <b>Oxygen XML WebHelp Plugin</b> must be installed and
          integrated for the <abbreviated-form keyref="glossentry-dita-ot"/>.</li>
      </ul></note>
    <p>
      <ul id="webhelp-plugin-outputs">
        <li id="webhelp-classic"><uicontrol>webhelp</uicontrol> - The transformation that produces
            <uicontrol>WebHelp Classic</uicontrol> output for DocBook.</li>
        <li id="webhelp-classic-feedback"><uicontrol>webhelp-feedback</uicontrol> - The
          transformation that produces feedback-enabled <uicontrol>WebHelp Classic with
            Feedback</uicontrol> for DocBook.</li>
        <li id="webhelp-responsive"
          product="author developer editor authorEclipse developerEclipse editorEclipse webhelp-responsive"
            ><uicontrol>webhelp-responsive</uicontrol> - The transformation that produces
            <uicontrol>WebHelp Responsive</uicontrol> output for DITA projects.</li>
      </ul>
    </p>
    <!--reused codeblock-->
    <codeblock outputclass="language-xml" id="publishing-templates-codeblock">&lt;publishing-template>
    &lt;name>Flowers&lt;/name>
    &lt;description>Flowers themed light-colored template&lt;/description>

    &lt;webhelp>
        &lt;tags>
            &lt;tag>purple&lt;/tag>
            &lt;tag>light&lt;/tag>
        &lt;/tags>
        &lt;preview-image file="flowers-preview.png"/>
        &lt;resources>
            &lt;css file="flowers-wh.css"/>
            &lt;css file="flowers-page-styling.css"/>
        &lt;/resources>
        &lt;parameters>
            &lt;parameter name="webhelp.show.main.page.tiles" value="no"/>
            &lt;parameter name="webhelp.show.main.page.toc" value="yes"/>
        &lt;/parameters>
    &lt;/webhelp>
    &lt;pdf>
        &lt;tags>
            &lt;tag>purple&lt;/tag>
            &lt;tag>light&lt;/tag>
        &lt;/tags>
        &lt;preview-image file="flowers-preview.png"/>
        &lt;resources>
            &lt;css file="flowers-pdf.css"/>
            &lt;css file="flowers-page-styling.css"/>
        &lt;/resources>
        &lt;parameters>
            &lt;parameter name="show.changes.and.comments" value="yes"/>"/>
        &lt;/parameters>
    &lt;pdf>
&lt;/publishing-template></codeblock>
    <!--Output Class predefined values-->
    <ul id="ul-output-class-values">
      <li>language-bourne</li>
      <li>language-c</li>
      <li>language-cpp</li>
      <li>language-csharp</li>
      <li>language-css</li>
      <li>language-ini</li>
      <li>language-java</li>
      <li>language-javascript</li>
      <li>language-json</li>
      <li>language-lua</li>
      <li>language-perl</li>
      <li>language-php</li>
      <li>language-python</li>
      <li>language-ruby</li>
      <li>language-sql</li>
      <li>language-xml</li>
      <li>language-xquery</li>
    </ul>
    <!--DITA OT project file note-->
    <note type="tip" id="note-dita-ot-project-file"
      product="author developer editor authorEclipse developerEclipse editorEclipse webauthor pdf-css webhelp-responsive ope"
      >You can also start the <codeph>dita</codeph> process by passing it a <xref
        href="https://www.dita-ot.org/dev/topics/using-project-files.html" format="html"
        scope="external">DITA OT Project File</xref>. Inside the project file you can specify as
      parameters for the <codeph>webhelp-responsive</codeph> transformation type the WebHelp-related
      parameters.</note>
  </body>
</topic>
